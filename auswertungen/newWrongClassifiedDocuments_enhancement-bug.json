[{"classified_as": "enhancement", "text": "Affects P5 but also drakengard 3 and project diva. \r\n\r\nCan be temporarily fixed by unplugging my speakers and plugging them back in, after a period of intense crackling it goes away for a short time (a few minutes at least.) \r\n\r\nprobably partly pulse's fault but only rpcs3 is having this issue for me. "}, {"classified_as": "enhancement", "text": "It looks like the tap method is flaky, or at least the test for it is.\r\n\r\nhttps://travis-ci.org/GoogleChrome/puppeteer/jobs/271528560"}, {"classified_as": "enhancement", "text": "Since #6336 there's an issue where metadata gets doubled if a recalculation is deemed necessary. The reason is that we will have loaded the existing metadata, then do a recalc by adding all files without clearing it first."}, {"classified_as": "bug", "text": "**Informations**\r\n\r\n- Node v9.7.1\r\n- npm 5.6.0\r\n- Strapi 3.0.0-alpha.11\r\n- MongoDB\r\n- Ubuntu\r\n\r\n**What is the current behavior?**\r\nWhen changing a field from unique to non-unique the change is not made on the MongoDB schema. So whenever we try to POST a new document with same field value as an existant document MongoDB will reject the query, even though Strapi allows it.\r\n\r\n**Steps to reproduce the problem**\r\n1 - Create a field in a \"Content Type\" with \"unique\" checked. (I have used with an integer)\r\n2 - Create a document and put some random value in the unique field.\r\n3 - Now go back in Content Type Editor and uncheck the \"unique\" box of this field. Save.\r\n4 - Try to POST a new document with the same value of the unique field.\r\n5 - MongoDB will reject the insert.\r\n\r\n**What is the expected behavior?**\r\nThat Strapi changes MongoDB \"index\" to non-unique.\r\n\r\n---\r\n\r\n- [x] I'm sure that this issue hasn't already been referenced\r\n\r\n"}, {"classified_as": "bug", "text": "A previous pull request was made for this, but it had to be undone due to too many issues.\n\n![one](https://cloud.githubusercontent.com/assets/1820165/5601174/437f2250-92b6-11e4-886f-8c1317f9d38f.png)\n\n![two](https://cloud.githubusercontent.com/assets/1820165/5601196/3e8a7dac-92b7-11e4-8271-25abff5517a9.png)\n\nI choose not to allow customization of the button and list selector for now because that causes many complications and shouldn't be necessary, since selectors should generally be neutral on Android 4.4 and above. This maintains easy ripple support on API 21, also. If you make the background color a dark color (like the one shown in the screenshots above): you should also apply the dark theme, so that list and button selectors use the lighter variation, and so that the title and list item text colors are lighter by default.\n"}, {"classified_as": "bug", "text": "**Describe the bug**\r\nThe default _limit for the find() is currently fixed to 100. I can't understand why the team picked it is 100? why wouldn't be 10 or 50?.\r\n\r\nIf some one needed to fetch default 50 records for all end point of find(), at-least he have to edit all request URL or needed to override the current find() handle.\r\n\r\nThis may not be a bug for the team, but for best framework we need to control constant values at configuration level.\r\n\r\n**Steps to reproduce the behavior**\r\n1. Start strapi app\r\n2. create product collection\r\n3. goto http://localhost:1337/products\r\n4. you can see the limitation of 100 products when there are more than 100 products\r\n\r\n**Expected behavior**\r\nThe configuration must be present.\r\n\r\n**System**\r\n- Node.js version: v12.13.0\r\n- NPM version: 6.12.0\r\n- Strapi version: v3.0.0-beta.18.4\r\n- Database: MongoDB\r\n- Operating system: Windows\r\n"}, {"classified_as": "enhancement", "text": "https://github.com/polkadot-js/api/tree/master/docs/examples/promise#development-accounts"}, {"classified_as": "bug", "text": "**Describe the bug**\r\nSince updating to version *v3.0.0-beta.16.4* I somehow expirience an issue where the different Icons in front of the Content-Type name are not aligned perfectly centered. This is a totally astethic issue and does not effect functionality in any way, matter of fact it's unpleasant.\r\n\r\n**Steps to reproduce the behavior**\r\n1. Update to version v3.0.0-beta.16.4 or higher.\r\n2. Take a look at the side-nav.\r\n\r\n**Expected behavior**\r\nThe icons should be centered like in previous versions.\r\n\r\n**Screenshots**\r\n\r\n![sidenav-strapi](https://user-images.githubusercontent.com/36916632/65301250-e9675d00-db76-11e9-8e08-45183d60015e.PNG)\r\n\r\n**Code snippets**\r\nNot applicable.\r\n\r\n**System**\r\n- Node.js version: 12.10.0\r\n- NPM version: 6.11.3\r\n- Strapi version: v3.0.0-beta.16.5\r\n- Database: MongoDB\r\n- Operating system: Windows Server 2002 R2\r\n"}, {"classified_as": "enhancement", "text": "On Alex -\r\n\r\n![image](https://user-images.githubusercontent.com/1424473/59966905-e088d000-9522-11e9-96a7-297ad3129d4a.png)\r\n\r\n{\"jsonrpc\":\"2.0\",\"method\":\"state_storage\",\"params\":{\"result\":{\"block\":\"0xbfb1676a357e772c854d88aaee13614a08ffe67bf4b59160481828e03982dbf7\",\"changes\":[[\"0x107e8d8b935b2cfcd4b80ed517149a49\",\"0x210100000000000000000000000000000000000000000000000000000000000000000000000000000000011b4d03dd8c01f1049143cf9c4c817e4b167f1d1b83e5c6f0f10d89ba1e7bce\"]]},\"subscription\":145305}}\r\n\r\nWith an Option<...> type the length is added by the Rust side, but not by the JS side. So, without looking at the code, it seems with Option, we just call the toHex() of the containing class when isSome. Rather what should happen is to call toU8a() of the containing class and then u8aToHex that.\r\n\r\nOr rather ... it could be our convert-to-bytes and then convert-to-whatever converter in storage. Either way, we are not doing what is expected."}, {"classified_as": "bug", "text": "Font spacing seems to be inconsistent between headless and non headless mode.\r\nThis is likely a Chromium bug for Puppeteer versions 1.2.0 and above.\r\n\r\n### Steps to reproduce\r\n\r\n**Tell us about your environment:**\r\n\r\n* Puppeteer version: 1.2\r\n* Platform / OS version: Linux\r\n* URLs (if applicable):\r\n* Node.js version: 8.6.0\r\n\r\n**What steps will reproduce the problem?**\r\n\r\n1. screenshot.js\r\n\r\n'use strict';\r\n\r\nconst puppeteer = require('puppeteer');\r\n\r\n(async() => {\r\n  const browser = await puppeteer.launch({ headless: true }); // toggle to false\r\n  const page = await browser.newPage();\r\n  await page.goto('file:///tmp/test.html');\r\n  await page.waitFor(5000);\r\n  await page.screenshot({path: '/tmp/screenshot.png'});\r\n  await browser.close();\r\n})();\r\n\r\n2. test.html\r\n\r\n<html>\r\n  <head>\r\n    <link rel=\"stylesheet\"\r\n          href=\"https://fonts.googleapis.com/css?family=Lato\">\r\n    <style>\r\n      body {\r\n        font-family: 'Lato', serif;\r\n        font-size: 15px;\r\n      }\r\n      div.a {\r\n        line-height: 0.5;\r\n      }\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <div class=\"a\">\r\n      <div>aaaaa..............................................................................|111</div><br>\r\n      <div>qwertyasdfzxcvyuiohjklbnm................................|222</div><br>\r\n      <div>longlonglonglonglonglonglonglongshorty......|333</div>\r\n    </div>\r\n  </body>\r\n</html>\r\n\r\n3. node /tmp/screenshot.js, then repeat with headless: false \r\n\r\n**What is the expected result?**\r\nText is correctly aligned and looks the same as opening the HTML in browser. headless: false\r\n\r\n![headless_false](https://user-images.githubusercontent.com/1380839/38925691-f36ba690-4332-11e8-96b4-a1cc0e784e60.png)\r\n\r\n**What happens instead?**\r\nText is misaligned with headless: true\r\n\r\n![headless_true](https://user-images.githubusercontent.com/1380839/38925690-f33bcfce-4332-11e8-9a19-0ef463f032e9.png)"}, {"classified_as": "bug", "text": "I think it is like a little bug in documentation:\r\n\r\nLook at https://strapi.io/documentation/3.0.0-beta.x/advanced/hooks.html\r\ninside initialize, this is a Function \r\n\r\n![image](https://user-images.githubusercontent.com/7165997/62385239-cea04100-b554-11e9-8e00-08aa13c3214a.png)\r\n\r\nif we want to get access to hook config (from defaults) inside initialize function, we can get it:\r\nthis().defaults['myConfig'] or strapi.config.hook.settings.myhook['myConfig']\r\n\r\n**System**\r\n- Node.js version: 10.15.1\r\n- NPM version: 6.4.1\r\n- Strapi version: 3.0.0-beta.13"}, {"classified_as": "bug", "text": "\r\nPATCH /items/<col>/<pk>/rollback/<id>\r\n\r\n\r\nshould be:\r\n\r\n\r\nPATCH /items/<col>/<pk>/revert/<id>\r\n\r\n"}, {"classified_as": "bug", "text": "Right now, the /permissions endpoint returns all permissions, with /permissions/:id returning a single permission record based on the primary key. While this lowlevel endpoint is required for the app to work, it's not the most useful for when you actually have to work with permissions.\r\n\r\nA very big use case for permissions is fetching the currently-logged-in user's permissions based on a single collection.\r\n\r\nIn order to accommodate this use case, we should two new endpoints: /permissions/me and /permissions/me/:collection.\r\n\r\nBoth these endpoints have to fetch the user's role-IDs, and use those to fetch the permissions from the directus_permissions collection. These endpoints should also return a default permission (everything turned off) if there's no records in directus_permissions.\r\n\r\n## Data flow\r\n\r\n### /permissions/me\r\n1. Fetch records from directus_user_roles where user equals the user ID in the token\r\n2. Fetch records from directus_permissions where role is in the IDs from 1\r\n\r\n### /permissions/me/:collection\r\n1. Fetch records from directus_user_roles where user equals the user ID in the token\r\n2. Fetch records from directus_permissions where role is in the IDs from 1 and where collection equals the requested collection\r\n3. If there's no records to be returned, return the default:\r\n\r\njson\r\n{\r\n  \"data\": [\r\n    {\r\n      \"id\": <id>,\r\n      \"collection\": <collection>,\r\n      \"role\": <role>,\r\n      \"status\": null,\r\n      \"create\": \"none\",\r\n      \"read\": \"none\",\r\n      \"update\": \"none\",\r\n      \"delete\": \"none\",\r\n      \"navigate\": \"none\",\r\n      \"comment\": \"none\",\r\n      \"allowed_statuses\": [],\r\n      \"read_field_blacklist\": [],\r\n      \"write_field_blacklist\": []\r\n    }\r\n  ]\r\n}\r\n\r\n\r\n**NOTE**:  certain directus_ collections have different defaults. \r\n\r\n## Misc\r\n\r\nThe /permissions/me/:collection endpoint can return either an Object or an Array. An Array will be returned when the collection has permissions based on the workflow (eg status is set)."}, {"classified_as": "bug", "text": "**Describe the bug**\r\nIt appears the [index.html](https://github.com/strapi/strapi/blob/master/packages/strapi/lib/middlewares/public/index.html) [still?] references assets on strapi.io. It also appears this asset is blocked due to a referral policy.\r\n\r\n**Steps to reproduce the behavior**\r\n\r\n1. npx strapi create strapi --quickstart\r\n2. visit http://localhost:1337/\r\n3. Observe logo missing\r\n\r\n**Expected behavior**\r\nLogo should be present.\r\n\r\n**Screenshots**\r\n![2020-05-20 14_50_04-Welcome to your Strapi app](https://user-images.githubusercontent.com/10567322/82485421-64d43200-9aa9-11ea-8604-31db51f29e2f.png)\r\n\r\n**System**\r\n\r\n- strapi/strapi:3.0.0-beta.20.3 docker image\r\n- Node.js version: v12.13.0\r\n- Database: mongo\r\n"}, {"classified_as": "enhancement", "text": "The latest published version for @polkadot/storage is 0.38.10 but for other packages are 0.38.11\r\nI am having issue that yarn cannot find @polkadot/storage 0.38.11 and have to manually pick a version as fallback.\r\n\r\nFrom version history you can also see 0.38.6 and few other versions are skipped as well. \r\n\r\nI noticed that packages/type-storage is published lastly, may have some race condition that CI process completes before the version is successfully published?\r\n\r\nhttps://www.npmjs.com/package/@polkadot/storage\r\n\r\nIt seems like yarn may fail to publish and yet still report as success https://github.com/yarnpkg/yarn/issues/5931 https://github.com/yarnpkg/yarn/issues/6200"}, {"classified_as": "enhancement", "text": "When we\u2019re setting docExpansion: 'none' in configuration, then giving someone a permalink to a particular endpoint inside a tag, and them clicking it doesn\u2019t do anything for them.\r\n\r\nAfter the page opens for them, all endpoints are still *not expanded*, as if there was no /#/permalink/part in the URL."}, {"classified_as": "enhancement", "text": "Running through the Vue tutorial in the playground, lesson 3 step 7 says drag a TabView from the component selector on the left. But there's no TabView component in the selector. I can only find a Tabs navigation component. Has something changed here, or am I missing something obvious..?\r\n\r\n"}, {"classified_as": "enhancement", "text": "I've been having issues trying to hover an svg element using elementHandle.hover(), now using page.evaluate(element => element.getBoundingClientRect(), elementHandle) works so I'm not sure why it throws an error for .hover().\r\n\r\nHere's a minimal example that causes it:\r\n\r\n[puppeteer-svg-hover-test.zip](https://github.com/GoogleChrome/puppeteer/files/1436011/puppeteer-svg-hover-test.zip)"}, {"classified_as": "enhancement", "text": "I have that message on all available Macs although all of them are configured to use IPv6.\n\nWhile debugging iOS version, I've found that IPv6 multicasting on iOS requires to configure IPV6_MULTICAST_IF and IPV6_ADD_MEMBERSHIP with an exact interface index set, i.e. passing 0 will not work.\n\nI think that should do the trick on OS X too.\n"}, {"classified_as": "bug", "text": "<!--\r\nHello \ud83d\udc4b Thank you for submitting an issue.\r\n\r\nBefore you start, please make sure your issue is understandable and reproducible.\r\nTo make your issue readable make sure you use valid Markdown syntax.\r\n\r\nhttps://guides.github.com/features/mastering-markdown/\r\n-->\r\n\r\n**Describe the bug**\r\nIf you try to override the count callback in the controller as described [in the documentation](https://strapi.io/documentation/3.0.0-beta.x/concepts/controllers.html#core-controllers), the callback gets called fine via REST but will not get called via GraphQL. Unless you override the GraphQL Aggregator resolver to call the controller (see additional info). I'm thinking this caused by [this](https://github.com/strapi/strapi/blob/master/packages/strapi-plugin-graphql/services/Aggregator.js#L356)\r\n\r\n**Steps to reproduce the behavior**\r\n1. Override count callback in the controller\r\njs\r\nmodule.exports = {\r\n    count(ctx) {\r\n        console.log(\"Ad controller: count\");\r\n        if (ctx.query._q) {\r\n            return strapi.services.ad.countSearch(ctx.query);\r\n        }\r\n        return strapi.services.ad.count(ctx.query);\r\n    },\r\n};\r\n\r\n2. Test the controller via REST [http://localhost:1337/ads/count](http://localhost:1337/ads/count)\r\n3. Test the controller via GraphQL\r\ngraphql\r\nquery {\r\n  adsConnection {\r\n    aggregate {\r\n      count\r\n    }\r\n  }\r\n}\r\n\r\n4. See the log\r\n\r\n**Expected behavior**\r\ncount callback should still be called via GraphQL.\r\n\r\n**Screenshots**\r\nLog via REST\r\n![image](https://user-images.githubusercontent.com/32438205/74593674-53215f80-5060-11ea-8089-881db23b0b8e.png)\r\nLog via GraphQL\r\n![image](https://user-images.githubusercontent.com/32438205/74593688-74824b80-5060-11ea-95b1-5439ef5a9f4e.png)\r\n\r\n**Additional info**\r\nHow do I manually override GraphQL Aggregator resolver:\r\njs\r\nmodule.exports = {\r\n  resolver: {\r\n    AdAggregator: {\r\n      count(args) {\r\n        return strapi.controllers.ad.count({\r\n          query: args.where || {}\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n\r\n**System**\r\n- Node.js version: v10.16.0\r\n- Yarn version: 1.21.1\r\n- Strapi version:  Strapi v3.0.0-beta.18.7\r\n- Database: MongoDB\r\n- Operating system: Windows 10\r\n"}, {"classified_as": "enhancement", "text": "**Environment**\r\n- 6.1.0 running on both platforms but focusing on iOS \r\n- Angular 8.2.0\r\n- tns-ios: 6.1.0\r\n- tns-android 6.1.2\r\n\r\n**Describe the bug**\r\nI have been stuck at this issue for a while now and I'm starting to think it's a bug in NativeScript implementation. So any feedback would be appreciated.\r\n\r\nSo I have this page which seems pretty standard. It has an ActionBar at the top, scrollable content in the form of messages and then at the bottom a sticky input with a button.\r\n\r\nWhat I would like to achieve is the following behaviour present in many other apps:\r\n\r\nWhen I click in the TextView the focus goes on the whole area (the whole formGroup)\r\nWhen I start typing, the view would remains focused (currently removing the ScrollView #pageScrollView or disabling scroll will make the page jump as soon as you start typing)\r\nScrolling should be only available in the messages so you should never be able to hide the formGroup\r\n\r\n\r\n<ScrollView #pageScrollView>\r\n  <GridLayout rows=\"*, auto, auto\" class=\"page-conversation\" width=\"100%\" height=\"100%\">\r\n\r\n    <ScrollView\r\n      orientation=\"vertical\"\r\n      #messagesScrollView\r\n    >    \r\n      <StackLayout class=\"messages\">\r\n        <StackLayout\r\n          orientation=\"vertical\"\r\n          *ngFor=\"let message of messages\"\r\n          class=\"message\"\r\n          [ngClass]=\"{\r\n            'message--received': message.reply,\r\n            'message--sent': !message.reply\r\n          }\"\r\n        >\r\n          <Label class=\"message-content\" textWrap=\"true\" [text]=\"message['content']\"></Label>\r\n          <Label class=\"message-timestamp\" [text]=\"message['timestamp'] | date:'dd.MM.yy, hh:mm'\"></Label>\r\n        </StackLayout>\r\n      </StackLayout>\r\n    </ScrollView>\r\n\r\n    <GridLayout\r\n      rows=\"auto, 50\"\r\n      columns=\"*, *, *, auto\"\r\n      row=\"1\"\r\n      class=\"compose\"\r\n    >\r\n      <StackLayout row=\"0\" rowSpan=\"1\" col=\"0\" colSpan=\"4\" [formGroup]=\"form\">\r\n        <TextView\r\n          hint=\"Enter message\" \r\n          #newMessage\r\n          formControlName=\"newMessage\"\r\n          [text]=\"\"\r\n          required\r\n          (focus)=\"onFocus($event)\"\r\n          (blur)=\"onBlur($event)\"\r\n          [autocorrect]=\"false\"\r\n          class=\"textarea\"\r\n          autocapitalizationType=\"none\"\r\n        ></TextView>\r\n      </StackLayout>\r\n      <StackLayout row=\"1\" col=\"0\" class=\"option\">\r\n        <Label text=\"test\"></Label>\r\n      </StackLayout>\r\n      <StackLayout row=\"1\" col=\"1\" class=\"option\">\r\n        <Label text=\"test\"></Label>\r\n      </StackLayout>\r\n      <StackLayout row=\"1\" col=\"2\" class=\"option\">\r\n        <Label text=\"test\"></Label>\r\n      </StackLayout>\r\n      <StackLayout row=\"1\" col=\"3\" class=\"option\">\r\n        <Button\r\n          #composeArea\r\n          text=\"Send msg\"\r\n          class=\"send-button\"\r\n        ></Button>\r\n      </StackLayout>\r\n    </GridLayout>\r\n\r\n  </GridLayout>\r\n</ScrollView>\r\n\r\n\r\nSo I think the main point of concern here would be the behaviour of ScrollView and/or TextView."}, {"classified_as": "bug", "text": "It aims to be a lightweight ABI implementation and could replace the internal Solidity coder. Also supports Serpent type notation and Solidity's tight packing methods (sha3(1, \"hello\", 0x1234)).\n\nIt is currently used in browser-solidity for decoding response values.\n"}, {"classified_as": "bug", "text": "**What is the current behavior?**\r\nLoading too slow\r\nScreen unresponsive\r\n\r\n**Steps to reproduce the problem**\r\n- Create 2 content types\r\n- Create relation between content types ( has many )\r\n- Seed with some items ( i'm trying with 10.000)\r\n- Navigate in content manager, select an item, wait for the results.\r\n\r\n**What is the expected behavior?**\r\nExpected a fast loading of the section, in fact the query is loading all documents. Too long, 2-3 minutes.\r\n\r\n**Suggested solutions**\r\nChecked: content-manager/explorer/{content-type}/{id}?source=content-manager\r\nIt is loading all documents from db, why is needed ?\r\n\r\n**Tested on**\r\nNode: 10.13.0\r\nStrapi: 3.0.0-alpha.14.5,15,16\r\nMongo: 3.6.3\r\nGoogle Chrome: 70.0.3538.110"}, {"classified_as": "bug", "text": "I'm using an Option<MyType> in a custom extrinsic signed payload.\r\nThe expected behavior is unclear for the None case. \r\nThe rust side expects a 0 to be encoded for the signature to verify.\r\nThis implementation encodes nothing for None when isBare = true\r\n\r\nOption is an implementation detail so it seems that polkadot-js/api is taking the correct approach here but the change will be much harder to implement on the substrate side.\r\n\r\nhttps://github.com/polkadot-js/api/blob/56dc116d92ed3de5994e3dc7c767940617e088e9/packages/types/src/codec/Option.ts#L133-L149"}, {"classified_as": "enhancement", "text": "All latest, xcode 11 and official iOS 13:\r\n\r\nWhen you swipe to close a modal (new native control), frame.topmost().currentPage.modal is not cleared out.\r\n\r\nOne side effect is this:\r\nOpen a modal, swipe to dismiss it, then try to open a dialog. \r\n\r\nThis line in dialogs fails:\r\n\r\nvar currentView = dialogs_common_1.getCurrentPage() || application_1.getRootView();\r\n    if (currentView) {\r\n        currentView = currentView.modal || currentView;\r\n\r\n\r\ncurrentView becomes currentView.modal, which is gone, so the dialog is not presented."}, {"classified_as": "enhancement", "text": "The documented oauth2RedirectUrl option in swaggerUI doesn't actually get used in the /auth calls to the oauth2 provider.\n"}, {"classified_as": "enhancement", "text": "Repro:\r\n- replace this line https://github.com/polkadot-js/api/blob/master/packages/api/src/promise/types.d.ts#L10\r\nwith import { Codec } from '@polkadot/types/codec';\r\n- tsc --noEmit\r\n\r\nExpected:\r\nCompiler should throw, because the import does not exist.\r\n\r\nActual:\r\nIt passes."}, {"classified_as": "enhancement", "text": "Currently the code relies on the class name\r\n\r\nhttps://github.com/polkadot-js/api/blob/90a2e26540b9800325e207c91b0b8d2556900fb4/packages/types/src/codec/EnumType.ts#L67\r\n\r\nHowever create-react-app prod build minifies the js code and mangle the class name (most of them end up been t), and breaks EnumType\r\n\r\n"}, {"classified_as": "enhancement", "text": "I paused this thing way back and it just keeps on syncing. New connections are prevented but existing ones are not terminated.\r\n\r\n<img width=\"571\" alt=\"Screenshot 2019-07-19 at 12 07 44\" src=\"https://user-images.githubusercontent.com/125426/61527971-f607f180-aa1d-11e9-8eca-37b996c8298a.png\">\r\n"}, {"classified_as": "enhancement", "text": "Colons should not be encoded in URL path segments, according to https://tools.ietf.org/html/rfc3986#section-3.3"}, {"classified_as": "enhancement", "text": "I believe this issue has been there since the very early stage and not a regression from any recent PR.\r\nI also believe the same issue also occurs on ToCS1. \r\n\r\nIn some scenes, some of the objects (e.g. rooftops, the top of a train, top of a crate box) having abnormally high brightness. \r\nBelow is an example of those, where some carpets in the room are very bright (as if the sun was shining at it).\r\n![1](https://user-images.githubusercontent.com/6214348/59938317-3ad45300-9487-11e9-9ab0-55375f4ce15b.PNG)\r\n\r\nSince it doesn't really affect the gameplay and only cause very minor graphic issue, I didn't bother to raise it previously.\r\n\r\nEDIT: Let me know what is needed for debugging. Logs? renderdoc? "}, {"classified_as": "bug", "text": "How could we get data city wise ?"}, {"classified_as": "enhancement", "text": "I am not convinced this is correct - \r\n\r\nhttps://github.com/polkadot-js/api/blob/master/packages/types/src/codec/Enum.ts#L215-L225\r\n\r\nBasically, to determine equality, surely the index should match as well?  (At the very least when comparing 2 Enums, i.e. typeof Enum - which is actually missing here, unlike others)\r\n\r\nWe should also be able to compare 2 and enum against the JSON value\r\n\r\njs\r\nconst TEST_A = { a: 'test };\r\nconst TEST_B = { b: 'test };\r\n\r\nconst testA = new Enum({ a: Text, b: Text }, TEST_A);\r\nconst testB = new Enum({ a: Text, b: Text }, TEST_B);\r\n\r\nconsole.log(testA.eq(TEST_A)) // should be true\r\nconsole.log(testB.eq(TEST_A)) // should be false\r\nconsole.log(testA.eq(testB)) // should be false\r\nconsole.log(testA.eq('test')) // probably true as per current\r\n\r\n"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n**What is the expected behavior?**\r\n\r\nWe had :ressource/count route to count entries for mongoose. We have to get the same feature for bookshelf.\r\n\r\nRelated to: https://github.com/strapi/strapi/pull/1293\r\n\r\n<!--  Make sure to browse the opened and closed issues before submit your issue. -->\r\n"}, {"classified_as": "bug", "text": "**What would you like to be added**:\r\nWe would like to see an official multi-arch kubctl docker image\r\n\r\n**Why is this needed**:\r\nWe find ourselves needing to use kubectl as a pod various time. So, we maintain our own amd64 variant of the kubectl docker image. We see that other vendors also maintain their own kubectl image, example, https://github.com/rancher/kubectl . I don't speak for Rancher. But it seems that upstream can easily provide a multi-arch kubectl docker image.\r\n"}, {"classified_as": "bug", "text": "<!--\r\nHello \ud83d\udc4b Thank you for submitting an issue.\r\n\r\nBefore you start, please make sure your issue is understandable and reproducible.\r\nTo make your issue readable make sure you use valid Markdown syntax.\r\n\r\nhttps://guides.github.com/features/mastering-markdown/\r\n-->\r\n\r\n#### Describe the bug\r\n\r\nAs my project has grown, I have seen the administration panel become slower and slower. Today I found one of the reasons: The auto population.\r\n\r\nFor example, if I have a Post model with an authors field.\r\nAnd this authors field is a relationship with the User model.\r\nWhen I create a new post, and search users in the authors dropdown, the query get **all** the user information, with their auto populated relations. And this is crazy! \ud83d\ude05 \r\n\r\nAnd it gets worse now when my User model has more than 10 relationships.\r\n\r\n#### Expected behavior\r\n\r\nJust request the minimum information: they key to show in the dropdown selector.\r\n\r\n#### System\r\n- Node.js version: v12\r\n- NPM version: v6\r\n- Strapi version: v3.0.0-beta.18.2\r\n- Database: MongoDB\r\n- Operating system: macOS\r\n"}, {"classified_as": "enhancement", "text": "rel/details: https://github.com/playproject-io/datdot-substrate/issues/18\r\n\r\nWhen we make the same extrinsic call using multiple accounts (calling signAndSend on the same extrinsic using multiple pairs) practically simultaneously, the callback object appears to return the same events for every call - when each call should in reality return unique events.\r\n\r\nHere is the exact code where this occurs:\r\n\r\nhttps://github.com/joshua-mir/datdot-service/blob/e5ee50b3b5080c9cafaae71cae9deff2e6ec249b/index.js#L175-L228\r\n\r\nI have confirmed that we see every expected event separately in the UI - so this appears to be an issue specific to events in callbacks."}, {"classified_as": "enhancement", "text": "Got a javascript error that refreshNeed doesn't exist - cause is clearly #6452 thus it's RC material (forgot to take a screenshot, but it's trivial really)."}, {"classified_as": "bug", "text": "<!--\r\nHello \ud83d\udc4b Thank you for submitting a feature request.\r\n\r\nWe are using ProductBoard to manage our roadmap and feature requests.\r\n\r\nCan you please submit your feature request here: https://portal.productboard.com/strapi\r\n-->\r\n\r\n- [ ] **I have created my request on the Product Board before I submitted this issue**\r\n- [ ] **I have looked at all the other requests on the Product Board before I submitted this issue**\r\n\r\n**Please describe your feature request:**\r\nA pretty simple but powerful feature to add is playground share button.\r\n\r\nRead more here:\r\nhttps://www.prisma.io/blog/introducing-graphql-playground-f1e0a018f05d#sharing-your-playgrounds-using-graphql-bin\r\n\r\nhttps://github.com/strapi/strapi/blob/7c5f1484ba75891043065f6500186baa44013293/packages/strapi-plugin-graphql/hooks/graphql/index.js#L94\r\n\r\nBy adding shareEnabled: true on the file above in side that object. I haven't fully tested it but it started to show up in UI. We could probably make this optional with config but it would be nice feature to have."}, {"classified_as": "enhancement", "text": "In SwaggerUIBundle,validatorUrl set it to false will disable validation is right.\r\n\r\nversion:3.0.6\r\n\r\n"}, {"classified_as": "enhancement", "text": "* **Version**: v11.15.0\r\n* **Platform**: Linux\r\n\r\nRun the following script with node --inspect script.js, connect a debugger with Google Chrome and instruct it to do a heap snapshot.\r\n\r\n**Edit:** See my comment below for a better snippet.\r\n\r\njs\r\nfunction memoryLeak() {\r\n    return new Promise(() => {});\r\n}\r\n\r\nfunction loop() {\r\n    for (let i = 0; i < 10000; i++) {\r\n        memoryLeak();\r\n    }\r\n\r\n    setTimeout(loop, 0);\r\n}\r\n\r\nloop();\r\n\r\n\r\nRoughly half of the time node will crash with \"pure virtual method called\".\r\n\r\nThat code actually causes a [memory leak](https://github.com/nodejs/node/issues/28787), but it will likely be annoying to debug if this isn't fixed first."}, {"classified_as": "enhancement", "text": "Hi,\r\n\r\nWhen creating PDFs from a responsive web page, lets say the page has a css rule to show a narrower version below 1024 pixels screen width and we supply width: \"1024px\" to pdf function. The rule should not apply on this case however it does and the layout changes in generated pdf. \r\n\r\nOnly when the width parameter is **4/3** of the actual width of viewport, then the pdf has exact same layout of given viewport width. This seems to be something related to an inches / points confusion somewhere (96 pixels per inch, 72 pixels per point. 96/72 = 4/3)\r\n\r\nSo, when I provide 1365px as pdf width I get the exact representation of the page at 1024px viewport width. Anything below 1365px, page acts like the viewport is below 1024px and applies the appropriate responsive css rules.\r\n\r\nI'm not sure if this is an upstream bug or something else though. Margins are set to 0 btw. \r\n\r\nAny ideas?"}, {"classified_as": "enhancement", "text": "When set page size in css using @page like\r\n\r\n  @page {\r\n    size: 50mm 50mm;\r\n  }\r\n\r\n page.pdf still output default A4 size pdf"}, {"classified_as": "enhancement", "text": "\r\nHello,\r\n\r\nIs there a REST endpoint for resending verification of emails?  I don't see anything in the documentation.\r\n\r\nThanks."}, {"classified_as": "bug", "text": "- [x] **I have created my request on the Product Board before I submitted this issue**\r\n- [x] **I have looked at all the other requests on the Product Board before I submitted this issue**\r\n\r\n**Please describe your feature request:**\r\n\r\nUsing the following react frontend parts I think we can easily split the current date field option into these three:\r\n\r\n- date (2018/12/30) => https://www.npmjs.com/package/react-date-picker\r\n- datetime (2018/12/30 01:02:03) => https://www.npmjs.com/package/react-datetime-picker\r\n- time (01:02:03) => https://www.npmjs.com/package/react-time-picker\r\n\r\nThis FR falls in line with the current focus on bookshelf date functions: https://github.com/strapi/strapi/issues/2495"}, {"classified_as": "enhancement", "text": "I had some things that could not be scanned (permission denied). I fixed those permissions and want to rescan. I cannot, manually:\r\n\r\n<img width=\"570\" alt=\"Screen Shot 2019-06-10 at 09 38 55\" src=\"https://user-images.githubusercontent.com/125426/59179891-b834c500-8b63-11e9-9b04-f93abd4a79ad.png\">\r\n\r\n(The Rescan button is disabled, presumably because the folder is not in one of the pre-approved scannable states?)\r\n"}, {"classified_as": "enhancement", "text": "This project needs a robust testing framework\n"}, {"classified_as": "bug", "text": "Node.js version: 8.9.0\r\nnpm version: 5.5.1\r\nStrapi version: 3.0.0-alpha.8.3\r\nOperating system: Windows 7 (Enterprise)\r\n\r\nHi, if my understanding of REST is correct (and based on how other frameworks have implemented it eg. Laravel, Rails etc.)\r\nShouldn't all REST methods operate on a plural form of the resource? For example, you'd GET all posts via /posts and not /post and DELETE a specific post via /posts/:id etc.?\r\n\r\n![image](https://user-images.githubusercontent.com/1525669/35305378-032d0590-0091-11e8-91f9-6e39cef9ebb3.png)\r\n\r\nThanks."}, {"classified_as": "enhancement", "text": "Wherever we build glob patterns based on existing file names we need to take care of the fact that they can contain things like [-] which gets interpreted as a broken character range.\n\nProbably we need a well tested utility function to build these patterns, or use something other than globbing.\n"}, {"classified_as": "enhancement", "text": "Hi,\n\nI took update of Swagger-UI today and found that I do not have Parameters section to give input values for GET resources.\n\nDo I need to change something to get this section back?\n\nThanks,\nKunjan\n"}, {"classified_as": "bug", "text": "**Node.js version**: 8.9\r\n\r\n**npm version**: 5.5\r\n\r\n**Strapi version**: 3.0.0-alpha.11.1\r\n\r\n**Operating system**: CentOS 7\r\n\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nMaybe it is a Bug.\r\n\r\n**What is the current behavior?**\r\nI'm not able to create a user in production environment cause i'm getting an \"CSRF is required\" message.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce the problem**\r\n1 - Run strapi in production mode.\r\n2 - Try to create a user using API or Admin (the same error occurs in both) \r\n3 - The response error is like bellow:\r\n{\r\n    \"message\": \"CSRF token mismatch: CSRF token mismatch\",\r\n    \"statusCode\": 403,\r\n    \"error\": \"Forbidden\"\r\n}\r\n\r\nSo, what can i do to solve this? I know that i can disable csrf, but there is a better way? Why csrf is requested even in an API call?\r\n\r\n**What is the expected behavior?**\r\nI wan't to be able to create users in production."}, {"classified_as": "enhancement", "text": "if using ApiPromise, it can be easily reproduced by executing await api.derive.chain.bestNumber() and (await api.rpc.chain.getHeader()).blockNumber repeatedly.\r\n\r\nI think the current cache solution works only for rxjs because an observable is a stream, you still can get latest from it even you hold a cached one. but for promise it's one shot thing.\r\n\r\nwhen the observable is toPromised, it will be terminated after first result, makes caching it meaningless."}, {"classified_as": "enhancement", "text": "This page I found on twitter does not work and returns 502\r\nhttps://blog.strapi.io/content-internationalization-with-strapi/\r\n\r\nTwitter link:\r\nhttps://twitter.com/strapijs/status/1041613814209421313?lang=en\r\n\r\nScreenshot:\r\n![image](https://user-images.githubusercontent.com/3635348/90511259-1a1f9000-e154-11ea-952d-b674a36ff5de.png)\r\n\r\n"}, {"classified_as": "enhancement", "text": "@polkadot/type-extrinsic: static.d.ts\r\n\r\nimport(\"../../types/src/primitive/Method\").ModulesWithMethods;\r\n\r\n\r\n@polkadot/api-derive: util/cached.d.ts:\r\n\r\nexport declare const cache: (fn: Function, map?: WeakMap<object, any>) => (api: import(\"../../../api/src/types\").ApiInterface$Decorated<import(\"rxjs\").Observable<import(\"../../../types/src/types\").Codec>, import(\"rxjs\").Observable<import(\"../../../types/src/types\").Codec>>) => any;\r\n"}, {"classified_as": "bug", "text": "**Is your feature request related to a problem? Please describe.**\r\nI'd like to be able to use node's isRecoverableError function when working with REPL. Since we are adding additional eval (as recommended in #29719), we are not able to take advantage of the built in one and have to write our own where as the functionality we want is exactly the same as node's native functionality for this function.\r\n\r\n**Describe the solution you'd like**\r\njs\r\nconst repl, { REPLServer } = require('repl')\r\n\r\nconst r = repl.start({\r\n  prompt: $ mongosh > ,\r\n  ignoreUndefined: true\r\n});\r\n\r\nconst originalEval = util.promisify(r.eval);\r\n\r\nconst customEval = async(input, context, filename, callback) => {\r\n  let result;\r\n  let err = null;\r\n  try {\r\n    result = await ShellEvaluator.customEval(originalEval, input, context, filename);\r\n  } catch (e) {\r\n    if (repl.isRecoverableError(e, input)) { // use isRecoverableError from node\r\n      return callback(new repl.Recoverable(e))\r\n    } else {\r\n      err = e\r\n    }\r\n  }\r\n  callback(err, result)\r\n};\r\n\r\nr.eval = customEval;\r\n\r\n\r\n**Describe alternatives you've considered**\r\nI currently just took out isRecoverableError and published it as [standalone](github.com/mongodb-js/is-recoverable-error) to get the same functionality. Ideally would be good to deprecate it and use exactly what's in node. "}, {"classified_as": "bug", "text": "![image](https://user-images.githubusercontent.com/14265482/44673665-d4f77600-a9f1-11e8-8db5-5bfaa75fa290.png)\r\n\r\n**Expected Result**\r\nThe console should log the dialog's message and type (in this case: the \"print screen\" dialog). I wanted to programmatically dismiss the print screen dialog.\r\n\r\n**What happens instead?**\r\nNothing happens\r\n\r\n**Environment:**\r\nPuppeteer version: 1.7.0\r\nPlatform / OS version: Mac OSX Version 10.13.6\r\nNode.js version: 10.7.0\r\n\r\n**Code** \r\npage = await browser.newPage();\r\npage.on(\"dialog\", async dialog => {\r\n   console.log(\"the dialog message is\", dialog.message());\r\n   console.log(\"the dialog type is\", dialog.type());\r\n   await dialog.dismiss();\r\n});\r\n\r\nawait page.waitFor('.print-text'); //this clicks an element and opens up the print screen in google chrome\r\nawait page.click('.print-text');\r\n\r\n\r\n\r\n"}, {"classified_as": "bug", "text": "This is a list of missing translation keys. Feel free to submit a PR to help us.\r\n\r\n\r\n\r\n\ud83d\udce6 strapi-admin - [/packages/strapi-admin/admin/src/translations/ko.json](https://github.com/strapi/strapi/blob/master/packages/strapi-admin/admin/src/translations/ko.json)\r\n\r\n\r\n| Translation key | English default value |\r\n|-----------------|:---------------------:|\r\n|app.components.EmptyAttributes.title | There are no fields yet|\r\n|app.utils.delete | Delete|\r\n\r\n\r\n\ud83d\udce6 strapi-plugin-content-manager - [/packages/strapi-plugin-content-manager/admin/src/translations/ko.json](https://github.com/strapi/strapi/blob/master/packages/strapi-plugin-content-manager/admin/src/translations/ko.json)\r\n\r\n\r\n| Translation key | English default value |\r\n|-----------------|:---------------------:|\r\n|components.EmptyAttributesBlock.button | Go to settings page|\r\n|components.EmptyAttributesBlock.description | You can change your settings|\r\n|containers.Edit.addAnItem | Add an item...|\r\n|containers.Edit.clickToJump | Click to jump to the entry|\r\n|containers.Edit.seeDetails | Details|\r\n|containers.ListPage.displayedFields | Displayed Fields|\r\n|containers.SettingPage.addRelationalField | Add new relational field|\r\n|containers.SettingPage.editSettings.description | Drag & drop the fields to build the layout|\r\n|containers.SettingPage.editSettings.title | Edit \u2014 Settings|\r\n|containers.SettingPage.relations | Relational fields|\r\n|form.Input.description | Description|\r\n|form.Input.description.placeholder | Display name in the profile|\r\n|form.Input.disabled | Editable field|\r\n|form.Input.placeholder | Placeholder|\r\n|form.Input.placeholder.placeholder | My awesome value|\r\n|notification.error.displayedFields | You need at least one displayed field|\r\n\r\n\r\n\ud83d\udce6 strapi-plugin-settings-manager - [/packages/strapi-plugin-settings-manager/admin/src/translations/ko.json](https://github.com/strapi/strapi/blob/master/packages/strapi-plugin-settings-manager/admin/src/translations/ko.json)\r\n\r\n\r\n| Translation key | English default value |\r\n|-----------------|:---------------------:|\r\n|form.server.item.proxy | Proxy Settings|\r\n|form.server.item.proxy.enable | Proxy Enable|\r\n|form.server.item.proxy.host | Proxy Host|\r\n|form.server.item.proxy.port | Proxy Port|\r\n|form.server.item.proxy.ssl | Proxy SSL|\r\n\r\n\r\n\ud83d\udce6 strapi-plugin-users-permissions - [/packages/strapi-plugin-users-permissions/admin/src/translations/ko.json](https://github.com/strapi/strapi/blob/master/packages/strapi-plugin-users-permissions/admin/src/translations/ko.json)\r\n\r\n\r\n| Translation key | English default value |\r\n|-----------------|:---------------------:|\r\n|Auth.form.error.blocked | Your account has been blocked by the administrator.|\r\n|Auth.form.error.confirmed | Your account email is not confirmed.|\r\n|Auth.form.error.ratelimit | Too many attempts, please try again in a minute.|\r\n|EditForm.inputToggle.description.email-confirmation | When enabled (ON), new registred users receive a confirmation email.|\r\n|EditForm.inputToggle.description.email-confirmation-redirection | After confirmed your email, chose where you will be redirected.|\r\n|EditForm.inputToggle.label.email-confirmation | Enable email confirmation|\r\n|EditForm.inputToggle.label.email-confirmation-redirection | Redirection url|\r\n|Email.template.email_confirmation | Email address confirmation|\r\n|PopUpForm.Providers.discord.providerConfig.redirectURL | The redirect URL to add in your Discord application configurations|\r\n|PopUpForm.Providers.microsoft.providerConfig.redirectURL | The redirect URL to add in your Microsoft application configurations|\r\n|components.Input.error.password.length | Password is too short|"}, {"classified_as": "bug", "text": "- Fire browser.closed event when the underlying browser process gets closed / crashes\r\n- Fire page.closed event when the page gets closed / crashes\r\n\r\nThis will help to build reliable scripts that restart browser or reopen pages when they crash.\r\n"}, {"classified_as": "bug", "text": "**Is your feature request related to a problem? Please describe.**\r\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\r\nIsrael gov scraper, with links sent on discord: \r\n[Dashboard](https://datadashboard.health.gov.il/COVID-19/)\r\n[Translation](https://media.discordapp.net/attachments/727682901881389137/727930855451918496/Hebrew_translation.png)\r\n\r\n\r\n**Describe the solution you'd like**\r\nI\u2019m going to write the scraper, this is so I don\u2019t forget."}, {"classified_as": "enhancement", "text": "If two folders both have the ID \"default\" in the config, we rename them to \"default~1\" and \"default~2\". But tilde isn't allowed in folder IDs, and the user can't change folder IDs in the GUI, so it's kinda impossible to recover gracefully from.\n\nGranted, they shouldn't be able to get in this state without editing the config manually to start with, but still...\n"}, {"classified_as": "enhancement", "text": "Hi,\r\n\r\nWhilst investigating that kqueue issue (#6596) I've found an unrelated (?) test failure:\r\n\r\n\r\n=== RUN   TestWatchRename\r\n    TestWatchRename: basicfs_watch_test.go:444: Timed out before receiving all expected events\r\n--- FAIL: TestWatchRename (10.01s)\r\n\r\n\r\nThis is today's master (c20ed80dc473ae7476a9359a55f7ec2618eb62e2) on FreeBSD-12.1.\r\n\r\nAll I did was add -v and -count=1 to the test target in build.go.\r\n\r\nHappy to provide more info if you let me know how to get it :)\r\n\r\nPlease note that I'm not very familiar with FreeBSD."}, {"classified_as": "enhancement", "text": "Hey,\r\nimage bellow for thousand words. I've listed the files manually and don't see discrepancy. Tried to restart services on both sides, to no avail.\r\n\r\nLet me know what additional information I should provide.\r\n\r\nThank you\r\n \r\n![Screenshot from 2020-04-23 08-10-21](https://user-images.githubusercontent.com/8431097/80065129-ea5fd300-8539-11ea-84ec-21eca056432f.png)\r\n\r\n\r\n"}, {"classified_as": "enhancement", "text": "We're not using the API key properly or something;\r\n\r\n<img width=\"1814\" alt=\"screen shot 2018-10-30 at 05 30 34\" src=\"https://user-images.githubusercontent.com/125426/47696000-0284b980-dc05-11e8-8472-3f8c4b7661dd.png\">\r\n"}, {"classified_as": "enhancement", "text": "If we fail to rename a file (the last step when pulling it), the temp file is removed. It should instead be kept around as usual so we can reuse it.\n"}, {"classified_as": "bug", "text": "**Tell us about your environment:**\r\n\r\n* Puppeteer version: 1.0.0\r\n* Platform / OS version: Ubuntu 16.04\r\n* URLs (if applicable):\r\n* Node.js version: 6.12.3\r\n\r\n**What steps will reproduce the problem?**\r\n\r\n\r\nawait page.pdf({\r\n    headerTemplate: '',\r\n    footerTemplate: '',\r\n});\r\n\r\n\r\n**What is the expected result?**\r\n\r\nThe header and footer should be blank.\r\n\r\n**What happens instead?**\r\n\r\nThe default header and footer are still shown.\r\n\r\nIt seems that passing any falsey value results in the default template being used instead. I would suggest that only undefined should cause it to use the default template. Empty string, null, false and 0 should all override the default template.\r\n\r\nThanks.\r\n"}, {"classified_as": "enhancement", "text": "Cgo strictness is increased, resulting in Zillode/notify#9. Needs to be fixed for Go 1.10 release, preferably sooner rather than later."}, {"classified_as": "bug", "text": "It is quite common in Perl code to want to know if a given object instance is derived from a given class. Such code as\r\n\r\nperl\r\nif( $obj->isa( \"Some::Class\" ) ) ...\r\n\r\n\r\nis however insufficient because it relies on invoking a method on what may not in fact be an object at all. Sufficiently-defensive code solves this by such constructs as:\r\n\r\nperl\r\nuse Scalar::Util 'blessed';\r\n\r\nif( blessed $obj and $obj->isa( \"Some::Class\" ) ) ...\r\n\r\n\r\nThere are also CPAN-based solutions that try to make this nicer:\r\n\r\nperl\r\nuse Safe::Isa '$_isa';\r\n\r\nif( $obj->$_isa( \"Some::Class\" ) ) ...\r\n\r\n\r\nSuch an omission in core Perl appears especially unfortunate in the wider context of thoughts around bringing in more of an OO system.\r\n\r\nIt would be nice if core Perl provided a basic infix operator to perform this test safely. Such an operator could additionally parse a bareword package name correctly in the common case, thus not requiring a \"quoted\" name:\r\n\r\nperl\r\nuse feature 'isa';\r\n\r\nif( $obj isa Some::Class ) ...\r\n\r\n\r\nIn addition it may be useful to have a does operator that tests ->DOES instead, though I will admit to not fully understanding the subtle semantic difference is between the two."}, {"classified_as": "enhancement", "text": "We process incoming index updates according to the ignore patterns, to filter out unwanted entries. When ignore patterns changed to allow files that were previously filtered out things would be OK on the next index exchange / reconnect. Currently, there is no new index exchange so the new ignore patterns don't get matched against the remote index data.\n\nWe need to either save all the data and process it differently, or as a workaround drop the delta index data when ignore patterns change.\n"}, {"classified_as": "enhancement", "text": "If the function of your Substrate extrinsic contains usize arguments, the API seems to throw InvalidSignature(0) errors. Changing these to u32 fixes the issue.\r\n\r\nNonetheless, these errors are caught at the API level before the extrinsics with usize function arguments ever touch the chain. Therefore, my intuition is the API cannot parse or serialize usize arguments."}, {"classified_as": "enhancement", "text": "Having error TS4020: 'extends' clause of exported class '...' has or is using private name 'EnumConstructor'. when i tried to create a class via extends Enum.with(...)\r\n\r\nexport EnumConstructor should solve my problem.\r\n"}, {"classified_as": "bug", "text": "I've to set my typeface for every dialog that I show. It will be nice to have support for global typefaces in addition to the existing colour ones!\n"}, {"classified_as": "bug", "text": "<!--\r\nHello \ud83d\udc4b Thank you for submitting an issue.\r\n\r\nBefore you start, please make sure your issue is understandable and reproducible.\r\nTo make your issue readable make sure you use valid Markdown syntax.\r\n\r\nhttps://guides.github.com/features/mastering-markdown/\r\n-->\r\n\r\n**Describe the bug**\r\nWhen editing content of an entry through the Admin panel, if the user **accidentally** navigates to another page without saving the change, there is no prompt to warn them that the unsaved change will be lost. \r\n\r\n**Accidentally navigating to another page can easily happen, and it would be disappointing if a user has entered a lot of content, and losing them by this simple mistake.**\r\n\r\n**Steps to reproduce the behavior**\r\n1. Assuming the content type Restaurant exists, with a field called description for rich text description\r\n2. On the Admin Panel, navigate to \"Create an Entry\" for Restaurant\r\n3. Enter text to the description field, but **without clicking on the \"Save\" button**\r\n4. Navigate to another page within the Admin Panel, such as browsing to another content type through the sidebar. \r\n5. Observe that no warning or prompt is shown, but when coming back to \"Create an (restaurant) Entry\", the previously entered description is lost. \r\n\r\n**Expected behavior**\r\nA prompt is shown, such as \"Your unsaved content will be lost.\" With option to 1) \"Discard un-saved change\" (and proceed to where the user intended to go) or 2) \"Stay on the page\".\r\n\r\n**Screenshots**\r\nN/A.\r\n\r\n**Code snippets**\r\nN/A\r\n\r\n**System**\r\nDocker for Mac, Docker version 19.03.1, build 74b1e89\r\n\r\n**Additional context**\r\nN/A\r\n"}, {"classified_as": "enhancement", "text": "I am using v0.11.2 on OSX. I was transferring a file of 25GB size, and the transfer had started during the creation of the file. The file size of the original file as well of the transferred file are identical, but the content has another md5 sum. How can this happen? Is there any way of how to prevent this?\nThanks!\n"}, {"classified_as": "enhancement", "text": " I used the latest available [apps](https://github.com/polkadot-js/apps) 7048a65c3dc0bea2061a653a7f63baf8b192ddb4 and [substate node](https://github.com/paritytech/substrate) 7874be8668ba6ff43c107c5da26105f934654cc2 to deploy an [erc20 contract]()  and found that the value set in on_deploy is not the same as the value returned by the total_supply method. I recently found this bug with the new ABI, but I am not sure if it is caused by [api](https://github.com/polkadot-js/api) or substrate node.This is the [abi file ](https://github.com/polkadot-js/api/files/3823230/abi.txt) I am using.This problem exists with all method calls in the contract instance.\r\n"}, {"classified_as": "bug", "text": "It would be great to also have a ProgressDialog equivalent\n"}, {"classified_as": "enhancement", "text": "Not able to decode DigestItem that returned from RPC\r\n\r\nRelated: https://github.com/paritytech/substrate/pull/1478\r\n\r\nI think the JSON codec needs some better thoughts to avoid those breaking changes"}, {"classified_as": "bug", "text": "**Describe the bug**\r\nIm adding content to the strapi server and its getting really slow. \r\ni do have 67 elements and the api response time is about 9-12 seconds\r\n\r\nthe content type does not have any relational content. is like this:\r\n- 1 enum\r\n- 2 booleans\r\n- image\r\n- repeatable content with 2 images. (usually 10-15 components each)\r\n\r\nIm just trying to get all the content in the api call.\r\n\r\n**Expected behavior**\r\nNot to take seconds on the api response\r\n\r\n**Screenshots**\r\nN/A\r\n**Code snippets**\r\nN/A\r\n\r\n\r\n**System**\r\n- Node.js version: 12.14.1\r\n- NPM version: 6.13.4\r\n- Strapi version: v3.0.0-beta.18.7\r\n- Database: mongodb\r\n- Operating system: ubuntu 18.04\r\n\r\nWhen the Strapi admin panel list the items its also slow, probably the same time (9-12 seconds)\r\n\r\n"}, {"classified_as": "enhancement", "text": "Hi,\n\n**Question:** Is Syncthing using a proper address for IPv6 mulitcast?\n\n**Background:**\nI'm working with @dapperstout on the Swift implementation of syncthing. Because I'm having trouble getting IPv6 multicast to work, I posted a question about it on stack overflow: http://stackoverflow.com/questions/31574247/gcdasyncudpsocket-cannot-get-udp-multicast-over-ipv6-to-work?noredirect=1#comment51108878_31574247. I don't know too much about IPv6 yet, but on stack overflow it is claimed that the Syncthing multicast address (ff32::5222), as specified in https://github.com/syncthing/specs/blob/master/DISCOVERYv2.md, is reserved for future use (referring to http://www.iana.org/assignments/ipv6-multicast-addresses/ipv6-multicast-addresses.xhtml#unicast-multicast-group-ids). \n\nCould someone with enough knowledge on this have a look at it? If this is a bug in the specification, it would be good to fix it.\n"}, {"classified_as": "bug", "text": "Updating a file record with a new image should replace the current file with the new one."}, {"classified_as": "enhancement", "text": "\r\n# Error\r\n\r\nI went to go bump substrate-api-sidecar's @polkadot/api from 1.29.1 to 1.30.0-beta.6 and started encountering errors starting with createType(SignedBlock) on older Kusama blocks that do not occur when I go back to 1.29.1.\r\n\r\nlocalhost:8080/block/900 -> createType(SignedBlock):: Struct: failed on 'block':: Struct: failed on 'extrinsics':: createType(ExtrinsicV4):: createType(ExtrinsicSignatureV4):: Maximum call stack size exceeded\r\n\r\nAnd in the terminal Sidecar logs: 2020-08-23 16:16:32        RPC-CORE: getBlock(hash?: BlockHash): SignedBlock:: createType(SignedBlock):: Struct: failed on 'block':: Struct: failed on 'extrinsics':: createType(ExtrinsicV4):: createType(ExtrinsicSignatureV4):: Maximum call stack size exceeded.\r\n\r\nI think the error originates from this call to getBlock: https://github.com/paritytech/substrate-api-sidecar/blob/master/src/services/blocks/BlocksService.ts#L42\r\n\r\n# How to produce error\r\n\r\nTo recreate the error (you will have to install wasm-pack if you don't already have it):\r\n\r\ngit clone https://github.com/paritytech/substrate-api-sidecar.git\r\ngit checkout zeke-1-3-b # commit e0402f1\r\nyarn\r\nSAS_SUBSTRATE_WS_URL=wss://kusama-rpc.polkadot.io yarn start\r\n\r\nand then curl localhost:8080/block/900 or any other lower number block to get the above errors.\r\n\r\n# How to produce expected behavior\r\n\r\nTo get the expected behavior\r\n\r\ngit checkout master # commit c354be3\r\nyarn\r\nSAS_SUBSTRATE_WS_URL=wss://kusama-rpc.polkadot.io yarn start\r\n\r\nand then curl localhost:8080/block/900 or any other valid block number to get a 200 response.\r\n\r\n### Other notes\r\n\r\n- I get the same errors with wss://cc3-5.kusama.network\r\n- I don't get the error with curl localhost:8080/block/0, presumably because it has no extrinsics\r\n- I don't get similar errors with wss://rpc.polkadot.io"}, {"classified_as": "bug", "text": "**What is the expected behavior?**\r\nLoad list or type-ahead input from third-party sources.\r\n\r\n**Example:**\r\n1. (https://api.github.com/users/dutchakdev/gists)\r\nCreate drop-down with name gist_id and make map config, to map key-value: {id, description}.\r\n\r\n2. Render drop-down with items (simple example) (in content-type builder):\r\nhtml\r\n<select>\r\n   <option value = \"{id}\"> {description} </ option>\r\n    ...\r\n</select>\r\n\r\n\r\n3. In content we see \r\n\r\n{\r\n...\r\ngist_id={id}\r\n...\r\n}\r\n\r\n\r\n**Additional**\r\nWhen an endpoint has something like a param, we can do better lazy-load + [type-ahead] (https://twitter.github.io/typeahead.js/)"}, {"classified_as": "bug", "text": "Hello.\n\nDo you plan to add support [JSON API](http://jsonapi.org)? Support JSON API important Ember.js developers and other frameworks.\n"}, {"classified_as": "bug", "text": "**Describe the bug**\r\nOn the Media Library plugin, when you start typing the search criteria into the \"Search for an asset\" field, the search is triggered after just one character, and the page refreshes, making the field to lose focus. This is very annoying behavior.\r\n\r\n**Steps to reproduce the behavior**\r\n\r\n1. Go to Media Library.\r\n2. Click on \"Search for an asset\".\r\n3. Start typing the search criteria.\r\n4. The page reloads after each typed character, and the field loses focus.\r\n\r\n**Expected behavior**\r\nThe \"Search for an asset\" field should keep focus.\r\n\r\n**Screenshots**\r\nN/A.\r\n\r\n**Code snippets**\r\nN/A.\r\n\r\n**System**\r\n\r\n- Node.js version: v12\r\n- NPM version: N/A\r\n- Strapi version: 3.0.1\r\n- Database: Postgres\r\n- Operating system: Linux\r\n\r\n**Additional context**\r\nN/A.\r\n"}, {"classified_as": "enhancement", "text": "I have several operations defined in my api's with an httpMethod of POST, and in my index.html the supportedSubmitMethods array does contain 'post', however when I attempt to test these endpoints, they are sent via a GET ajax request, not a POST.\n\nIs there any other requirements to get them to be submitted as a POST request? For instance these operations do include some \"query\" type parameters, as I want them in the query string, not the post data - but that shouldn't prevent it from being a POST request should it?\n"}, {"classified_as": "enhancement", "text": "v1.0.0-rc  page.waitForNavigation()\r\n\r\nsetting timeout:0 should disable timeout according to the docs (meaning it never times out), but it seems to just actually set it to 0 seconds, and then promise reverts to null immediately everytime.\r\n"}, {"classified_as": "enhancement", "text": "The links in https://github.com/polkadot-js/api/blob/master/packages/api/README.md are broken, referencing a substrate folder that does not exist. Maybe should point to api/docs? Unsure otherwise I would've fixed it."}, {"classified_as": "bug", "text": "**Describe the bug**\r\nUsing strapi cli to generate an api with an attribute of type relation leads to an error. In https://github.com/strapi/strapi/blob/master/packages/strapi-generate-api/lib/before.js on line 92 the attributes are insert as \"type\", but the type relation should use the keyword \"model\". Additionally, there isn't any validation on the type attribute to verify, of this type (or model) exists.\r\n\r\n**Steps to reproduce the behavior**\r\n1. strapi generate:api person name:string\r\n2. strapi generate:api location owner:person\r\n3. Go to Content Type Builder location and have a look on the field (screenshot attached) \r\n\r\n**Expected behavior**\r\nThe api location is generated with an attribute called owner of type relation to person. \r\n\r\n**Screenshots**\r\n<img width=\"1159\" alt=\"Bildschirmfoto 2019-12-10 um 12 36 09\" src=\"https://user-images.githubusercontent.com/32730503/70526348-ae5b4100-1b49-11ea-9411-0d56fc67f756.png\">\r\n\r\n\r\n**Code snippets**\r\nhttps://github.com/strapi/strapi/blob/master/packages/strapi-generate-api/lib/before.js\r\n\r\n\r\nscope.attributes = scope.args.attributes.map(attribute => {\r\n    if (_.isString(attribute)) {\r\n      const parts = attribute.split(':');\r\n\r\n      parts[1] = parts[1] || 'string';\r\n\r\n      // Handle invalid attributes.\r\n      if (!parts[1] || !parts[0]) {\r\n        invalidAttributes.push(\r\n          'Error: Invalid attribute notation ' + attribute + '.'\r\n        );\r\n        return;\r\n      }\r\n\r\n      return {\r\n        name: _.trim(_.deburr(parts[0].toLowerCase())),\r\n        params: {\r\n          type: _.trim(_.deburr(parts[1].toLowerCase())),\r\n        },\r\n      };\r\n    } else {\r\n      return _.has(attribute, 'params.type') ? attribute : undefined;\r\n    }\r\n  });\r\n\r\n\r\n**System**\r\n- Docker Image: strapi/strapi\r\n- Node.js version: v12.13.0\r\n- Strapi version: 3.0.0-beta.17.8\r\n- Database: postgres\r\n\r\n**Additional context**\r\nI'm not sure, if this is only an error or also a feature request - i would really like to use the cli for api generation including attributes of type relation to bootstrap strapi applications in microservice environments. If helpful, I could also include my init scripts for bootstraping json apis in docker containers.\r\n"}, {"classified_as": "enhancement", "text": "**Informations**\r\n- **Node.js version**: v11.6.0\r\n- **NPM version**: v6.9.0\r\n- **Strapi version**: 3.0.0-alpha.24.1\r\n- **Database**: MongoDB\r\n- **Operating system**: MacOS\r\n\r\n**What is the current behavior?**\r\nWhen I have a good number of users (let's say +6000 users) assigned to the Authenticated role I can't modify the Roles & Permissions for that specific Role due to the next error:\r\n\r\nFailed to load resource: the server responded with a status of 413 (Request Entity Too Large)\r\n\r\nAnd I suppose that this is due to the body of the request because we are sending all the users in the request:\r\n\r\n{\r\n  description: \"Default role given to authenticated user.\"\r\n  name: \"Authenticated\",\r\n  permissions: { ... },\r\n  users: [ ... ] (array with more than 6000 objects)\r\n}\r\n\r\n\r\n**Steps to reproduce the problem**\r\n- Have 6000 users assigned to Authenticated role.\r\n- Modify the permissions of Authenticated role.\r\n"}, {"classified_as": "bug", "text": "**What is the expected behavior?**\r\nI'd like the custom graphql schema defined in ./api/*/config/schema.graphql to allow the use of a .js file ending. \r\n\r\nSince these files are not actually .graphql formatted files it causes a lot of issues with syntax highlighting in IDE's. Also they aren't truly .graphql files so they should really be labelled as such.\r\n\r\nI'd propose that to acheive backward compatibility that the system would allow for either schema.graphql or schema.graphql.js as a valid file name.\r\n\r\n"}, {"classified_as": "enhancement", "text": "Minified -\r\n\r\n<img width=\"184\" alt=\"polkadot apps portal 2019-01-08 12-45-17\" src=\"https://user-images.githubusercontent.com/1424473/50830049-db561100-1346-11e9-8350-701080c49713.png\">\r\n\r\nUnminified -\r\n\r\n<img width=\"218\" alt=\"polkadot apps portal 2019-01-08 12-44-56\" src=\"https://user-images.githubusercontent.com/1424473/50830065-e610a600-1346-11e9-93e9-b28834b9dc7a.png\">\r\n\r\nSimilar to https://github.com/polkadot-js/api/issues/462\r\n\r\n"}, {"classified_as": "bug", "text": "In Perl the => operator is called the fat comma and behaves just like , except that it can implicitly quote its left hand side.  But I suggest tightening the grammar slightly to require the ordinary comma in some places.\r\n\r\nCurrently this compiles without warning:\r\nsub f { my %x => (a => 5) }\r\nThe programmer made a mistake and should have written = instead of the first =>.\r\n\r\nApart from golf, I don't believe the fat comma is used in practice as a C-style comma operator separating two statements.  (Happy to be proved wrong.)  I suggest a compile-time warning in the syntax category when => appears in a position it gets parsed as a C-style comma.  Then those like me who prefer stricter checking can fatalize that warning.  I would go further and advocate deprecating it, but a warning is probably controversial enough."}, {"classified_as": "enhancement", "text": "When choosing xml or json response types, the options are being lost\n"}, {"classified_as": "bug", "text": "**Node.js version**:  v8.9.3\r\n**npm version**: 5.5.1\r\n**Strapi version**: 3.0.0-alpha.8.3\r\n**Operating system**: Win7 Ultimate\r\n\r\nMy model:\r\n\r\njson\r\n{\r\n  \"connection\": \"default\",\r\n  \"collectionName\": \"punchbags\",\r\n  \"info\": {\r\n    \"name\": \"punchbag\",\r\n    \"description\": \"\"\r\n  },\r\n  \"options\": {\r\n    \"increments\": true,\r\n    \"timestamps\": true,\r\n    \"comment\": \"\"\r\n  },\r\n  \"attributes\": {\r\n    \"name\": {\r\n      \"type\": \"string\"\r\n    },\r\n    \"description\": {\r\n      \"type\": \"text\"\r\n    },\r\n    \"price\": {\r\n      \"type\": \"decimal\"\r\n    },\r\n    \"img\": {\r\n      \"type\": \"string\"\r\n    },\r\n    \"height\": {\r\n      \"type\": \"float\"\r\n    },\r\n    \"width\": {\r\n      \"type\": \"float\"\r\n    },\r\n    \"type_name\": {\r\n      \"type\": \"string\"\r\n    },\r\n    \"icon\": {\r\n      \"type\": \"text\"\r\n    }\r\n  }\r\n}\r\n\r\nResponse: \r\n![default](https://user-images.githubusercontent.com/9945452/35224262-360af684-ffa6-11e7-9ed9-ec19b493d587.png)\r\n\r\nResult:\r\n![default](https://user-images.githubusercontent.com/9945452/35223606-c46dc58a-ffa3-11e7-8b86-275d69370f89.png)\r\n"}, {"classified_as": "bug", "text": "**Describe the bug**\r\ni have a many-to-many relation between doctor and meta. graphql query:\r\n doctors(limit:1}) {\r\n    id\r\n    metas{    id    }\r\n    }\r\n\r\ngenerates 3 mysql queries :\r\n1.  select doctors.* from doctors limit 1\r\n\r\n2. select distinct metas.* from metas left join doctop.doctors_metas__metas_doctors as doctors_metas__metas_doctors_1 on doctors_metas__metas_doctors_1.meta_id = metas.id left join doctop.doctors as doctors_1 on doctors_metas__metas_doctors_1.doctor_id = doctors_1.id where doctors_1.id in ('308384')\r\n\r\n3. select distinct doctors.*, doctors_metas__metas_doctors.meta_id as _pivot_meta_id, doctors_metas__metas_doctors.doctor_id as _pivot_doctor_id from doctors inner join doctors_metas__metas_doctors on doctors_metas__metas_doctors.doctor_id = doctors.id where doctors_metas__metas_doctors.meta_id in (26, 438, 872)\r\n\r\n\r\nthe third query is very time consuming. i have 1500000 doctors in my db, and system crashs with heap mempry!! i want only one doctor metas.  i dont undrestand why the third query is generated! \r\nincreaseing server memory, the heap memory error disapears. but the query runing time is 30 seconds!  and make website very slow. i even created a new strapi inctance, with doctor and meta only models. the queries is the same as my current instance!\r\n\r\n\r\n \r\n\r\n \r\n\r\n**Steps to reproduce the behavior**\r\n1. define meta, doctor models\r\n2. a many-to-many relation betwnn meta and doctor\r\n3. create 100K doctor and 100k metas\r\n4. query the doctors and metas. 3 qouries last more than 30S. low performance ....\r\n\r\n**Expected behavior**\r\n2 first qouries is enough!:\r\n1.  select doctors.* from doctors limit 1\r\n\r\n2. select distinct metas.* from metas left join doctop.doctors_metas__metas_doctors as doctors_metas__metas_doctors_1 on doctors_metas__metas_doctors_1.meta_id = metas.id left join doctop.doctors as doctors_1 on doctors_metas__metas_doctors_1.doctor_id = doctors_1.id where doctors_1.id in ('308384')\r\n\r\n \r\n**System**\r\n- Node.js version: v12.16.1\r\n- NPM version: 6.13.4\r\n- Strapi version:  v3.0.0-beta.18.8\r\n- Database: mysql\r\n- Operating system: centos\r\n \r\n\r\n"}, {"classified_as": "bug", "text": "**Information**\r\n- **Node.js version**: 9.11.2\r\n- **npm version**: 5.6.0\r\n- **Strapi version**: 3.0.0-alpha.13.1\r\n- **Database**: Mongo\r\n- **Operating system**: MacOS High Sierra\r\n\r\n**What is the current behavior?**\r\nUpgraded from 12.7 to 13.1, and got a missing packages/strapi-admin/admin/src/config/manifest.json file error when running npm run setup:build.\r\n\r\nI checked my repo and it's not there, checked strapi's repo and it IS there https://github.com/strapi/strapi/tree/master/packages/strapi-admin/admin/src/config/manifest.json. So I added it, and npm run setup:build worked, but when I went to commit it, it says it's ignored by .gitignore here https://github.com/strapi/strapi/blob/master/packages/strapi-admin/admin/.gitignore#L4 \r\n\r\n**Steps to reproduce the problem**\r\ndelete packages/strapi-admin/admin/src/config/manifest.json, run npm run setup:build\r\n\r\n\r\n**What is the expected behavior?**\r\nnpm run setup:build should generate the manifest file if it does not exist\r\n\r\n\r\n**Suggested solutions**\r\nDetermine if it does need to be committed, if so remove it from .gitignore, or determine why it's not auto generating if it doesn't need to be committed. \r\n"}, {"classified_as": "bug", "text": "**Is your feature request related to a problem? Please describe.**\r\nReliably detecting the actual intrinsic type of an object, e.g. for serialisation of arbitrary JS datastructures. (It is especially important to be able to reliably detect types which cannot be successfully serialised.)\r\n\r\n**Describe the solution you'd like**\r\nAdd util.types.isArray and util.types.isFunction, analogous to the existing util.types predicates, and a util.types.isPlainObject which returns true iff its argument is an Object which is not any other type\u2014i.e., was created by {}, new Object(), Object.create(), or one of the other builtin functions which creates an object via [the ObjectCreate specification method](https://tc39.es/ecma262/#sec-objectcreate) called with an empty *internalSlotsList*.\r\n\r\n**Describe alternatives you've considered**\r\nObject.prototype.toString returns the desired information in most cases, but can be spoofed by setting value[Symbol.toStringTag], and does not detect proxies.\r\n\r\nPresumably .isArray was originally omitted from util.types because Array.isArray exists, but note that Array.isArray(new Proxy([], {})) returns true, while (e.g.) util.types.isMap(new Proxy(new Map(), {})) returns false.  A reasonable approximation can be polylfilled:\r\n\r\nJS\r\nutils.types.isArray = function isArray(value) {\r\n  return Array.isArray(value) && !util.types.isProxy(value);\r\n}\r\n\r\n\r\n\u2026but it would seem more elegant and reliable (not to mention consistent) to have a dedicated predicate on util.types.\r\n\r\nSimilarly, .isFunction can be approximated with typeof(value) === 'function' && !util.types.isProxy(value), but again this is inelegant.\r\n\r\nFinally, detecting plain objects reliably appears to be very difficult at present; at best you can check to make sure that typeof value === 'object' && value !== null and then ensure that utils.typeof[X](vaue) returns false for all X.\r\n\r\n**Additional note**\r\nIt could be useful to have finer-grained detection of function types, e.g. isAnyFunction, isNativeFunction, isPlainFunction (or isNonNativeFunction), isCallableFunction, isConstructibleFunction etc.\u2014though these are arguably of less utility because, with the exception of (non-native) functions defined in the global scope, it's not generally possible to reliably recreate a function object.\r\n"}, {"classified_as": "bug", "text": "For example, in the kiosks table there are columns for id, status, location, and theater. However, directus_fields contains an additional row: number.\r\n\r\nThe API returns **all 5** of the rows from directus_fields on GET:\r\n\r\njson\r\n{\r\n  \"data\": [\r\n    {\r\n      \"collection\": \"kiosks\",\r\n      \"field\": \"id\",\r\n      \"sort\": \"1\",\r\n      \"primary_key\": true,\r\n      \"default_value\": null,\r\n      \"note\": null,\r\n      \"signed\": false,\r\n      \"id\": 137,\r\n      \"type\": \"INT\",\r\n      \"managed\": true,\r\n      \"interface\": \"primary-key\",\r\n      \"hidden_input\": true,\r\n      \"hidden_list\": false,\r\n      \"required\": true,\r\n      \"options\": null,\r\n      \"locked\": false,\r\n      \"translation\": null,\r\n      \"readonly\": false,\r\n      \"view_width\": 4,\r\n      \"validation\": null,\r\n      \"group\": null\r\n    },\r\n    {\r\n      \"collection\": \"kiosks\",\r\n      \"field\": \"status\",\r\n      \"sort\": \"2\",\r\n      \"primary_key\": false,\r\n      \"default_value\": \"online\",\r\n      \"note\": null,\r\n      \"id\": 141,\r\n      \"type\": \"VARCHAR\",\r\n      \"managed\": true,\r\n      \"interface\": \"status\",\r\n      \"hidden_input\": false,\r\n      \"hidden_list\": false,\r\n      \"required\": false,\r\n      \"options\": {\r\n        \"status_mapping\": {\r\n          \"draft\": {\r\n            \"name\": \"Draft\"\r\n          },\r\n          \"offline\": {\r\n            \"name\": \"Offline\"\r\n          },\r\n          \"online\": {\r\n            \"name\": \"Online\"\r\n          }\r\n        }\r\n      },\r\n      \"locked\": false,\r\n      \"translation\": null,\r\n      \"readonly\": false,\r\n      \"view_width\": 4,\r\n      \"validation\": null,\r\n      \"group\": null,\r\n      \"signed\": null\r\n    },\r\n    {\r\n      \"collection\": \"kiosks\",\r\n      \"field\": \"location\",\r\n      \"sort\": \"3\",\r\n      \"primary_key\": false,\r\n      \"default_value\": null,\r\n      \"note\": null,\r\n      \"id\": 140,\r\n      \"type\": \"VARCHAR\",\r\n      \"managed\": true,\r\n      \"interface\": \"text-input\",\r\n      \"hidden_input\": false,\r\n      \"hidden_list\": false,\r\n      \"required\": false,\r\n      \"options\": null,\r\n      \"locked\": false,\r\n      \"translation\": null,\r\n      \"readonly\": false,\r\n      \"view_width\": 4,\r\n      \"validation\": null,\r\n      \"group\": null,\r\n      \"signed\": null\r\n    },\r\n    {\r\n      \"collection\": \"kiosks\",\r\n      \"field\": \"theater\",\r\n      \"sort\": null,\r\n      \"primary_key\": false,\r\n      \"default_value\": null,\r\n      \"note\": null,\r\n      \"id\": 138,\r\n      \"type\": \"M2O\",\r\n      \"managed\": true,\r\n      \"interface\": \"many-to-one\",\r\n      \"hidden_input\": false,\r\n      \"hidden_list\": false,\r\n      \"required\": false,\r\n      \"options\": {\r\n        \"template\": \"{{name}}\"\r\n      },\r\n      \"locked\": false,\r\n      \"translation\": null,\r\n      \"readonly\": false,\r\n      \"view_width\": 4,\r\n      \"validation\": null,\r\n      \"group\": null,\r\n      \"signed\": null\r\n    },\r\n    {\r\n      \"id\": 139,\r\n      \"collection\": \"kiosks\",\r\n      \"field\": \"number\",\r\n      \"type\": \"INT\",\r\n      \"interface\": \"numeric\",\r\n      \"options\": null,\r\n      \"locked\": false,\r\n      \"translation\": null,\r\n      \"readonly\": false,\r\n      \"required\": false,\r\n      \"sort\": null,\r\n      \"note\": null,\r\n      \"hidden_input\": false,\r\n      \"hidden_list\": false,\r\n      \"view_width\": 4,\r\n      \"group\": null,\r\n      \"validation\": null\r\n    }\r\n  ]\r\n}\r\n\r\n\r\nHOWEVER, when trying to update the number field, the API throws an error, because it can't find the number column in the DB.\r\n\r\nIf a field _doesn't_ exist in the DB, but _it does_ in directus_fields, the API should ignore it."}, {"classified_as": "bug", "text": "## Search Terms\r\n\r\nfixit quick fix jsx flag tsconfig\r\n\r\n## Suggestion\r\n\r\nHitting \"Quick Fix\" in this error could offer to add the flag for you\r\n![{8446CBC8-3BA3-4F37-89F9-BD81DAEE9B26} png](https://user-images.githubusercontent.com/49038/59621991-48838480-90e5-11e9-80b5-fef5c5b62373.jpg)\r\n\r\n## Use Cases\r\n\r\nAnyone starting a reactproject\r\n\r\n## Checklist\r\n\r\nMy suggestion meets these guidelines:\r\n\r\n* [x] This wouldn't be a breaking change in existing TypeScript/JavaScript code\r\n* [x] This wouldn't change the runtime behavior of existing JavaScript code\r\n* [x] This could be implemented without emitting different JS based on the types of the expressions\r\n* [x] This isn't a runtime feature (e.g. library functionality, non-ECMAScript syntax with JavaScript output, etc.)\r\n* [x] This feature would agree with the rest of [TypeScript's Design Goals](https://github.com/Microsoft/TypeScript/wiki/TypeScript-Design-Goals).\r\n\r\n"}, {"classified_as": "bug", "text": "I've just installed Strapi with npx create-strapi-app my-project --quickstart and created a Content Type for an Article, with a content Rich Text field. While editing it in Chrome 77, I'm surprised to see that spell checking is disabled. Do I need to enable a setting somewhere? We're considering Strapi to manage our blog posts (served via Gatsby), and spell checking is an essential function.\r\n\r\n![image](https://user-images.githubusercontent.com/33569/67192068-7f7de580-f3b8-11e9-8e5a-bd92a238b226.png)\r\n"}, {"classified_as": "bug", "text": "**Informations**\r\n- **Node.js version**: 10.13.0\r\n- **npm version**: 6.4.1\r\n- **Strapi version**: 3.0.0-alpha.14.4.0\r\n- **Database**: Mongo\r\n- **Operating system**: Alpine\r\n\r\nAuto-reload does not work when adding new files. For example, running strapi generate:api hello does not cause a reload in development mode. "}, {"classified_as": "bug", "text": "<!--\r\nThank you for suggesting an idea to make Node.js better.\r\n\r\nPlease fill in as much of the template below as you're able.\r\n-->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nThere is no API to obtain a random integer within a range. It's a common enough problem to deal with (e.g. to implement other algorithms like [Fisher\u2013Yates shuffle](https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle)) and [easy to get wrong](https://stackoverflow.com/questions/10984974/why-do-people-say-there-is-modulo-bias-when-using-a-random-number-generator). Most other runtimes/languages implement this in their standard library.\r\n\r\n**Describe the solution you'd like**\r\n\r\njavascript\r\n// something like:\r\nconst randomInt = require('crypto').randomInt\r\n\r\nconst min = 0\r\nconst max = 10\r\nrandomInt(min, max, cb)\r\n\r\n\r\n**Describe alternatives you've considered**\r\n\r\nI'm not sure about the internal implementation but I gave it a stab here: https://github.com/olalonde/crypto-range. http://www.pcg-random.org/posts/bounded-rands.html has a nice overview of different techniques (my implementation is probably not the most efficient)."}, {"classified_as": "bug", "text": "#### Version\r\n\r\nbash\r\n$ node -v\r\nv13.1.0\r\n$ uname -a                                                                                                                                                                                                                                         06:58:36\r\nDarwin Admins-MacBook-Pro.local 19.0.0 Darwin Kernel Version 19.0.0: Wed Sep 25 20:18:50 PDT 2019; root:xnu-6153.11.26~2/RELEASE_X86_64 x86_64\r\n\r\n\r\n\r\n#### Code\r\n\r\njs\r\nrequire('https')\r\n  .get('https://www.megaplextheatres.com/api/theatres/all', (response) => {\r\n    console.log('OK');\r\n  })\r\n  .on('error', (error) => {\r\n    console.error(error);\r\n  });\r\n\r\n\r\n\r\n#### Actual\r\n\r\nError:\r\n\r\n\r\nError: Parse Error: Invalid header value char\r\n    at TLSSocket.socketOnData (_http_client.js:454:22)\r\n    at TLSSocket.emit (events.js:210:5)\r\n    at addChunk (_stream_readable.js:326:12)\r\n    at readableAddChunk (_stream_readable.js:301:11)\r\n    at TLSSocket.Readable.push (_stream_readable.js:235:10)\r\n    at TLSWrap.onStreamRead (internal/stream_base_commons.js:182:23) {\r\n  bytesParsed: 722,\r\n  code: 'HPE_INVALID_HEADER_TOKEN',\r\n  reason: 'Invalid header value char',\r\n  rawPacket: <Buffer 48 54 54 50 2f 31 2e 31 20 32 30 30 20 4f 4b 0d 0a 54 72 61 6e 73 66 65 72 2d 45 6e 63 6f 64 69 6e 67 3a 20 63 68 75 6e 6b 65 64 0d 0a 43 6f 6e 74 65 ... 1402 more bytes>\r\n}\r\n\r\n\r\n\r\n#### Expected\r\n\r\n\"OK\" or an error with an access to the raw HTTP response, so that I could at least somehow parse the response myself.\r\n\r\n#### Workarounds\r\n\r\nNone known to me.\r\n\r\nPreviously it was possible to workaround it using --http-parser=legacy.\r\n\r\nbash\r\n$ node -v\r\nv12.11.1\r\n$ node --http-parser=legacy test.js\r\nOK\r\n\r\n\r\n\r\nThis stopped working in v13.\r\n\r\nPrevious it was possible to override the default HTTP parser.\r\n\r\njs\r\nprocess.binding('http_parser').HTTPParser = require('http-parser-js').HTTPParser;\r\n\r\nrequire('https')\r\n  .get('https://www.megaplextheatres.com/api/theatres/all', (response) => {\r\n    console.log('OK');\r\n  })\r\n  .on('error', (error) => {\r\n    console.error(error);\r\n  });\r\n\r\n\r\n\r\nbash\r\n$ node -v\r\nv10.17.0\r\n$ node test-using-http-parser-js.js\r\nOK\r\n\r\n\r\n\r\nThis stopped working in v12.\r\n\r\nThis issue did not exist in Node.js v10.\r\n\r\n#### Related issues\r\n\r\n* https://github.com/nodejs/node/issues/22064#issuecomment-519675190\r\n* https://github.com/sindresorhus/got/issues/855"}, {"classified_as": "enhancement", "text": "Serialization fails. Would normally just fix (instead of log), but need to decode the Opaque system again to see what is up here."}, {"classified_as": "bug", "text": "- [x] I have verified there are no duplicate active or recent bugs, questions, or requests\r\n- [x] I have verified that I am using the latest version of Material Dialogs.\r\n- [x] I have given my issue a non-generic title.\r\n- [x] I have read over the documentation (before asking questions on how to do something).\r\n\r\n###### Include the following:\r\n - Material Dialogs version: 0.9.1.0\r\n - Device OS version: 7.0\r\n - Device Manufacturer: Google\r\n - Device Name: Nexus 5X\r\n\r\n###### Issue Description:\r\n\r\nThis is more a feature request than a bug report.\r\nIt would be nice to have the possibility to set a unique id for a dialog when using the MaterialDialog.Builder.\r\nThis allows encapsulating multiple dialogs in a separate class with a single SingleButtonCallback implementation to handle all different kind of callback invocations depending on the Dialog's id.\r\n\r\nAny feedback on that is appreciated."}, {"classified_as": "enhancement", "text": "Commit 4599d5841353fdf8096191c30a592fedc844efce an incomplete/incorrect fix.\r\n\r\nIn IdManager.h, id_traits has its static variables assigned inline, right where they are declared.  This is incorrect unless the inline keyword is used.  I'm not a C++ expert but the current code may violate the One Definition Rule.  Without the inline keyword, the linkage works strangely, which is the source of the undefined reference error on debug builds.\r\n\r\nOne solution besides inline would be out-of line declarations of the static variables, but this is tricky because of the void_t.  Once implemented, this solution causes gcc to complain about the use of non-contexpr variables in the static_assert, so it does not work.\r\n\r\nThe best solution IMO is to replace the const keyword with constexpr for base, step, count, and invalid in both specializations of id_traits.  This makes the static_assert in the second class template valid, and it also fixes the undefined reference error.\r\n\r\nRegardless, a new local variable in the destructor of sys_vm_t is not a good fix."}, {"classified_as": "enhancement", "text": "We're trying to document an existing API by creating the JSON definition files by hand.  The resource listing file has baseUrl set to the location of the JSON files.  The API definitions files have baseUrl set to the location of the API.\n\nWith this setup, the definitions are loaded correctly, and the API samples work (if CORS headers are set up right), but nowhere in the displayed documentation tells you the base URL for the API calls - the page footer references the base URL for the JSON, which is not very helpful to the readers. :-)\n\nPS It really wasn't a good idea to have two baseUrl parameters with different meanings depending on which JSON file they appear in.\n"}, {"classified_as": "bug", "text": "https://github.com/strapi/strapi/blob/a76b0022c04e540efd7fa43905879e9b6c0d0c8e/packages/strapi/lib/utils/index.js#L115\r\n\r\nHello, firstly I love what you are doing with Strapi. The only thing that would be great would be if there was a more prominent notification that usage statistics are being logged with the following:\r\n\r\n      /*\r\n        DISCLAIMER:\r\n        This function allows us to analyse the usage of Strapi. The aim is to\r\n        improve the product and helps us to understand what kind of APIs are built with Strapi.\r\n\r\n        Note: The collected data are anonymous and aren't sold to anyone!\r\n\r\n        If you don't want to share your data with us, you can simply remove the strapi.uuid from the package.json.\r\n      */\r\n\r\n      (function (uuid, fetch, fs, path, os) {\r\n        const options = {\r\n          method: 'POST',\r\n          credentials: 'include',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            \"uuid\": uuid,\r\n            \"properties\": {\r\n              \"models\": Object.keys(strapi.models).reduce((acc, current) => {\r\n                acc[current] = Object.keys(strapi.models[current].attributes);\r\n\r\n                return acc;\r\n              }, {}),\r\n              \"environment\": strapi.config.environment,\r\n              \"node_modules\": fs.readdirSync(path.resolve(strapi.config.appPath, 'node_modules')),\r\n              \"os\": os.type()\r\n            }\r\n          })\r\n        };\r\n\r\n        fetch('https://analytics.strapi.io/track', options);\r\n      });\r\n    \r\n"}, {"classified_as": "enhancement", "text": "There is not much to say but TextBox border is around shadow not visa-versa.\r\n\r\n![image](https://user-images.githubusercontent.com/3918999/77406469-fc244e00-6db4-11ea-8e79-4b0aae21534f.png)\r\n"}]