[{"classified_as": "enhancement", "text": "Umbrella bug for all request interception issues in Puppeteer.\r\nThis mostly depends on upstream Chromium bug: https://crbug.com/899386\r\n\r\n#### Description\r\n\r\nDevTools Protocol emits two events for every intercepted request:\r\n- [Network.requestWillBeSent(requestId)](https://vanilla.aslushnikov.com/#Network.requestWillBeSent)\r\n- [Network.requestIntercepted(interceptionId)](https://vanilla.aslushnikov.com/#Network.requestIntercepted)\r\n\r\nPuppeteer extracts different pieces of information from these events. However, since interceptionId and requestId aren't matching, Puppeteer uses [heuristics](https://github.com/GoogleChrome/puppeteer/blob/9800b2c3c2d31379badb9d4dab1cc8fc95aee48a/lib/NetworkManager.js#L640-L672) to match these events together. This is necessary to provide a consistent API to our clients.\r\n\r\nUnfortunately, these heuristics aren't reliable and break under different corner cases: #1664, #2848, #3030, #3369 and so on.\r\n\r\n#### Mitigation\r\n\r\nWe weren't able to fix this upstream up until today due to the network stack refactoring in Chromium. Now, with Network Service getting gradually adopted, we can fix this upstream.\r\n\r\nThe plan is:\r\n1. Enable Network Service by default to Puppeteer users\r\n2. Fix network instrumentation in DevTools protocol for the Network Service and migrate onto it. (see https://crbug.com/899386)."}, {"classified_as": "bug", "text": "The following image is an example of slice plots. The points highlighted by the red circles have similar colors to the background, and it is difficult for users to find such points. I think we can improve the readability of slice plots by changing the color scale and/or background color.\r\n\r\n![slice-plot-low-contrast](https://user-images.githubusercontent.com/3255979/66909515-da75ac80-f047-11e9-94ca-3958ddf81c39.png)\r\n\r\n## Code to reproduce\r\n\r\npython\r\nimport optuna\r\n\r\ndef objective(trial):\r\n    x = trial.suggest_uniform('x', -10, 10)\r\n    y = trial.suggest_uniform('y', -10, 10)\r\n    return x - y\r\n\r\nstudy = optuna.create_study()\r\nstudy.optimize(objective, n_trials=20)\r\n\r\noptuna.visualization.plot_slice(study)\r\n\r\n\r\n## Library version\r\n\r\noptuna: 0.17.1\r\nplotly: 4.1.1"}, {"classified_as": "bug", "text": "jsFiddle: http://jsfiddle.net/fenivana/xr63gj2x/\n\n js\nconst a = [];\nVue.set(a, 10, 'foo');\nconsole.log(a); // ['foo']\nalert(a.length); // 1\nalert(a[10]); // undefined\nalert(a[0]); // 'foo'\n\n\nExpected a would be [ undefined x 10, 'foo'], bug got ['foo'] instead.\n"}, {"classified_as": "enhancement", "text": "Hi!\nWhen I get a date field  of an object using php sdk, it usually returns a dateTime and I was able to hadle it:\n(e.g.)\n\n\n$now = new DateTime();\n$diff = $now->diff($task->get(\"start\"));\n\n\nNow, with parse-server open source version, it returns a string that must be parsed in order to handle it.\n"}, {"classified_as": "enhancement", "text": "See https://github.com/polkadot-js/apps/pull/774#issuecomment-468997208 after https://github.com/polkadot-js/api/pull/739"}, {"classified_as": "enhancement", "text": "Not able to decode DigestItem that returned from RPC\r\n\r\nRelated: https://github.com/paritytech/substrate/pull/1478\r\n\r\nI think the JSON codec needs some better thoughts to avoid those breaking changes"}, {"classified_as": "enhancement", "text": "master/src/cli/parse-server.js line 54\n\noptions = Object.keys(definitions).reduce(function (options, key) {\n  if (typeof program[key] !== 'undefined') {\n    options[key] = program[key];\n  }\n  return options;\n}, options);\n\n\nE.g\"mountPath\": \"/mymountPath\",\n\ntypeof program[key] is defalut /parse\n\noptions = Object.keys(definitions).reduce(function (options, key) {\n  if (typeof program[key] !== 'undefined' &&  typeof options[key] == 'undefined') {\n    options[key] = program[key];\n  }\n  return options;\n}, options);\n"}, {"classified_as": "enhancement", "text": "Pending folders are added/updated as we process them in the cluster config handling. Each update results in a config save. This is unnecessary as we already have a mechanism for deferred config save in the method in question. For a lot of folders this becomes a lot of config saving. This is not a purely theoretic issue:\r\n\r\n<img width=\"729\" alt=\"Screenshot 2019-07-26 at 10 50 28\" src=\"https://user-images.githubusercontent.com/125426/61939386-6d480300-af93-11e9-97b9-4539d93a22c7.png\">\r\n"}, {"classified_as": "enhancement", "text": "DefaultValue of parameters used to be filled in by default.\nRight now they are not anymore.\n\n(swagger 1.2)\n"}, {"classified_as": "enhancement", "text": "It looks like the tap method is flaky, or at least the test for it is.\r\n\r\nhttps://travis-ci.org/GoogleChrome/puppeteer/jobs/271528560"}, {"classified_as": "enhancement", "text": "i.e. versionString becomes versionText. We need the same logic we apply in boxing (that checks for a valid start, before replace).\r\n\r\nFix this -\r\n\r\nhttps://github.com/polkadot-js/api/pull/1951/files#diff-16721fcfbabb6adf34be1260e3ca19c3R65-R70"}, {"classified_as": "enhancement", "text": "This is a regression:\r\n\r\nconst api = await ApiPromise.create();\r\nconst fees = await api.derive.balance.fees(); // fees has type any\r\n\r\n\r\nLooking a bit in detail, it might be related to the refactor of interfaces to types/src/interface.\r\n\r\nSo yarn build generates the the .d.ts files, and having a look at api/build/base/Decorate.d.ts, it says for the derive:\r\n\r\n\r\n        balances: {\r\n            all: import(\"../types\").MethodResult<ApiType, (address: string | import(\"../../../types/src/interfaces\").AccountId | import(\"../../../types/src/interfaces\").AccountIndex | import(\"../../../types/src/interfaces\").Address) => Observable<import(\"../../../api-derive/src/types\").DerivedBalances>>;\r\n            votingBalance: import(\"../types\").MethodResult<ApiType, (address: string | import(\"../../../types/src/interfaces\").AccountId | import(\"../../../types/src/interfaces\").AccountIndex | import(\"../../../types/src/interfaces\").Address) => Observable<import(\"../../../api-derive/src/types\").DerivedBalances>>;\r\n            fees: import(\"../types\").MethodResult<ApiType, () => Observable<import(\"../../../api-derive/src/types\").DerivedFees>>;\r\n            votingBalances: import(\"../types\").MethodResult<ApiType, (addresses?: (string | import(\"../../../types/src/interfaces\").AccountId | import(\"../../../types/src/interfaces\").AccountIndex | import(\"../../../types/src/interfaces\").Address)[] | undefined) => Observable<import(\"../../../api-derive/src/types\").DerivedBalances[]>>;\r\n            votingBalancesNominatorsFor: import(\"../types\").MethodResult<ApiType, (address: string | import(\"../../../types/src/interfaces\").AccountId | import(\"../../../types/src/interfaces\").AccountIndex | import(\"../../../types/src/interfaces\").Address) => Observable<import(\"../../../api-derive/src/types\").DerivedBalances[]>>;\r\n        };\r\n\r\n\r\nAnd ../../../types/src/interfaces doesn't exists once we're out out @polkadot/api.\r\n\r\nSo the idea is to force that yarn build to use @polkadot/types there. I don't have a strong clue how to do that, but will have a look next week.\r\n\r\nNote: checkTypes.manual.ts works perfectly well."}, {"classified_as": "enhancement", "text": "Commit 4599d5841353fdf8096191c30a592fedc844efce an incomplete/incorrect fix.\r\n\r\nIn IdManager.h, id_traits has its static variables assigned inline, right where they are declared.  This is incorrect unless the inline keyword is used.  I'm not a C++ expert but the current code may violate the One Definition Rule.  Without the inline keyword, the linkage works strangely, which is the source of the undefined reference error on debug builds.\r\n\r\nOne solution besides inline would be out-of line declarations of the static variables, but this is tricky because of the void_t.  Once implemented, this solution causes gcc to complain about the use of non-contexpr variables in the static_assert, so it does not work.\r\n\r\nThe best solution IMO is to replace the const keyword with constexpr for base, step, count, and invalid in both specializations of id_traits.  This makes the static_assert in the second class template valid, and it also fixes the undefined reference error.\r\n\r\nRegardless, a new local variable in the destructor of sys_vm_t is not a good fix."}, {"classified_as": "bug", "text": "**Informations**\r\n- **Node.js version**: 10.6.0\r\n- **npm version**: 6.1.0\r\n- **Strapi version**: 3.0.0-alpha.12.7.1\r\n- **Database**: MongoDB v4.0.0\r\n- **Operating system**: Mac OS 10.12.6 and CentOS 7.5 (1804)\r\n\r\n**What is the current behavior?**\r\nI'm running in a managed corporate environment, and can't do a global node module installs.\r\n\r\nI have to use nvm to manage my node version (which is currently v10.6.0).\r\n\r\nI have MongoDB v4.0.0 installed locally as well.\r\n\r\nI have full permission in my personal dev space, but not above it (hence why I have to use nvm and can't do -g installs of modules).\r\n\r\nOther node.js apps I'm using work in this setup. But I can't get strapi to start in this environment on either Mac OS 10.12.6 or on CentOS 7.5 (1804) by just typing strapi (I'm assuming because it's not a global install).\r\n\r\n**Steps to reproduce the problem**\r\n\r\nIn the outlined dev environment above, if I do node ./node_modules/strapi/bin/strapi.js new myProject I can get strapi to start.\r\n\r\nI walk through the setup inputs (which I leave at defaults). But get back this error.\r\n\r\n Testing database connection...\r\nError: Error: Failed to load admin...\r\n(Error: Cannot find module '/Users/appdevk5k4/Documents/Dev/newDataServer/strapi/node_modules/strapi/node_modules/strapi-generate-admin')\r\n\r\nfollowed by a long list of other issues...\r\n\r\n**What is the expected behavior?**\r\n\r\nI was hoping this would work, but not sure what to do next as I'm new to strapi.\r\n\r\n**Suggested solutions**\r\n\r\n"}, {"classified_as": "enhancement", "text": "DatabaseController.canAddField does not check whether a request is issued with a master key before verifying CLPs. This is not consistent with all other DB ops(create/update/read/delete). Is it this way by design? \n"}, {"classified_as": "bug", "text": "Type definition\r\n\r\nexport default {\r\n    types: {\r\n        ID: \"H256\",\r\n        IDS: \"Vec<ID>\",\r\n        Value: \"Vec<u8>\",\r\n\r\n        Change: {\r\n            primary: \"ID\",\r\n            relation: \"IDS\",\r\n            before: \"Option<Value>\",\r\n            after: \"Option<Value>\"\r\n        },\r\n        \r\n        Mutation: {\r\n            changes: 'Vec<Change>',\r\n        }\r\n    }\r\n}\r\n\r\nlead to error\r\n\r\nGenerating from metadata, 17,573 bytes\r\n/Users/dmitriyshabanov/Trucks/types/src/interfaces/augment-api-consts.ts\r\n\tGenerating\r\n\tWriting\r\n\r\n/Users/dmitriyshabanov/Trucks/types/src/interfaces/augment-api-query.ts\r\n\tGenerating\r\n\r\n/Users/dmitriyshabanov/Trucks/types/node_modules/@polkadot/typegen/util/derived.js:116\r\n    if (subDef.info === _types.TypeDefInfo.Plain) {\r\n               ^\r\nTypeError: Cannot read property 'info' of undefined\r\n\r\nbecause it can't proper handle relation: \"IDS\""}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!-- =============================================================================== -->\r\n<!--  If you are not using the current Strapi release, you will be asked to update. -->\r\n<!-- Please see the wiki for guides on upgrading to the latest release. -->\r\n<!-- =============================================================================== -->\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 10.x.x -->\r\n<!-- npm 6.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Strapi version**: 3.0.0-alpha.24.1\r\n\r\n**What is the current behavior?**\r\nWhen creating a new Content Type, I looked into the generated files and saw the following in api/organization/models/Organization.settings.json:\r\n\r\njson\r\n...\r\n\"state\": {\r\n      \"default\": \"\",\r\n      \"type\": \"enumeration\",\r\n      \"enum\": [\r\n        \"active\",\r\n        \" inactive\"\r\n      ]\r\n    }\r\n\r\n\r\nNote the extra space in  inactive, I believe the data should be sanitized before being stored in the model. I do not know if this issue has any undesirable side effect on the app, just noticed it so reporting it."}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!-- =============================================================================== -->\r\n<!--  If you are not using the current Strapi release, you will be asked to update. -->\r\n<!-- Please see the wiki for guides on upgrading to the latest release. -->\r\n<!-- =============================================================================== -->\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 10.x.x -->\r\n<!-- npm 6.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**: 10.14.1\r\n- **NPM version**: 6.4.1\r\n- **Strapi version**: 3.0.0-alpha.16\r\n- **Database**: PostgreSQL 10\r\n- **Operating system**: Windows 10\r\n\r\n\r\n**What is the current behavior?**\r\n\r\n![image](https://user-images.githubusercontent.com/13287948/50123801-449db380-02b6-11e9-8473-f9c98bcc5e12.png)\r\n\r\n\r\n\r\n**Steps to reproduce the problem**\r\n\r\nCopy and paste:\r\n\r\n## Hyphens\r\n\r\n---\r\n\r\n\r\n## Asterisks\r\n\r\n***\r\n\r\n\r\n## Underscores\r\n___\r\n\r\n\r\n\r\n**What is the expected behavior?**\r\n\r\n![image](https://user-images.githubusercontent.com/13287948/50124001-d0afdb00-02b6-11e9-8465-771e6a57e37d.png)\r\n\r\n![image](https://user-images.githubusercontent.com/13287948/50124052-05bc2d80-02b7-11e9-9a82-be2e7a35f74c.png)\r\n\r\n\r\n**Suggested solutions**\r\n"}, {"classified_as": "enhancement", "text": "Response Messages's Response Model not shown in case if primitive types e.g for string\n"}, {"classified_as": "enhancement", "text": "I had some things that could not be scanned (permission denied). I fixed those permissions and want to rescan. I cannot, manually:\r\n\r\n<img width=\"570\" alt=\"Screen Shot 2019-06-10 at 09 38 55\" src=\"https://user-images.githubusercontent.com/125426/59179891-b834c500-8b63-11e9-9b04-f93abd4a79ad.png\">\r\n\r\n(The Rescan button is disabled, presumably because the folder is not in one of the pre-approved scannable states?)\r\n"}, {"classified_as": "bug", "text": "\r\n\r\n### Steps to reproduce\r\n\r\n**Tell us about your environment:**\r\n\r\n* Puppeteer version: v1.0.0\r\n* Platform / OS version: all\r\n* URLs (if applicable):\r\n* Node.js version: all\r\n\r\n**What steps will reproduce the problem?**\r\n\r\n_Please include code that reproduces the issue._\r\n\r\n1. open a page that opens a popup\r\n2. close the page through page.close()\r\n3. observe the browser.targets()\r\n\r\n**What is the expected result?**\r\n\r\nNo leftover targets created by the page, or at least a way of them closing automatically\r\n\r\n**What happens instead?**\r\n\r\na target for the popup stays open\r\n\r\nI'd suggest to keep track of all targets created by the page and closing them when page.close() is called. or maybe with a page.close(closeChildPages)."}, {"classified_as": "bug", "text": "<!--\r\nHello \ud83d\udc4b Thank you for submitting an issue.\r\n\r\nBefore you start, please make sure your issue is understandable and reproducible.\r\nTo make your issue readable make sure you use valid Markdown syntax.\r\n\r\nhttps://guides.github.com/features/mastering-markdown/\r\n-->\r\n\r\n**Describe the bug**\r\nClick on the link **[migration guides](https://github.com/strapi/strapi/wiki)** in the **[Migration](https://github.com/strapi/strapi#migration)** section of the README file results with the same README page being displayed. \r\n\r\n**Steps to reproduce the behavior**\r\n\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nIf the user selects a bad link within strapi hierarchy, a modal warning (or equivalent) should be shown. In the current situation the link https://github.com/strapi/strapi/wiki is simply redirected to https://github.com/strapi/strapi, creating a confusing situation.\r\n\r\n**Note 1**: the link to Migration guides from the installed Strapi admin interface:\r\n\r\n![image](https://user-images.githubusercontent.com/2712405/79801795-c67b7200-832c-11ea-86e7-f5202b0a06ac.png)\r\n\r\npoints to https://strapi.io/documentation/3.0.0-beta.x/migration-guide/ - indicating that most likely the strapi wiki does not exist for some time.\r\n\r\n**Note 2**: Having to first install new version of strapi defeats the purpose of the Migration Guide (hope this is obvious \ud83d\ude04)\r\n\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Code snippets**\r\nIf applicable, add code samples to help explain your problem.\r\n\r\n**System**\r\n\r\n- Node.js version: v12.14.0<!-- Please ensure you are using the Node LTS version (v12) -->\r\n- NPM version: 6.13.6\r\n- Strapi version:  3.0.0-beta.19.5<!-- Please make sure you are on the latest version -->\r\n- Database: N/A\r\n- Operating system: Windows 10 Enterprise\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n"}, {"classified_as": "bug", "text": "When an error occures on a Web Worker, it is not collected by page.on('pageerror'... event. \r\n\r\nFor example:\r\n\r\njs\r\nconst puppeteer = require('puppeteer');\r\n(async () => {\r\n  const browser = await puppeteer.launch();\r\n  const page = await browser.newPage();\r\n  page.on('pageerror', message => console.log(message));\r\n\r\n  await page.setContent(<!DOCTYPE html>\r\n  <script id=\"worker1\" type=\"javascript/worker\">\r\n    throw new Error('this is my error');\r\n  </script>\r\n  <script>\r\n    const blob = new Blob([\r\n      document.querySelector('#worker1').textContent\r\n    ], { type: \"text/javascript\" })\r\n\r\n    new Worker(window.URL.createObjectURL(blob));\r\n  </script>);\r\n})()\r\n\r\n"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!-- =============================================================================== -->\r\n<!--  If you are not using the current Strapi release, you will be asked to update. -->\r\n<!-- Please see the wiki for guides on upgrading to the latest release. -->\r\n<!-- =============================================================================== -->\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 10.x.x -->\r\n<!-- npm 6.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**: 10.14.0 / 11.3.0\r\n- **NPM version**: 6.4.1\r\n- **Strapi version**: 3.0.0-alpha.15\r\n- **Database**: MongoDB / MySQL\r\n- **Operating system**: macOS Mojave\r\n\r\n\r\n**What is the current behavior?**\r\nThe description doesn't fit in the attribute field\r\n<img width=\"509\" alt=\"zrzut ekranu 2018-11-29 o 16 28 38\" src=\"https://user-images.githubusercontent.com/28870390/49233272-f0f62380-f3f5-11e8-8590-8c185f24c16e.png\">\r\n\r\n\r\n\r\n**Steps to reproduce the problem**\r\nIn admin panel choose: Models > + Attribute\r\n\r\n\r\n**What is the expected behavior?**\r\nThe description fits in one line with title and image\r\n\r\n\r\n**Suggested solutions**\r\nAdd overflow to description text\r\ncss\r\ntext-overflow: ellipsis;\r\n\r\n"}, {"classified_as": "bug", "text": "<!--\r\nHello \ud83d\udc4b Thank you for submitting an issue.\r\n\r\nBefore you start, please make sure your issue is understandable and reproducible.\r\nTo make your issue readable make sure you use valid Markdown syntax.\r\n\r\nhttps://guides.github.com/features/mastering-markdown/\r\n-->\r\n\r\n**Describe the bug**\r\nThere is no way to disable the aggregation feature for a specific type.\r\n\r\n**Steps to reproduce the behavior**\r\n1. Install the GraphQL extension\r\n2. Copy the snippet below into schema.graphql.js for the API type.\r\n3. Try to query {api type name}Connection\r\n4. See that it still works when it should have been disabled\r\n\r\n**Expected behavior**  \r\nFor example, considering an API for order, this should disable the ordersConnection query on GraphQL, but it doesn't:\r\njavascript\r\nmodule.exports = {\r\n  type: {\r\n    OrderConnection: false, // This shouldn't even be necessary, but it also does nothing\r\n  },\r\n  resolver: {\r\n    Query: {\r\n      ordersConnection: false,\r\n    },\r\n  },\r\n};\r\n\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/7467891/78308089-67052000-753f-11ea-9a0b-129f9c70e30e.png)\r\n\r\n**System**\r\n- Node.js version: v13.7.0\r\n- NPM version: v6.13.6\r\n- Yarn version: v1.22.4\r\n- Strapi version: v3.0.0-beta.19.5\r\n- Database: MongoDB\r\n- Operating system: Windows 10 1909 with WSL Ubuntu 18.04 LTS\r\n\r\n**Additional context**\r\nThis is relevant to me because I've limited the find and findOne controllers to only show the orders from the logged-in user. However, this aggregator returns the count of the orders from ALL users, which I don't want to be public.\r\nI'd like to disable it since I'm not using it and it's just leaking data I don't want to.\r\n"}, {"classified_as": "bug", "text": "**Describe the bug**\r\nFor accessibility purposes there should be scroll bars for the left menu and the main window as not everyone has the option for touchpad or mouse scroll wheel support.\r\n\r\n**Steps to reproduce the behavior**\r\nN/A\r\n\r\n**Expected behavior**\r\nAbility to scroll without the requirement of touchpad or mouse scroll wheels\r\n\r\n**Screenshots**\r\n\r\nLeft Menu\r\n![image](https://user-images.githubusercontent.com/8593673/64321351-393e0580-cf75-11e9-9b70-8e1965098d81.png)\r\n\r\nMain Window:\r\n![image](https://user-images.githubusercontent.com/8593673/64321403-4f4bc600-cf75-11e9-9004-bb74f234812a.png)\r\n\r\n**Code snippets**\r\nN/A\r\n\r\n**System**\r\n- Node.js version: v12\r\n- NPM version: v6\r\n- Strapi version: beta.15\r\n- Database: MariaDB 10.4 \r\n- Operating system: Linux Mint 19.3 Tina (Ubuntu 18.04 LTS)\r\n- Browser: Chrome and Firefox latest stable\r\n\r\nTagging @davidkartuzinski per request as this was taken from Coding with Jason Livestream\r\n"}, {"classified_as": "enhancement", "text": "This is a container bug for issues caused by PR https://github.com/libuv/libuv/pull/2082. Disparate reports but the root cause is the linked PR.\r\n\r\n#25856 \r\n#27869\r\n#28512\r\n#28882\r\n#28917\r\n\r\nFixing it turned out to be not so easy (https://github.com/libuv/libuv/pull/2313) and simply reverting trades one regression for another."}, {"classified_as": "enhancement", "text": "1. Open headful chrome with a custom userDataDir\r\n2. Write some localStorage:\r\njs\r\nlocalStorage.key = 'hello';\r\n\r\n3. Close headful chrome\r\n4. run headless with the same userDataDir\r\n5. try reading localStorage in headless chrome:\r\njs\r\nawait page.evaluate(() => localStorage.key);\r\n\r\nExpected: \"hello\" to be returned in (5)\r\nActual: empty object is returned\r\n\r\nThis is similar to #921 and might be due to missing encryption for local storage in headless chrome."}, {"classified_as": "enhancement", "text": "Syncthing v0.12.14, OSX\n\nWhen accepting or reject the request to share usage data, the user gets greeted with a 'please restart' dialog. This should be a bit more streamlined (maybe simply ignore the fact that we need to restart?)\n"}, {"classified_as": "bug", "text": "<!--\r\nHello \ud83d\udc4b Thank you for submitting an issue.\r\n\r\nBefore you start, please make sure your issue is understandable and reproducible.\r\nTo make your issue readable make sure you use valid Markdown syntax.\r\n\r\nhttps://guides.github.com/features/mastering-markdown/\r\n\r\nPlease ensure you have also read and understand the contributing guide.\r\n\r\nhttps://github.com/strapi/strapi/blob/master/CONTRIBUTING.md#reporting-an-issue\r\n-->\r\n\r\n**Describe the bug**\r\nIf I set STRAPI_LOG_LEVEL variable in .env file it does not work because log utils are loaded before dotenv\r\n\r\n**Steps to reproduce the behavior**\r\n\r\n1. Set STRAPI_LOG_LEVEL in env file & see if it works\r\n\r\n**Expected behavior**\r\nEnv vars from .env file should be loaded before starpi-utils logger\r\n\r\n**System**\r\n\r\n- Node.js version: 12.18.0 <!-- Please ensure you are using the Node LTS version (v12) -->\r\n- NPM version: Yarn 1.22.x\r\n- Strapi version: 3.0.2 <!-- Beta and Alpha versions are no longer supported -->\r\n- Database: Mongo\r\n- Operating system: MacOS 10.15.5\r\n\r\n"}, {"classified_as": "enhancement", "text": "When there are lots of devices and/or folders (in the hundreds), the GUI becomes unusably slow, beyond what you'd expect from just having a cumbersome amount of GUI elements.\r\n\r\nFrom my initial analysis something like the following is what happens.\r\n\r\n- We load the GUI Javascript and stuff.\r\n- We load the system config.\r\n- Based on the config we populate the initial $scope with the folders and devices, and Angular starts rendering the boxes for each.\r\n- For each folder and device we fire a bunch of HTTP requests to get the initial status, completion, etc.\r\n- When a response comes in we do a bunch of work to update the stuff in $scope which causes Angular to re-render all of the things.\r\n\r\nGiven *k* HTTP requests times *n* folders each causing a re-render of *n* folder boxes this is essentially O(n\u00b2) on folders and/or devices and the rendering takes ages.\r\n\r\nThere appears to be a solution in Angular 1.3+ $applyAsync that delays rendering until fixed tick and thus batches handling the responses. We're currently on 1.2. Upgrades have historically been painful."}, {"classified_as": "enhancement", "text": "If/when I add more than 5 items to my TabView component the app crashes. This is for sure a bug. According to iOS dev library, if you add more than 5 items to the Tab controller, it will automatically add a \"More\" button in the last position, so when you tap it, it will show the other items in a list. Very neat.\n\nDoes this also apply in {N}? It should. Otherwise we have to create a \"More\" Item specifically, add listView innside, populate the list with data for each menu item. Program the tap for each listViewItem, that will also cause a page-navigation away from the view with the original TabView component, etc... Too much work and hassle compared to the native way. \n\n> The More Navigation Controller\n> The tab bar has limited space for displaying your custom items. If you add six or more custom view controllers to a tab bar controller, the tab bar controller displays only the first four items plus the standard More item on the tab bar. Tapping the More item brings up a standard interface for selecting the remaining items.\n"}, {"classified_as": "enhancement", "text": "In the implementation of http module, the headers are parsed into an object where the keys are header names and the values are header values. If there are multiple headers with same name in the response like multiple Set-Cookie headers, only the last header survive. It overwrites the previous headers.\n\nExample:\n\nThese headers: \n\n\nHeader-A : content1\nHeader-B : content2\nHeader-B : content3\n\n\nwill result in:\n\n js\n{\n    \"Header-A\" : \"content1\",\n    \"Header-B\" : \"content3\"\n}\n\n\nHow can I reach the lost headers? If there is not a way, you may also provide the headers as an array next to the current headers object in http module.\n"}, {"classified_as": "enhancement", "text": "### Steps to reproduce\r\n\r\n**Tell us about your environment:**\r\n\r\n* Puppeteer version: 1.1.1\r\n* Platform / OS version: macOS Sierra 10.12.6\r\n* URLs (if applicable): https://dpaphoto.com/\r\n* Node.js version: 9.6.1\r\n* Note: This issue does not happen when await puppeteer.launch({ headless: false });\r\n\r\n**What steps will reproduce the problem?**\r\n\r\n\r\nconst puppeteer = require('puppeteer');\r\n \r\nfunction iterateManipulatedObject () {\r\n for (const key in obj = {}) {\r\n    obj[key] = 'unexpected-key-added';\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\n(async () => {\r\n  const browser = await puppeteer.launch();\r\n  const page = await browser.newPage();\r\n  await page.goto('https://dpaphoto.com/');\r\n  const result = await page.evaluate(iterateManipulatedObject);\r\n  console.log(result);\r\n  await browser.close();\r\n})();\r\n\r\n\r\n**What is the expected result?**\r\n{}\r\n\r\n**What happens instead?**\r\n\r\n{ '__\\u0001symbol:__\\u0001symbol:react.element0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol@@0.06742652620663936':\r\n   { '@@__\\u0001symbol:__\\u0001symbol:react.element0.06742652620663936': true,\r\n     '@@__\\u0001symbol:__\\u0001symbol:react.portal0.06742652620663936': true,\r\n     '@@__\\u0001symbol:__\\u0001symbol:react.fragment0.06742652620663936': true,\r\n     '@@__\\u0001symbol:__\\u0001symbol:react.strict_mode0.06742652620663936': true,\r\n     '@@__\\u0001symbol:__\\u0001symbol:react.provider0.06742652620663936': true,\r\n     '@@__\\u0001symbol:__\\u0001symbol:react.context0.06742652620663936': true,\r\n     '@@__\\u0001symbol:__\\u0001symbol:react.async_mode0.06742652620663936': true,\r\n     '@@__\\u0001symbol:__\\u0001symbol:react.forward_ref0.06742652620663936': true,\r\n     '@@__\\u0001symbol:__\\u0001symbol:react.call0.06742652620663936': true,\r\n     '@@__\\u0001symbol:__\\u0001symbol:react.return0.06742652620663936': true,\r\n     '@@__\\u0001symbol:iterator0.067426526206639361': true,\r\n     '@@__\\u0001symbol:Symbol._hidden0.067426526206639363': true,\r\n     '@@__\\u0001symbol:Symbol.hasInstance0.067426526206639365': true,\r\n     '@@__\\u0001symbol:Symbol.isConcatSpreadable0.067426526206639366': true,\r\n     '@@__\\u0001symbol:Symbol.match0.067426526206639367': true,\r\n     '@@__\\u0001symbol:Symbol.replace0.067426526206639368': true,\r\n     '@@__\\u0001symbol:Symbol.search0.067426526206639369': true,\r\n     '@@__\\u0001symbol:Symbol.species0.0674265262066393610': true,\r\n     '@@__\\u0001symbol:Symbol.split0.0674265262066393611': true,\r\n     '@@__\\u0001symbol:Symbol.unscopables0.0674265262066393612': true,\r\n     '@@__\\u0001symbol:Symbol.toPrimitive0.067426526206639364': true,\r\n     '@@__\\u0001symbol:toStringTag0.067426526206639362': true,\r\n     '@@__\\u0001symbol:0.0674265262066393613': true,\r\n     '@@__\\u0001symbol:Symbol.asyncIterator0.0674265262066393614': true,\r\n     '@@__\\u0001symbol:Symbol.observable0.0674265262066393615': true,\r\n     '@@__\\u0001symbol:0.0674265262066393616': true },\r\n  '__\\u0001symbol:__\\u0001symbol:react.portal0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol:__\\u0001symbol:react.fragment0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol:__\\u0001symbol:react.strict_mode0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol:__\\u0001symbol:react.provider0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol:__\\u0001symbol:react.context0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol:__\\u0001symbol:react.async_mode0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol:__\\u0001symbol:react.forward_ref0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol:__\\u0001symbol:react.call0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol:__\\u0001symbol:react.return0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol:iterator0.067426526206639361': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol._hidden0.067426526206639363': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.hasInstance0.067426526206639365': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.isConcatSpreadable0.067426526206639366': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.match0.067426526206639367': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.replace0.067426526206639368': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.search0.067426526206639369': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.species0.0674265262066393610': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.split0.0674265262066393611': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.unscopables0.0674265262066393612': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.toPrimitive0.067426526206639364': 'unexpected-key-added',\r\n  '__\\u0001symbol:toStringTag0.067426526206639362': 'unexpected-key-added',\r\n  '__\\u0001symbol:0.0674265262066393613': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.asyncIterator0.0674265262066393614': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.observable0.0674265262066393615': 'unexpected-key-added',\r\n  '__\\u0001symbol:0.0674265262066393616': 'unexpected-key-added' }\r\n"}, {"classified_as": "enhancement", "text": "Using system_clock is incorrect, and its precision may vary too much on platforms.\nhigh_resolution_clock doesn't guarantee is_steady=true as well.\n"}, {"classified_as": "enhancement", "text": "If we fail to rename a file (the last step when pulling it), the temp file is removed. It should instead be kept around as usual so we can reuse it.\n"}, {"classified_as": "bug", "text": "**Information**\r\n\r\n- **Node.js version**: 9.6.1\r\n- **npm version**: 5.8.0\r\n- **Strapi version**: 3.0.0-alpha.11.3\r\n- **Database**: MongoDB\r\n- **Operating system**: MacOS\r\n\r\n**What is the current behavior?**\r\n\r\nStrapi server fails to start when package.json contains shell parameter syntax, e.g. a script containing FOO=${BAZ:-foo}.\r\n\r\nShell parameters could normally be used with npm but Strapi interprets them as JS and throws a syntax error.\r\n\r\nshell\r\n[2018-04-09T05:42:07.122Z] debug Server wasn't able to start properly.\r\nSyntaxError: Missing } in template expression\r\n    at Object.keys.reduce (/private/tmp/test/node_modules/strapi/lib/core/configurations.js:379:38)\r\n    at Array.reduce (<anonymous>)\r\n    at templateConfigurations (/private/tmp/test/node_modules/strapi/lib/core/configurations.js:375:27)\r\n    at Object.keys.reduce (/private/tmp/test/node_modules/strapi/lib/core/configurations.js:377:18)\r\n    at Array.reduce (<anonymous>)\r\n    at templateConfigurations (/private/tmp/test/node_modules/strapi/lib/core/configurations.js:375:27)\r\n    at Object.keys.reduce (/private/tmp/test/node_modules/strapi/lib/core/configurations.js:377:18)\r\n    at Array.reduce (<anonymous>)\r\n    at templateConfigurations (/private/tmp/test/node_modules/strapi/lib/core/configurations.js:375:27)\r\n    at Strapi.module.exports.app (/private/tmp/test/node_modules/strapi/lib/core/configurations.js:94:19)\r\n    at Strapi.load (/private/tmp/test/node_modules/strapi/lib/Strapi.js:197:29)\r\n    at <anonymous>\r\n\r\n\r\n**Steps to reproduce the problem**\r\n\r\n1. > strapi new test (accept defaults)\r\n1. add the conflicting code to scripts in package.json:\r\n\"test\": \"FOO=${BAZ:-foo} sh -c 'echo $FOO'\"\r\n1. NPM runs the script normally\r\n> export BAZ=bar\r\n> npm test\r\nbar\r\n1. Start Strapi\r\n> npm start\r\nSyntaxError: Missing } in template expression\r\n\r\n**What is the expected behavior?**\r\n\r\nServer starts normally.\r\n\r\n**Suggested solutions**\r\n\r\nTemplate literals in configuration are ignored if they contain () characters indicating a function call.\r\n\r\nhttps://github.com/strapi/strapi/blob/648bf52a3c69b50df14fe69e1625029ab31f093e/packages/strapi/lib/core/configurations.js#L371-L374\r\n\r\nThey could also be ignored if they contain shell parameter expansion characters: : = -  etc. [(Bash docs)](http://wiki.bash-hackers.org/syntax/pe#overview).\r\n\r\nI don't think these shell characters would appear when using dynamic configuration as intended.\r\n\r\n**Workaround**\r\n\r\nInsert an inline comment containg a bracket  #(  so that Strapi ignores the expression.\r\n\r\ne.g.\r\njs\r\n\"scripts\": {\r\n    \"test\": \"FOO=${BAZ:-foo#(} sh -c 'echo $FOO'\"\r\n}\r\n\r\n\r\n---\r\n\r\n- [x] I'm sure that this issue hasn't already been referenced\r\n"}, {"classified_as": "enhancement", "text": "**Describe the bug**\r\nWhen opening the admin the landing page always shows the same welcome message prompting you to create your first content-type, even if you already have content-types created\r\n\r\n**Steps to reproduce the behavior**\r\nopen the admin page\r\n\r\n**Expected behavior**\r\ndifferent messaging should be displayed here\r\nthe button to prompt creating content-types shouldn't be allowed on production either since the module is disabled\r\n\r\n**Code snippets**\r\nhttps://github.com/strapi/strapi/blob/b39709a6edee136047260aefca34069e4cf8b0f8/packages/strapi-admin/admin/src/containers/HomePage/index.js#L64-L67\r\nhasAlreadyCreatedContentTypes uses leftMenuLinks property to decide what message to show. \r\n\r\nin pull request merge #6965 from strapi/features/rbac\r\nleftMenuLinks was removed from the content-manager plugin\r\nhttps://github.com/strapi/strapi/blob/b39709a6edee136047260aefca34069e4cf8b0f8/packages/strapi-plugin-content-manager/admin/src/index.js#L20-L45\r\n\r\nSorry I can't quite track down the fix, I'm not familiar with the roadmap enough  "}, {"classified_as": "bug", "text": "<!--\r\nSTEP 1: Are you in the right place?\r\n\r\n- For general technical questions or \"how to\" guidance, please search StackOverflow for questions tagged \"puppeteer\" or create a new post.\r\n\r\nhttps://stackoverflow.com/questions/tagged/puppeteer\r\n\r\n- For issues or feature requests related to the DevTools Protocol (https://chromedevtools.github.io/devtools-protocol/), file an issue there:\r\n\r\nhttps://github.com/ChromeDevTools/devtools-protocol/issues/new.\r\n\r\n- Problem in Headless Chrome? File an issue against Chromium's issue tracker:\r\n\r\nhttps://bugs.chromium.org/p/chromium/issues/entry?components=Internals%3EHeadless&blocking=705916\r\n\r\nFor issues, feature requests, or setup troubles with Puppeteer, file an issue right here!\r\n-->\r\n\r\n### Steps to reproduce\r\n\r\n**Tell us about your environment:**\r\n\r\n* Puppeteer version: 1.19\r\n* Platform / OS version: macOS\r\n* URLs (if applicable):\r\n* Node.js version: 10.16\r\n\r\n**What steps will reproduce the problem?**\r\n\r\nI want to emulate @media (hover: ...) to test my CSS at different devices.\r\nExample:\r\n\r\na {\r\n  color: green;\r\n}\r\n\r\n@media (hover: hover) {\r\n  a:hover {\r\n    background: red;\r\n  }\r\n}\r\n\r\n\r\n@media (hover: hover) works well when I run this code in puppeteer+macOS. But I want to emulate @media (hover: none) for mobile device to test it.\r\n\r\n**What is the expected result?**\r\n\r\nAPI to configure input mechanism."}, {"classified_as": "enhancement", "text": "When saving a new PFUser on iOS, the SDK(?) throws this error:\n\nCaught \"NSInternalInconsistencyException\" with reason \"User cannot be saved unless they are already signed up. Call signUp first.\"\nWhen saving a new PFUser via Cloud Code, it does not throw that error but simply mimics a \"signUp\", which creates a session token for the server... in Cloud Code! (actually, read #3 as this may be a bug with the pfuser handling)\n\nFor sake of flexibility and consistency (with PFObjects), I think there should be an option to \"save\" a PFUser without having a session token created, or restricting (iOS) apps to always use PFUser.signUp. There are many use-cases for such a feature, and I feel that it is a meaningless restriction.\n\nPersonal use-case: I have some special logic to replace the standard \"signUp\" flow, which has me creating a PFUser via Cloud Code + MasterKey. But with how the \"save\" function is behaving, it's creating a session token for the server!\n\nRef #1490 \n"}, {"classified_as": "enhancement", "text": "When doing first startup on a blank install we have some extra work to do to bring up the GUI - generate a certificate and stuff. What happens for me is that the browser starts and tries to load localhost:8384, but the server hasn't started yet so the browser gets a connection refused.\n\nReload then works, of course. And on next startup we are fast enough for this not to happen. Probably depends on the browser being able to load quite rapidly when asked to.\n\nWe should delay starting the browser until we know the listener is up and running, by using a channel or some other magic (an event perhaps).\n"}, {"classified_as": "enhancement", "text": "can you use Response content type to define Response body format ?\nthat can be helpfull ...\n\nsolutions:\n- Response Content Type must accept text and value (<option value=\"json\">application/json</option>)\n- move select choice into form\n- use jquery to get selected option value and name\n"}, {"classified_as": "enhancement", "text": "Wherever we build glob patterns based on existing file names we need to take care of the fact that they can contain things like [-] which gets interpreted as a broken character range.\n\nProbably we need a well tested utility function to build these patterns, or use something other than globbing.\n"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 9.x.x -->\r\n<!-- npm 5.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**: 8.9.4\r\n- **npm version**: 6.4.1\r\n- **Strapi version**: 3.0.0-alpha.14.1.1\r\n- **Database**: Postgres\r\n- **Operating system**: MacOS\r\n\r\n**What is the current behavior?** When trying to use strapi for uploading files to AWS S3, the upload plugin puts credentials into the database by using strapi.store({}).set({...}) instead of storing them in a config file / reading from environment variables.\r\n\r\nSee here: https://github.com/strapi/strapi/blob/master/packages/strapi-plugin-upload/controllers/Upload.js#L97\r\n\r\n**Steps to reproduce the problem**\r\nCreate new strapi project, setup file upload plugin with s3 provider: https://strapi.io/documentation/guides/upload.html#install-providers , then use the GUI to set AWS credentials. They won't be stored in a file, but will be in your database.\r\n\r\n**What is the expected behavior?**\r\nThis seems like a security risk / non-standard behavior for storing credentials.\r\n\r\n**Suggested solutions**\r\nUpload-plugin should set/get credentials from a json / config file that can read from environment variables like other configs. \r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n"}, {"classified_as": "enhancement", "text": "**Informations**\r\n- **Node.js version**: 10.8.0\r\n- **NPM version**:  6.2.0\r\n- **Strapi version**: alpha v22\r\n- **Database**:  psql\r\n- **Operating system**:  WSL/Ubuntu\r\n\r\n\r\n**What is the current behavior?**\r\n\r\nPostgres is case sensitive.\r\nIn order to support the _contains (case insensitive) filter on APIs, we would need to make a postgres-specific change in the bookshelf hook plugin. Maybe there is also an alternative that works for both pg and mysql\r\n\r\n**Steps to reproduce the problem**\r\n\r\n* create a content type \"pet\"\r\n* add a name field\r\n* create a new object with name Cat\r\n* query for pets/?name_contains=cat\r\n* get no results\r\n\r\n**What is the expected behavior?**\r\n\r\nactually, you should get results.\r\n\r\n**Suggested solutions**\r\n\r\nThere are some solutions, but they are not really nice:\r\nhttps://stackoverflow.com/questions/7005302/postgresql-how-to-make-case-insensitive-query\r\n\r\n* Postgres comes with an ILIKE case insensitive operator but is really slow.\r\n* turn to lowercase, but make indexes meaningless: WHERE LOWER(name)=LOWER('Administrator')\r\n\r\nSome other article that points that out: http://mwiki.gichd.org/IM/Difference_MySQL_PostGreSQL"}, {"classified_as": "enhancement", "text": "I just noticed that the current active file is not first in the out of sync list.\r\n\r\nThere are 60 files with 1 file ~500 MB and the rest just small files with a few KB\r\nThe modal correctly shows 6 pages with 10 items each.\r\nAt the moment the big file is downloading but it is on page 3.\r\n\r\nI think this is because the small files are already waiting (no up arrow to move to top of queue). \r\nIt would be nice if the sorting places the active file first.\r\nThanks!"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!-- =============================================================================== -->\r\n<!--  If you are not using the current Strapi release, you will be asked to update. -->\r\n<!-- Please see the wiki for guides on upgrading to the latest release. -->\r\n<!-- =============================================================================== -->\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 10.x.x -->\r\n<!-- npm 6.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**: v10.0.0\r\n- **NPM version**: v6.0.0\r\n- **Strapi version**: v3.0.0-alpha.24.1\r\n- **Database**: MongoDB\r\n- **Operating system**: macOS\r\n\r\n\r\n**What is the current behavior?**\r\n\r\nHere entry is assigned a value but never used:\r\nhttps://github.com/strapi/strapi/blob/f69154218434c1428a756dee61574e2fb766697d/packages/strapi-generate-api/templates/mongoose/service.template#L101\r\n\r\nI found it thanks to ESLint."}, {"classified_as": "bug", "text": "We have u16 bit mask but CodecSet always assume it is one byte.\r\n\r\nhttps://github.com/polkadot-js/api/blob/cefeb37ae6b08250e0ac9403d213650fece62015/packages/types/src/codec/Set.ts#L214\r\n"}, {"classified_as": "enhancement", "text": "Hey. We're transitioning onto parse-server. We had old code POSTing images to the REST API, immediately followed by POSTing data to another collection, with a pointer to that earlier image file.\n\nWhen we were fully on Parse, before using parse-server, we supplied data like this:\n\n js\n'imageObject': {\n  'name': data.name,\n  '__type': \"File\"\n}\n\n\nwhere only a name and a __type were necessary to define that relationship.\n\nOnce we moved to parse-server, this code was breaking. It boiled down to [this line](https://github.com/ParsePlatform/parse-server/blob/master/src/Schema.js#L731) which also looks for a url. We needed to change out the data we're POSTing to something like this:\n\n js\n'imageObject': {\n  'name': data.name,\n  'url': data.url,\n  '__type': \"File\"\n}\n\n\nMaybe this information could be provided in migration docs, since we didn't see it there.\n\nIt might also be worth mentioning that we're now using the S3Adapter to store our newly-created files in a bucket.\n\nThanks for everything! Overall, this migration is going far smoother than we could've expected.\n\ncc @kyleseaman\n"}, {"classified_as": "enhancement", "text": "There's an issue with the event system which can cause what is effectively a deadlock during normal operations. It's not a logical deadlock, it's just that sending events can end up taking forever, which blocks other things. We often send events while holding other locks, which makes it worse.\r\n\r\nSpecifically, when an event listener no longer polls for events the Log() call will block for 150 ms per non-polling listener. If there are several dead listeners this can add up, and it blocks other Log() calls during this time as well due to needing to hold the lock. \r\n\r\nThere are a couple of places where we can end up with dead event listeners. The [watch aggregator can exit but never unsubscribes](https://github.com/syncthing/syncthing/blob/c9349183478321cc434b92cd8d7dc9bfefed82db/lib/watchaggregator/aggregator.go#L135-L162). But more seriously, anything that 1) ceases to process events 2) unsubscribes, perhaps as part of a defer, causes this issue. For example, [sendIndexes](https://github.com/syncthing/syncthing/blob/c9349183478321cc434b92cd8d7dc9bfefed82db/lib/model/model.go#L1823-L1861).\r\n\r\nThe reason for the latter is that once we stop reading events, the Unsubscribe() can take effectively forever. There might be a thousand event senders producing events quite frequently (for example, lots of folders which are scanning on a short interval). These all compete for the mutex which must be held to unsubscribe. As each of these calls can take over a second and there are thousands and thousands of them waiting for the lock, the odds that our Unsubscribe() call actually gets to acquire the lock in reasonable time are slim.\r\n\r\nI have a test that reproduces this sad situation.\r\n\r\nI see several potential solutions; first of all we must ensure that every subscribe is matched by an unsubscribe. Then;\r\n\r\n1. We can use a [priority lock](https://github.com/platinummonkey/priority-lock) to prioritize Subscribe()/Unsubscribe() over Log(). This works nicely in my testing, because the unsubscribe gets to happen ahead of the queue and then everything else is quick again.\r\n\r\n2. We can use BufferedSubscriptions() everywhere, as these continue reading the actual event stream in the background until the unsubscribe has actually gotten through.\r\n\r\n3. We can make the event system more lossy, putting the burden to keep up with the events more on the receiving side. A normal Subscription already has a buffered channel; we could simply skip the timeout handling in Log() and use a non-blocking send.\r\n\r\nI think we should do number 1 at minimum, and possibly number 3. In the cases where we expect many events and have to catch 'em all, that's what the buffered subscription is for.\r\n\r\nAs a motivator, here's a massive backtrace showing the problem (on 0.14.48).\r\n\r\n[backtrace.txt](https://github.com/syncthing/syncthing/files/2673301/backtrace.txt)\r\n"}, {"classified_as": "enhancement", "text": "We're not using the API key properly or something;\r\n\r\n<img width=\"1814\" alt=\"screen shot 2018-10-30 at 05 30 34\" src=\"https://user-images.githubusercontent.com/125426/47696000-0284b980-dc05-11e8-8472-3f8c4b7661dd.png\">\r\n"}, {"classified_as": "bug", "text": "**Describe the bug** \r\n\r\nThe strapi-plugin-cloudinary saves complete URLs to the database for images, only the  'Public_ID' portion of the URL should be saved. This allows for Cloudinary to apply transformations and execute other manipulations to the image.\r\n\r\n**Steps to reproduce the behavior**\r\n\r\nInstall and configure the strapi-plugin-cloudinary\r\nCreate a new Content-Type with a Media field for images.\r\nSave an image to the Content Type\r\nCheck DB and see complete URL.\r\n\r\n**Expected behavior** \r\n \r\n\r\nRather than the photo.url being a hardcoded value, the databases stores the public_id. \r\n\r\nThe \"issue\" with this approach is that photo.url is now a hardcoded value, which means that there's no easy way of applying transformations/optimizations to the image itself.\r\n\r\nCloudinary allows you to, for example, generate a 250x250 image, by appending the URL (adding w_250,h_250). At the moment, the only thing that I could do is to read this data from the database, split('/') the Cloudinary URL add the transformations options to it, and then do a join('/').\r\n\r\nI'd love to see a feature where the database stores the public_id of a Cloudinary image which is yvyt9omqoqe6aj3wkeix.jpgin the code snippet below and then use the Cloudinary SDK to generate transformation URLs, such as: cloudinary.url(public_id, { width: 250, height: 250, effect: 'cartoonify' });\r\n\r\n**Code snippets** \r\n\r\nThe below returned object shows the photo.url being a complete URL.\r\n\r\n\r\n{\r\n  \"city\": \"London\",\r\n  \"country\": \"United Kingdom\",\r\n  \"description\": \"Noisy, vibrant and truly multicultural, London is a megalopolis of people, ideas and frenetic energy. The capital and largest city of both England and of the United Kingdom, it is also the largest city in Western Europe and the European Union. Most residents of Greater London are very proud of their capital, the multiculturalism of the city, and their membership of the European Union, despite 52% of the UK population as a whole who voted in a recent referendum choosing to leave the EU. It is unclear what the outcome of the referendum will be on London.\\n\\nSituated on the River Thames in South-East England, Greater London has an official population of a little over 8 million. However, London's urban area stretched to 9,787,426 in 2011, while the figure of 14 million for the city's wider metropolitan area more accurately reflects its size and importance. Considered one of the world's leading \\\"global cities\\\", London remains an international capital of culture, music, education, fashion, politics, finance and trade.\",\r\n  \"_id\": \"5c877ba28dde70b9973e6223\",\r\n  \"createdAt\": \"2019-03-12T09:28:02.260Z\",\r\n  \"updatedAt\": \"2019-03-12T14:56:17.796Z\",\r\n  \"__v\": 0,\r\n  \"id\": \"5c877ba28dde70b9973e6223\",\r\n  \"photo\": {\r\n    \"_id\": \"5c87c89d503362c3a9834f11\",\r\n    \"name\": \"jaanus-jagomagi-393163-unsplash.jpg\",\r\n    \"sha256\": \"fHZuIgFCYxjMR_ygpWcjGQqApL1muzJZWliilFMTiUA\",\r\n    \"hash\": \"e15343b49dca41719b73fefff34ada7c\",\r\n    \"ext\": \".jpg\",\r\n    \"mime\": \"image/jpeg\",\r\n    \"size\": \"3992.02\",\r\n    \"public_id\": \"yvyt9omqoqe6aj3wkeix\",\r\n    \"url\": \"https://res.cloudinary.com/tamas-demo/image/upload/v1552402598/yvyt9omqoqe6aj3wkeix.jpg\",\r\n    \"provider\": \"cloudinary\",\r\n    \"related\": [\r\n    \"5c877ba28dde70b9973e6223\"\r\n    ],\r\n    \"createdAt\": \"2019-03-12T14:56:29.543Z\",\r\n    \"updatedAt\": \"2019-03-12T14:56:29.573Z\",\r\n    \"__v\": 0,\r\n    \"id\": \"5c87c89d503362c3a9834f11\"\r\n  }\r\n}\r\n\r\n\r\n\r\n**System**\r\n\r\nNode.js version:10.x. (same behaviour on v12.x)\r\nnpm version: Latest\r\nStrapi version: 3.0.0-beta.7\r\nDatabase: MongoDB (v3)\r\nOperating system: Mac\r\n"}, {"classified_as": "bug", "text": "<!--\r\nHello \ud83d\udc4b Thank you for submitting an issue.\r\n\r\nBefore you start, please make sure your issue is understandable and reproducible.\r\nTo make your issue readable make sure you use valid Markdown syntax.\r\n\r\nhttps://guides.github.com/features/mastering-markdown/\r\n\r\nPlease ensure you have also read and understand the contributing guide.\r\n\r\nhttps://github.com/strapi/strapi/blob/master/CONTRIBUTING.md#reporting-an-issue\r\n-->\r\n\r\n**Describe the bug**\r\nOn the documentation website, links to improve this page  link to the master branch instead of documentation branch.  \r\n\r\nFrom the PR template it states that documentation updates should be submitted to the documentation branch.  \r\n\r\n**Steps to reproduce the behavior**\r\n\r\nThis is a single example but the linking to master seems consistent across all improve this page links.\r\n\r\n1. Go to 'https://strapi.io/documentation/v3.x/content-api/parameters.html#start'\r\n2. Click on improve this page at the bottom of page.\r\n3. User is sent to https://github.com/strapi/strapi/edit/master/docs/v3.x/content-api/parameters.md instead of https://github.com/strapi/strapi/edit/documentation/docs/v3.x/content-api/parameters.md\r\n4. To correctly make a PR  the User must then:\r\n- read the template and notice that doc updates should be made to documentation branch, not master.\r\n- change their current address to https://github.com/strapi/strapi/edit/documentation/docs/v3.x/content-api/parameters.md\r\n\r\n**Expected behavior**\r\nExpected to be sent to the documentation branch of file to perform edits.\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/10238802/87324440-1453e080-c4fe-11ea-8e44-5a1eea8e831b.png)\r\n\r\n"}, {"classified_as": "bug", "text": "Specifically https://github.com/polkadot-js/api/blob/master/packages/api/src/base/Decorate.ts#L505"}, {"classified_as": "enhancement", "text": "* **Version**: v12.12.0\r\n* **Platform**: Darwin [redacted] 18.7.0 Darwin Kernel Version 18.7.0: Sat Oct 12 00:02:19 PDT 2019; root:xnu-4903.278.12~1/RELEASE_X86_64 x86_64\r\n* **Subsystem**: util\r\n\r\nI was very surprised to discover that in node v12, util.format('%s', v) does not consistently call String(v).  Checking [the docs](https://nodejs.org/api/util.html#util_util_format_format_args), I read:\r\n\r\n> %s: String will be used to convert all values except BigInt, Object and -0. BigInt values will be represented with an n and Objects that have no user defined toString function are inspected using util.inspect() with options { depth: 0, colors: false, compact: 3 }.\r\n\r\nThis is a surprising (and in my view undesirable) change from the previous behaviour, which was to consistently call String in response to %s.  It also appears to be a semantically breaking change introduced, via #27621 and #27799, in 12.3.0, despite that not being a new major version.  If so, it should be entirely reverted (and good riddance, in my opinion).\r\n\r\nIf there is some compelling argument for why the new behaviour is actually desirable, then at least the code should be made consistent with the documentation or vice versa.\r\n\r\nIn particular, whether a user defined toString function is called depends in non-documented and non-obvious ways on the value of the .constructor property of the object, which is otherwise normally of no significance:\r\n\r\nJS\r\n// ES6 subclassing:\r\nclass A {\r\n  toString() { return 'custom A'; }\r\n}\r\nclass B extends A {}\r\n\r\n// ES5 subclassing:\r\nfunction C() {}\r\nC.prototype.toString = function() { return 'custom C'; };\r\n\r\nfunction D() { C.call(this); }\r\nD.prototype = Object.create(C.prototype);\r\n// What if we forget to set the .constructor?\r\n// D.prototype.constructor = D;\r\n\r\nconsole.log('%s', new A());\r\nconsole.log('%s', new B());\r\nconsole.log('%s', new C());\r\nconsole.log('%s', new D());\r\n\r\n// Fix forgotten .constructor:\r\nD.prototype.constructor = D;\r\nconsole.log('%s', new D());\r\n\r\n\r\nActual output:\r\n\r\n\r\ncustom A\r\nB {}\r\ncustom C\r\ncustom C\r\nD {}\r\n\r\n\r\nExpected / documented output:\r\n\r\n\r\ncustom A\r\ncustom A\r\ncustom C\r\ncustom C\r\ncustom C\r\n\r\n\r\nConsistently applying the documented behaviour would go some way to remedying the breaking nature of this change, since at least user supplied .toString implementations would always be called, as was previously the case.\r\n"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!-- =============================================================================== -->\r\n<!--  If you are not using the current Strapi release, you will be asked to update. -->\r\n<!-- Please see the wiki for guides on upgrading to the latest release. -->\r\n<!-- =============================================================================== -->\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 10.x.x -->\r\n<!-- npm 6.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**: 10.15.3\r\n- **NPM version**: 6.4.1\r\n- **Strapi version**: 3.0.0-alpha.25.2\r\n- **Database**: Postgres\r\n- **Operating system**:  OSX\r\n- **(Optional) Link to your Project**: N/A\r\n\r\n**What is the current behavior?**\r\nWhen deploying to heroku, my database config is set as: \r\n\r\n\r\n{\r\n  \"defaultConnection\": \"default\",\r\n  \"connections\": {\r\n    \"default\": {\r\n      \"connector\": \"strapi-hook-bookshelf\",\r\n      \"settings\": {\r\n        \"client\": \"pg\",\r\n        \"connection\": \"${process.env.DATABASE_URL}\",\r\n        \"ssl\": \"${process.env.DATABASE_SSL || false}\"\r\n      },\r\n      \"options\": {}\r\n    }\r\n  }\r\n}\r\n\r\n\r\nWhen strapi starts up, it errors out with ECONNREFUSED 127.0.0.1:5432. \r\n\r\n\r\n**Steps to reproduce the problem**\r\nSet up a database connection using the URI only.\r\n\r\n\r\n**What is the expected behavior?**\r\nThe expectation is that a database connection can be established using URL only. \r\n\r\nHeroku Postgres, for example, rotates database credentials and updates the DATABASE_URL automatically, therefore, strapi won't pick up the new credentials unless the connection is pulled from the DATABASE_URL environment variable.\r\n\r\n\r\n**Suggested solutions**\r\nIn the knex and bookshelf hooks I believe there are some defaults for setting host to localhost. I'm not sure why that is needed."}, {"classified_as": "enhancement", "text": "I'm using puppeteer.connect to connect to a bunch of Chrome instances across the network. Everything works perfectly, as long as I can keep the instances busy all the time. However, if I have a long initialization phase (think tens of minutes) between connecting to the Chrome instances and issuing commands to them, the connection breaks down.\r\n\r\nAFAIK, the WebSockets spec includes a ping mechanism and requires both sides to respond, so most WebSockets stacks have a built-in code for responding. If Chrome has this (let me know if you'd like me to check), it'd be nice if puppeteer's connection would issue keepalive pings at a configurable interval. The configurable aspect can also allow folks to keep pings disabled.\r\n\r\nIs this something you'd consider implementing or accepting contributions for?\r\n"}, {"classified_as": "bug", "text": "<!--\r\nHello \ud83d\udc4b Thank you for submitting an issue.\r\n\r\nBefore you start, please make sure your issue is understandable and reproducible.\r\nTo make your issue readable make sure you use valid Markdown syntax.\r\n\r\nhttps://guides.github.com/features/mastering-markdown/\r\n\r\nPlease ensure you have also read and understand the contributing guide.\r\n\r\nhttps://github.com/strapi/strapi/blob/master/CONTRIBUTING.md#reporting-an-issue\r\n-->\r\n\r\n**Describe the bug**\r\nNothing major, this is probably a typo or an outdated code comment:\r\n\r\njavascript\r\n    // Throw an error if the password selected by the user\r\n    // contains more than two times the symbol '$'.\r\n    if (strapi.plugins['users-permissions'].services.user.isHashed(params.password)) {\r\n      return ctx.badRequest(\r\n        null,\r\n        formatError({\r\n          id: 'Auth.form.error.password.format',\r\n          message: 'Your password cannot contain more than three times the symbol $.',\r\n        })\r\n      );\r\n    }\r\n\r\n\r\nLink to snippet: https://github.com/strapi/strapi/blob/331b73801f7e8fc3e4747b39aa1295f1964448ef/packages/strapi-plugin-users-permissions/controllers/Auth.js#L415\r\n\r\nAs you can see, the comment says **two times**, while the error message AND the isHashed function say **three** is the correct amount.\r\n\r\nThis seems to still be in master code as of this post."}, {"classified_as": "enhancement", "text": "If two folders both have the ID \"default\" in the config, we rename them to \"default~1\" and \"default~2\". But tilde isn't allowed in folder IDs, and the user can't change folder IDs in the GUI, so it's kinda impossible to recover gracefully from.\n\nGranted, they shouldn't be able to get in this state without editing the config manually to start with, but still...\n"}, {"classified_as": "enhancement", "text": "when using btreemap in decl_storage:\r\n\r\n\r\ndecl_storage! {\r\n    trait Store for Module<T: Trait> as Storage {\r\n    ...\r\n    Book get(get_book): map T::AssetId => BTreeMap<T::Balance, Vec<T::Hash>>;\r\n    ...\r\n    }\r\n}\r\n\r\n\r\n\r\npolkadot-js has an error like ### **\"API/DECORATOR: Error: FATAL: Unable to initialize the API: Unhandled: Unable to create and validate type from BTreeMap<Balance,Vec<Hash>>\"**\r\nIt seems that we need to add an case for btreemap in @polkadot/metadata/Metadata/util/validateTypes.js"}, {"classified_as": "enhancement", "text": "Example:\n\n JavaScript\ndialogs.action({\n            title: \"Title\",\n            message: \"Action\",\n            cancelButtonText: \"Close\",\n            actions: [\"One\", \"Two\", \"Three\"]\n}).then(function (r) { return console.log(\"Action\\u00A0result:\\u00A0\" + r); });\n\n"}, {"classified_as": "enhancement", "text": "Look into this plugin, per #147 \n"}, {"classified_as": "bug", "text": "console\r\n$ pwn checksec ./node/node-v12.16.3-linux-x64/bin/node\r\n[*] '/home/pdxjohnny/Downloads/node/node-v12.16.3-linux-x64/bin/node'\r\n    Arch:     amd64-64-little\r\n    RELRO:    Full RELRO\r\n    Stack:    Canary found\r\n    NX:       NX enabled\r\n    PIE:      No PIE (0x400000)  # <---- ASLR disabled\r\n\r\n\r\nI see there was some discussion on this back in 2016, but I couldn't really follow, it also looks like -pie still exists in some of the build files. Just wanted to report in case it's off by mistake."}, {"classified_as": "enhancement", "text": "When I add Image(s) to any Layout (tested on Stack and Grid), the images is added with margins on the left and right side (around 5 px on each side). Isn't it supposed to fill the width of the container and keep aspect? I tried also with stretch=\"AspectFill\" same result. \n\nBut as soon as I set a specific height to the image, the margins are gone. \n"}, {"classified_as": "bug", "text": "Using api beta30 - getting derived session info returns wrong value on current kusama node.\r\nChain height currently at BN:826889 while value for last session(epoch?) change is showing value of 262453039\r\n\r\nIt looks like other data is also wrong - if we look at polkascan and look into events on kusamacc2 - session and era starts do not correspond to data shown in session info.\r\n\r\nAccording to session info, there should have been session starts at blocks  824870, 822470, 820070 which is calculated from \r\nawait api.rpc.chain.getHeader()).number.toNumber() - sessionProgress\r\n which doesn't look like it's right because \r\nawait api.query.system.events.at(await api.rpc.chain.getBlockHash(824870)) \r\ndoesn't return events that should be emitted on new nession start. Whereas\r\nawait api.query.system.events.at(await api.rpc.chain.getBlockHash(824956)) \r\ndoes return these events\r\n\r\nit looks like eraProgress returns same value as sessionProgress which is also wrong.\r\n\r\nhttps://polkascan.io/pre/kusama-cc2/event \r\n![Screen Shot 2019-11-26 at 01 57 40](https://user-images.githubusercontent.com/3409250/69590640-663c0a80-0ff0-11ea-940c-966209cb5aa7.png)\r\n\r\nhttps://github.com/polkadot-js/api/blob/4cea617b13efa9db9addb17f6c4e31e1df025246/packages/api-derive/src/session/info.ts#L63\r\n"}, {"classified_as": "bug", "text": "Throw an exception when query failed due to a unique key duplication"}, {"classified_as": "enhancement", "text": "I'm trying to connect to my unsynced node with api 1.0.0-beta.17 \r\n\r\ntarget=#750431 (25 peers), best: #520014\r\n\r\nI'm getting \r\n![Screen Shot 2020-01-23 at 16 42 13](https://user-images.githubusercontent.com/3409250/72999295-74938080-3dff-11ea-9667-bd96dcc9c5bd.png)\r\n\r\nwhich is uncatchable with both of these\r\n\r\njavascript \r\ntry {\r\n  let api = await ApiPromise.create().catch(e => {})\r\n} catch (e) {}\r\n\r\n\r\nIt also doesn't emit error on \r\njavascript\r\nprovider.on('error',(e)=>{})\r\n\r\n\r\nIt results in stuck application since I can't react on anything that happened here. It also happens when you get error while connecting to wsprovider but it can be handled by wrapping api creation inside another promise, which I can reject. It is not ideal, but it works.\r\n\r\nWhen trying to connect to wss://cc3-5.kusama.network/ I get this on the other hand\r\n\r\n![Screen Shot 2020-01-23 at 16 41 42](https://user-images.githubusercontent.com/3409250/72999309-79583480-3dff-11ea-839f-8dc55b605d44.png)\r\n"}, {"classified_as": "bug", "text": "getting blank screenshots with pages which have meta refresh\r\n\r\nwhat is the best way to handle meta refresh\r\n\r\n\r\nlet page = await browser.newPage();\r\n        await  page.setUserAgent('Mozilla/5.0 (Windows NT x.y; rv:10.0) Gecko/20100101 Firefox/10.0');\r\n        page.setViewport({width: options.width, height: options.height});\r\n        await page.goto(srcUrl, {timeout: self.timeout, waitUntil: 'networkidle',\r\n          networkIdleTimeout: 2000});\r\n\r\nawait page.screenshot({\r\n          path: '/tmp/test.png',\r\n          clip: {x: 0, y: 0, width: options.width, height: options.height}\r\n        });\r\n\r\n\r\n\r\nsample page hxxp://www.snehpubliclibrary.org/my.adp/adp\r\n\r\nwarning: redirects to phishing site\r\n\r\nsample code\r\n\r\n<html xmlns='http://www.w3.org/1999/xhtml'>^M\r\n<head>\r\n<title></title>\r\n<meta http-equiv='refresh' content='0;URL= login.php'>\r\n</head>\r\n</html>\r\n\r\n"}, {"classified_as": "bug", "text": "<!--\r\nHello \ud83d\udc4b Thank you for submitting an issue.\r\n\r\nBefore you start, please make sure your issue is understandable and reproducible.\r\nTo make your issue readable make sure you use valid Markdown syntax.\r\n\r\nhttps://guides.github.com/features/mastering-markdown/\r\n-->\r\n\r\n**Describe the bug**\r\nWhen selecting multiple entries in content manager (but not all entries) the multiple delete option says \"Delete All\"\r\n\r\n**Expected behavior**\r\nOption, provided all are not selected, should say \"Delete Selected\"\r\n\r\n**System**\r\n- Strapi version: v3.0.0-alpha.26.2\r\n\r\n"}, {"classified_as": "enhancement", "text": "Hi,\n\nI took update of Swagger-UI today and found that I do not have Parameters section to give input values for GET resources.\n\nDo I need to change something to get this section back?\n\nThanks,\nKunjan\n"}, {"classified_as": "bug", "text": "**Describe the bug**\r\nDatabases using Azure Database for MySQL on version 5.7.27-log allows using . (dot) in database names. Setup of Strapi using MySQL does not allowed this. This causes one to create a temporary database that does not have a dot in the name, set permissions, do the setup, change database name and then update database.json. \r\n\r\nEdit: Also true for Postgres.\r\n\r\n**Steps to reproduce the behavior**\r\n1. yarn create strapi-app\r\n2. Select MySQL\r\n3. Enter foo.bar as database name.\r\n\r\n**Expected behavior**\r\nAllow use of . (dot) in username for MySQL connections during setup of Strapi.\r\n\r\n**System**\r\n- Node.js version: v13.5.0\r\n- NPM version: 6.13.4\r\n- Strapi version: 3.0.0-beta.18.7\r\n- Database: MySQL 5.7.27-log\r\n- Operating system: Ubuntu under WSL\r\n\r\n"}, {"classified_as": "bug", "text": "When the schema is generated, the primaryKey used is _id.\r\nBut following the OpenCRUD and other GraphQL convention, the flag \"_\" should not be used for variable like title or content\r\n\r\nI already try to change it inside the plugin and it seems to work with MongoDB because there are the two fields _id and id inside an document (but I don't try with MySQL).\r\nBut even after change the content of a document, the change looks good.\r\n\r\nWhat do you think about it @Aurelsicoko ?\r\n\r\nThis is my snippet to test it (I already remove the value _id inside initialState):\r\njs\r\n      if (_.get(model, 'options.timestamps') === true) {\r\n        Object.assign(initialState, {\r\n          id: 'String',\r\n          createdAt: 'String',\r\n          updatedAt: 'String'\r\n        });\r\n\r\n        Object.assign(acc.resolver[globalId], {\r\n          createdAt: (obj, options, context) => { // eslint-disable-line no-unused-vars\r\n            return obj.createdAt || obj.created_at;\r\n          },\r\n          updatedAt: (obj, options, context) => { // eslint-disable-line no-unused-vars\r\n            return obj.updatedAt || obj.updated_at;\r\n          },\r\n          id: (obj, options, context) => { // eslint-disable-line no-unused-vars\r\n            return obj._id || obj.id;\r\n          }\r\n        });\r\n      }\r\n"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!-- =============================================================================== -->\r\n<!--  If you are not using the current Strapi release, you will be asked to update. -->\r\n<!-- Please see the wiki for guides on upgrading to the latest release. -->\r\n<!-- =============================================================================== -->\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 10.x.x -->\r\n<!-- npm 6.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**: latest\r\n- **npm version**: latest\r\n- **Strapi version**: latest\r\n- **Database**: mongo\r\n- **Operating system**:  linux\r\n\r\n\r\n**What is the current behavior?**\r\nOn a Blog API, i've added beforeSave hook, which throws some error; when using content-manager for saving, the UI gets stuck waiting, and showing any error on the UI\r\n\r\n\r\n**Steps to reproduce the problem**\r\nThe given steps.\r\n\r\n\r\n**What is the expected behavior?**\r\nAt least see an error saying \"could be saved\"\r\n\r\n\r\n**Suggested solutions**\r\nMaking a PR soon for fixing."}, {"classified_as": "bug", "text": "### Vue.js version\r\n2.x.x\r\n\r\n### Reproduction Link\r\nBecause it is a ssr issue and hard to provide a running demo online, please see **Steps to reproduce**\r\n\r\n### Steps to reproduce\r\n- clone the https://github.com/vuejs/vue-hackernews-2.0.git repostory\r\n- edit file src/\\components/ItemList.vue to cause an error. For example:\r\n\r\n\r\n// ...\r\nimport Spinner from './Spinner.vue'\r\nimport Item from './Item.vue'\r\nimport { watchList } from '../store/api'\r\n// abc is a undeclared variable that can cause a ReferenceError\r\nconsole.log(abc)\r\n// ...\r\n\r\n\r\n- then run npm run build, npm run start in command line\r\n- open browser and navigate to http://localhost:8080\r\n- the command line will report some error info as below:\r\n\r\n\r\nerror during render : /\r\nReferenceError: abc is not defined\r\n    at Object.module.exports.exports.default.props (__vue_ssr_bundle__:388:13)\r\n    at __webpack_require__ (__vue_ssr_bundle__:21:30)\r\n    at Object.module.exports.__vue_styles__ (__vue_ssr_bundle__:994:19)\r\n    at __webpack_require__ (__vue_ssr_bundle__:21:30)\r\n    at Object.module.exports.module.exports (__vue_ssr_bundle__:866:83)\r\n    at __webpack_require__ (__vue_ssr_bundle__:21:30)\r\n    at Object.<anonymous> (__vue_ssr_bundle__:650:80)\r\n    at __webpack_require__ (__vue_ssr_bundle__:21:30)\r\n    at Object.module.exports.exports.default.name (__vue_ssr_bundle__:224:66)\r\n    at __webpack_require__ (__vue_ssr_bundle__:21:30)\r\n\r\n\r\n### What is Expected?\r\n\r\nThe error info in the command line should include the specific file path and line number, for example:\r\n\r\nReferenceError: abc is not defined\r\n    at src/components/ItemList.vue (26:13)\r\n    ...\r\n\r\n\r\n### What is actually happening?\r\n\r\nError info dose not include the file path and line number that cause the error to produce..\r\n\r\nI know it is the bundle render that cause the error hard to locate. And is there any solution, like soucemap, that can solve this debug issuse with bundle render? "}, {"classified_as": "enhancement", "text": "Seems the utils.ad.async method is not implemented...\n"}, {"classified_as": "enhancement", "text": "If we want to center something vertically in normal CSS it is:\n\n CSS\nvertical-align: middle;\n\n\nin NS we should write\n\n CSS\nvertical-align: center;\n\n\nI think we should match it with the standard CSS property value.\n"}, {"classified_as": "enhancement", "text": "There are a lot of line breaks after the small icons in the GUI nowadays:\r\n\r\n<img width=\"569\" alt=\"Screen Shot 2019-10-03 at 19 47 32\" src=\"https://user-images.githubusercontent.com/125426/66151014-bc0abc80-e616-11e9-9a03-9e2997756aa7.png\">\r\n\r\nEven when it seems like no line break ought to be necessary at all:\r\n\r\n<img width=\"564\" alt=\"Screen Shot 2019-10-03 at 19 47 43\" src=\"https://user-images.githubusercontent.com/125426/66151065-d349aa00-e616-11e9-928f-3fac9cee1e05.png\">\r\n"}, {"classified_as": "enhancement", "text": "![qq 20180309201420](https://user-images.githubusercontent.com/31991443/37207243-14b000a6-23d7-11e8-959d-5f98e8c71914.png)\r\n![qq 20180309201430](https://user-images.githubusercontent.com/31991443/37207248-177fdafe-23d7-11e8-9292-2c6734e7120b.png)\r\n"}, {"classified_as": "enhancement", "text": "The automatic link generation to the detail pages of the type classes is broken.\r\nIt was working at one point with that syntax, so something in the config or vuepress must have changed.\r\n\r\nEvery thing written like this [[TYPE]] should be a generated link to the detail page.\r\n\r\nhttps://polkadot.js.org/api/types/"}, {"classified_as": "enhancement", "text": "In my mind, the bug is that STGUIASSETS should no longer point to the same hierachy that we compile in, and that the behavior is different when overriding vs when not. It used to be very simple (assuming $PATH has been requested):\n1. $STGUIASSETS/$PATH\n2. Compiled in asset $PATH\n\nNow we're instead looking for\n1. $STGUIASSETS/$PATH\n2. Compiled in asset $THEME/$PATH\n3. Compiled in asset default/$PATH\n\nI think it would be cleaner if we instead looked for\n1. $STGUIASSETS/$THEME/$PATH\n2. Compiled in asset $THEME/$PATH\n3. $STGUIASSETS/default/$PATH\n4. Compiled in asset default/$PATH\n\nThen we'd get back the old behavior of just being able to override the whole hierarchy and then hack on the dark theme or whatever as @lkwg82 also mentions. A (small) complication is that the theme selector would need to pick up themes present both in the compiled in assets and in the potential overridden assetsDir.\n\nFrom a development point of view, I think pointing STGUIASSETS at the gui dir in the source checkout should result in it working exactly as normal, except that anything in there can be overridden regardless of theme etc. It's just that I haven't noticed this is not the case because I haven't done nay GUI dev work lately :)\n\n(https://github.com/syncthing/docs/pull/132)\n"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 9.x.x -->\r\n<!-- npm 5.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**: 9.11.2\r\n- **npm version**: 5.6.0\r\n- **Strapi version**: 3.0.0-alpha.12.5\r\n- **Database**: ---\r\n- **Operating system**: Linux\r\n\r\n\r\n**What is the current behavior?**\r\nStrapi makes assumptions about a sibling tmp directory. Uses it as [temporary path](https://github.com/strapi/strapi/blob/5a156adf8b659fb7b8086dbab5ae280fd1d8cb6a/packages/strapi-generate-new/lib/before.js#L45) and [removes it](https://github.com/strapi/strapi/blob/5a156adf8b659fb7b8086dbab5ae280fd1d8cb6a/packages/strapi-generate-new/lib/before.js#L250) without further validation.\r\n\r\n**Steps to reproduce the problem**\r\nTry create a new project in the same level of a directory named tmp.\r\n\r\n\r\n**What is the expected behavior?**\r\nProject creation should not have side effects on my directory structure.\r\n\r\n\r\n**Suggested solutions**\r\nUse a real OS-temporary path. Don't make assumptions.\r\n\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n"}, {"classified_as": "bug", "text": "Uploading a file in binary (content-type: image/jpeg) results in \r\n\r\n\r\n{\r\n    \"error\": {\r\n        \"code\": 13,\r\n        \"message\": \"Invalid or Empty Payload\",\r\n        \"class\": \"Directus\\\\Exception\\\\InvalidPayloadException\",\r\n        \"file\": \"/Users/rijkvanzanten/Development/api/src/core/Directus/Application/Route.php\",\r\n...\r\n"}, {"classified_as": "bug", "text": "Env:\r\nMacBook, Node v10.8.0\r\n\u251c\u2500 puppeteer-har@1.0.2\r\n\u251c\u2500 puppeteer@1.7.0\r\n\r\nIssue:\r\nAdding DNT Header doesn't populate navigator.doNotTrack. Please let me know if you have any questions. I was also having trouble activating this using the chrome modHeader extension. I only had luck activating navigator.doNotTrack by changing privacy settings for my user in chrome (not chromium).\r\njavascript \r\n// in async function\r\nconst headerOptions = ['1', '0'];\r\nfor (header of headerOptions) {\r\n    for (url of urls) {\r\n      try {\r\n        await page.setExtraHTTPHeaders({'DNT': header})\r\n        await page.goto(${hostName}${url}, {timeout: 35000, waitUntil: ['networkidle0', 'load']});\r\n        await page.waitFor(500);\r\n        const doNotTrackValue = await page.evaluate(() => navigator.doNotTrack || window.doNotTrack || navigator.msDoNotTrack);\r\n        const currentURL = await page.url();\r\n        data.push([currentURL, doNotTrackValue]);\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    fs.writeFileSync(./domState${header}.json, JSON.stringify(data), {flags: 'w'});\r\n  }\r\n\r\n\r\nI expected navigator.doNotTrack to equal '1' or '0' depending on the iteration\r\n\r\ninstead navigator.doNotTrack equals null\r\n\r\n"}, {"classified_as": "bug", "text": "https://github.com/polkadot-js/api/pull/2208 is not enough.\r\n\r\nGetting error here\r\n\r\nhttps://github.com/polkadot-js/api/blob/1c8bd896e1f0050703119d04854b33048c522fc9/packages/rpc-core/src/index.ts#L391\r\n\r\nkeys is undefined.\r\n\r\nThe type information is coming from StorageKey, polkadot.js won't be able to just decode all the change set without extra helps.\r\n\r\nNot sure what's the best solution.\r\n\r\nI am trying to access the raw output instead and it is also not easy. There should be a version that doesn't do all the magics and just give me hex string and I can do the parsing myself."}, {"classified_as": "enhancement", "text": "+cannot mapping input of gamepad\r\n+wrong work button: gamepad work but it not work right in MMJoystick mode:\r\nFor ex: button 4:X, button 2:circle; button 3:triggle; button 1 square.  it should be   button 1: X; button 2: circle; button 3: square button 4: triggle,...\r\ni think you should change the default setting like the last build or fix the remapping in config, i can't not input gamepad key but it can be work ingame: so strange( not work right lol) \r\n![dsd](https://user-images.githubusercontent.com/34053443/33306551-99fb2920-d445-11e7-8653-33954a620bae.JPG)\r\n\r\n![24169359_1020165694792366_155068374_o](https://user-images.githubusercontent.com/34053443/33306561-a7125674-d445-11e7-9e3a-0bf13201ae27.jpg)\r\nhttps://guides.github.com/features/mastering-markdown/\r\n![24167221_1020165671459035_767994502_o](https://user-images.githubusercontent.com/34053443/33306566-aa7cb048-d445-11e7-8812-857f3f9bb28e.jpg)\r\n\r\n"}, {"classified_as": "bug", "text": "# Overview\r\nI'm looking for a simpler way to handle clicking on links which open new pages (like target=\"_blank\" anchor tags). \r\n\r\nHere handle means:\r\n- get the new page object\r\n- wait for the new tab to load (with timeout)\r\n\r\n<!--\r\nSTEP 1: Are you in the right place?\r\n\r\n- For general technical questions or \"how to\" guidance, please search StackOverflow for questions tagged \"puppeteer\" or create a new post.\r\n\r\nhttps://stackoverflow.com/questions/tagged/puppeteer\r\n\r\n- For issues or feature requests related to the DevTools Protocol (https://chromedevtools.github.io/devtools-protocol/), file an issue there:\r\n\r\nhttps://github.com/ChromeDevTools/devtools-protocol/issues/new.\r\n\r\n- Problem in Headless Chrome? File an issue against Chromium's issue tracker:\r\n\r\nhttps://bugs.chromium.org/p/chromium/issues/entry?components=Internals%3EHeadless&blocking=705916\r\n\r\nFor issues, feature requests, or setup troubles with Puppeteer, file an issue right here!\r\n-->\r\n\r\n### Steps to reproduce\r\n\r\n**Tell us about your environment:**\r\n\r\n* Puppeteer version: ^1.11.0\r\n* Platform / OS version:  64-bit, win 10 pro\r\n* URLs (if applicable): none\r\n* Node.js version: v10.15.0\r\n\r\nI've looked at related issues:\r\n#386 \r\n#3535 \r\n#978\r\nand more\r\n\r\n\r\n**What steps will reproduce the problem?**\r\n_I've included the code snippet below_\r\n\r\nI'm trying to:\r\n1. Get the object for the new page when clicking on a link opens a new tab. (The links are dynamically generated, capturing href might not be the most elegant way)\r\n2. Wait till the new page loads (with timeout). I'd like it if you can use page.waitForNavigation for consistency\r\n3. close the tab and return the earlier tab to continue further operations\r\n\r\n\r\n\r\n_Please include code that reproduces the issue._\r\n\r\n// as referenced here on #386 : https://github.com/GoogleChrome/puppeteer/issues/386#issuecomment-425109457\r\n    const getNewPageWhenLoaded =  async () => {\r\n        return new Promise(x =>\r\n            global.browser.on('targetcreated', async target => {\r\n                if (target.type() === 'page') {\r\n                    const newPage = await target.page();\r\n                    const newPagePromise = new Promise(y =>\r\n                        newPage.once('domcontentloaded', () => y(newPage))\r\n                    );\r\n                    const isPageLoaded = await newPage.evaluate(\r\n                        () => document.readyState\r\n                    );\r\n                    return isPageLoaded.match('complete|interactive')\r\n                        ? x(newPage)\r\n                        : x(newPagePromise);\r\n                }\r\n            })\r\n        );\r\n    };\r\n\r\n\r\nconst newPagePromise = getNewPageWhenLoaded();\r\nawait page.click('my-link'); // or just do await page.evaluate(() => window.open('https://www.example.com/'));\r\nconst newPage = await newPagePromise;\r\n\r\n\r\n\r\n\r\n**What is the expected result?**\r\nAn easier and consistent way to handle new tabs\r\n\r\n\r\n**What happens instead?**\r\nThe developer has to write what looks like plumbing (internal/ low level) commands.\r\nUsage of waitForTarget might simplify this, but I've not been able to get the predicate to return the right types. Here's my non-functional code\r\n\r\n\r\nprivate async getNewPageWhenLoaded() {\r\n        const newTarget = await this._browser.waitForTarget(async (target) => {\r\n            const newPage = await target.page();\r\n            await newPage.waitForNavigation(this._optionsNavigation);\r\n            // const newPagePromise = new Promise(() => newPage.once('load', () => x(newPage)));\r\n            return await newPage.evaluate(\"true\");\r\n        });\r\n        return await newTarget.page();\r\n    }\r\n\r\n// elsewhere in the code\r\n            const newPagePromise = this.getNewPageWhenLoaded();\r\n            await resultItem.element.click();\r\n            const newPage = <Page>await newPagePromise;\r\n\r\n//I get the following error\r\nDevTools listening on ws://127.0.0.1:31984/devtools/browser/bf86648d-d52d-42d8-a392-629bf96211d4\r\n(node:5564) UnhandledPromiseRejectionWarning: Error: Navigation failed because browser has disconnected!\r\n    at CDPSession.LifecycleWatcher._eventListeners.helper.addEventListener (<path-to-my-project>\\node_modules\\puppeteer\\lib\\FrameManager.js:1181:107)\r\n    at CDPSession.emit (events.js:182:13)\r\n    at CDPSession._onClosed (<path-to-my-project>\\node_modules\\puppeteer\\lib\\Connection.js:231:10)\r\n    at Connection._onMessage (<path-to-my-project>\\node_modules\\puppeteer\\lib\\Connection.js:103:19)\r\n    at WebSocketTransport._ws.addEventListener.event (<path-to-my-project>\\node_modules\\puppeteer\\lib\\WebSocketTransport.js:41:24)\r\n    at WebSocket.onMessage (<path-to-my-project>\\node_modules\\ws\\lib\\event-target.js:120:16)\r\n    at WebSocket.emit (events.js:182:13)\r\n    at Receiver.receiverOnMessage (<path-to-my-project>\\node_modules\\ws\\lib\\websocket.js:741:20)\r\n    at Receiver.emit (events.js:182:13)\r\n    at Receiver.dataMessage (<path-to-my-project>\\node_modules\\ws\\lib\\receiver.js:417:14)\r\n  -- ASYNC --\r\n    at Frame.<anonymous> (<path-to-my-project>\\node_modules\\puppeteer\\lib\\helper.js:144:27)\r\n    at Page.waitForNavigation (<path-to-my-project>\\node_modules\\puppeteer\\lib\\Page.js:644:49)\r\n    at Page.<anonymous> (<path-to-my-project>\\node_modules\\puppeteer\\lib\\helper.js:145:23)\r\n    at newTarget._browser.waitForTarget (<path-to-my-project>\\pageObjects\\MyPage.js:104:27)\r\n    at process._tickCallback (internal/process/next_tick.js:68:7)\r\n(node:5564) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)\r\n(node:5564) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\r\n(node:5564) UnhandledPromiseRejectionWarning: TimeoutError: Navigation Timeout Exceeded: 300000ms exceeded\r\n    at Promise.then (<path-to-my-project>\\node_modules\\puppeteer\\lib\\FrameManager.js:1276:21)\r\n  -- ASYNC --\r\n    at Frame.<anonymous> (<path-to-my-project>\\node_modules\\puppeteer\\lib\\helper.js:144:27)\r\n    at Page.waitForNavigation (<path-to-my-project>\\node_modules\\puppeteer\\lib\\Page.js:644:49)\r\n    at Page.<anonymous> (<path-to-my-project>\\node_modules\\puppeteer\\lib\\helper.js:145:23)\r\n    at newTarget._browser.waitForTarget (<path-to-my-project>\\pageObjects\\MyPage.js:104:27)\r\n    at process._tickCallback (internal/process/next_tick.js:68:7)\r\n(node:5564) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 2)\r\n"}, {"classified_as": "enhancement", "text": "If you try to bind to bindingContext and the source is instance of View then binding doesn't work.\r\n\r\n\r\nthis._actionsScrollView.bind({\r\n   sourceProperty: \"context\",\r\n   targetProperty: \"bindingContext\"\r\n}, this);\r\n\r\nwhere this is some view instance."}, {"classified_as": "enhancement", "text": "Hello,\r\n\r\nThe following may not be a bug, I have done my best to follow the available documentation, but if there is a correct way to do this then please let me know.\r\n\r\nI am trying to use the[ login example](https://github.com/strapi/strapi-examples/tree/master/login-react) with Strapi deployed to Heroku (as this is how I need to use Strapi in production) rather than localhost.  The example works fine for me locally.\r\n\r\nHowever, in order to get it to work I have to edit the the file in plugins/users-permissions/config/functions/bootstrap.js to include the following\r\n\r\n**UPDATE:**  This is now happening in config/functions/bootstrap.js, since the plugins have been moved to dependencies in the latest beta version.  However, apart from this minor difference, nothing else has been fixed.\r\n\r\n\r\n{\r\n...\r\nredirect_uri: \"https://...herokuapp.com/connect/google/callback\r\n}\r\n\r\n\r\nBefore doing this I also tried editing the file config/environments/production/server.js to specify the host and port (it was not clear from the documentation that this would be required either -- the front-end shows the heroku host in the provider settings dialog regardless)\r\n\r\n\r\n{\r\n...\r\n\"host\": \"https://...herokuapp.com\",\r\n\"port\": \"${process.env.PORT || 1337}\"\r\n}\r\n\r\n\r\nHowever, this does not work, since Heroku will use a different port each time, so while Strapi then correctly uses the right host it also attaches the port, so the redirect becomes \"https://...herokuapp.com:PORT/connect/google/callback\", which fails because this isn't an approved url (it is also not possible to allow wildcards in the list of approved urls).  Even if wildcards were allowed, going to https://...herokuapp.com:PORT also doesn't even work, since Heroku doesn't actually expose this port number.\r\n\r\nHaving to directly edit bootstrap.js feels like a hack.  It also introduces strange behavior in the Strapi front end.  Please see the image below.\r\n\r\n![screenshot](https://user-images.githubusercontent.com/16106511/58759439-1a972f80-857e-11e9-9f51-58cc7cf8985c.PNG)\r\n\r\nIn summary\r\n\r\n- have to edit bootstrap.js to get Facebook and Google login\r\n- the providers setting dialog in the screenshot now includes a duplicate field.\r\n- The last field \"The redirect URL to add in your Facebook application configurations\" doesn't actually represent the redirect address that is used (even if you don't update the deployed host in server.json, it will still show the heroku host but will actually redirect to localhost).\r\n\r\nAny help or suggestions for how to resolve this would be very much appreciated."}, {"classified_as": "enhancement", "text": "1.3 event only fires on view load. Tapping the bar items doesn't retrigger the event.\n\nAdd it to put the groceries app to test. \n\nIMO I don't even want it to fire on bind/load\n"}, {"classified_as": "enhancement", "text": "My [simple gps location app](https://github.com/getsetbro/nativescriptapp), straight from the documentation LocationManager example, doesn't work well when tested on 3 different android phones. Please try for yourself.\n\nProperties like altitude, speed, and direction are not displayed. It performs best if it has data, wifi, and gps. Worse if it has wifi and gps. Worst if it has just gps.\n\nHowever if an app like [GPS Status](https://play.google.com/store/apps/details?id=com.eclipsim.gpsstatus2) or Google Maps is also running, then it responds well and is useable. Those other apps are unlocking something that the TNS location module isn't.\n"}, {"classified_as": "bug", "text": "* **Version**: v13.6.0\r\n* **Platform**: Linux 535297d0ce81 4.19.0-4-amd64 #1 SMP Debian 4.19.28-2 (2019-03-15) x86_64 GNU/Linux\r\n* **Subsystem**: stream\r\n\r\n### What steps will reproduce the bug?\r\n\r\n    const stream = require('stream');\r\n    \r\n    // two different transforms (these work)\r\n    const transform_double = new stream.Transform({\r\n        transform(chunk, encoding, callback) {\r\n            this.push(chunk);\r\n            this.push(chunk);\r\n            callback();\r\n        }\r\n    });\r\n    const transform_uppercase = new stream.Transform({\r\n        transform(chunk, encoding, callback) {\r\n            this.push(chunk.toString().toUpperCase());\r\n            callback();\r\n        }\r\n    });\r\n    \r\n    // compose the transforms\r\n    const parser = stream.pipeline(transform_double, transform_uppercase, ()=>0);\r\n    \r\n    // run stdin through it\r\n    process.stdin.pipe(parser).pipe(process.stdout);\r\n\r\nThen pipe some text to it eg: echo \"foo\" | node reproduce.js\r\n\r\n### How often does it reproduce? Is there a required condition?\r\n\r\nalways\r\n\r\n### What is the expected behavior?\r\n\r\nThe text sent in should go through both transformations, eg output \"FOOFOO\"\r\n\r\n### What do you see instead?\r\n\r\nThe text piped in is only sent to the last transformation, eg output \"FOO\"\r\n\r\n### Additional information\r\n\r\nThe docs here don't say what this function returns:\r\nhttps://nodejs.org/api/stream.html#stream_stream_pipeline_streams_callback\r\n\r\nI'm saying that it should return a duplex stream so I can read and write to the ends of the pipeline."}, {"classified_as": "enhancement", "text": "I noticed that  the RPC state calls can't handle the input of type StorageKey anymore.\r\nI tried with different methods like getChildKeys, getChildStorage, getStorage, getStorageHash etc.\r\n\r\nEvery RPC call that accepts StorageKey as a parameter type fails when passing the data as StorageKey. The same calls work fine when I'm calling the toHex()/ toString() methods on the values.\r\n\r\nAn example to replicate this issue:\r\n\r\n// get storage keys for ':code' storage\r\nconst keys = await rpc.state.getKeys('0x3a636f6465').toPromise(); \r\n\r\n// The first storage key as StorageKey, this fails\r\nconst typeStorageKey = keys[0]; \r\nconst storageHash = await rpc.state.getStorageHash(typeStorageKey, '0x').toPromise() \r\n\r\nError message:\r\n<img width=\"1080\" alt=\"Screenshot 2019-07-30 at 19 58 14\" src=\"https://user-images.githubusercontent.com/125398/62153228-66f3b700-b304-11e9-97b2-102edee886c2.png\">\r\n\r\n\r\n// The first storage key hex encoded, this succeeds\r\nconst typeHex = keys[0].toHex();\r\nconst storageHashHex = await rpc.state.getStorageHash(typeHex, '0x').toPromise() \r\n\r\n<img width=\"534\" alt=\"Screenshot 2019-07-30 at 20 05 03\" src=\"https://user-images.githubusercontent.com/125398/62153652-5859cf80-b305-11e9-85f9-987fe94c4e61.png\">\r\n\r\n\r\n\r\nI also noticed, that the meta, method, outputType, section are undefined, but I'm not sure if that could have something to do with it.\r\n<img width=\"546\" alt=\"Screenshot 2019-07-30 at 20 02 14\" src=\"https://user-images.githubusercontent.com/125398/62153521-031dbe00-b305-11e9-9496-0afa70871071.png\">\r\n\r\n\r\nIt\u2019s the case on both the latest Polkadot and Substrate.\r\n\r\n"}, {"classified_as": "bug", "text": "Some weeks ago, dialogs had a nice shadow as borders that gave the idea of elevation. However, now dialogs don't have shadows at all, and background outside dialog is not darkened. I'm using Xperia Z with Android 4.4.4\nYou can see in the screenshot that dialog background is exactly the same as activity background (the icons on the navigation bar are just from a Xperia theme).\nPS: open animation now looks worse (alpha instead of resize), but it follows Material Design guidelines...\n![screenshot_2015-04-18-19-46-51](https://cloud.githubusercontent.com/assets/2737599/7216577/7945faac-e604-11e4-9b18-d6186489903f.png)\n"}, {"classified_as": "enhancement", "text": "Current master, effectively block don't show up in the apps UI atm"}, {"classified_as": "enhancement", "text": "During testing we found out the upcoming release of FlexboxLayout will have a little bit off behavior when shrinking items.\r\n\r\nUsing the following HTML example, when the browser is resized, the items will shrink distributing the negative extra space proportionally to their size. Making the small items visible even when the container size is really small.\r\n\r\n HTML\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<style>\r\ndiv {\r\n  display: flex;\r\n  border: 1px solid red;\r\n}\r\np {\r\n  border: 1px solid black;\r\n  overflow: hidden;\r\n}\r\n</style>\r\n</head>\r\n<body>\r\n\r\n<div>\r\n  <p>row</p>\r\n  <p>rowwreverse</p>\r\n  <p>column</p>\r\n  <p>columnwreverse</p>\r\n\r\n  <p>row</p>\r\n  <p>rowwreverse</p>\r\n  <p>column</p>\r\n  <p>columnwreverse</p>\r\n</div>\r\n\r\n</body>\r\n</html>\r\n\r\n\r\nWhile in {N}, the flex-shrink (default 1) doesn't seem to be multiplied by the content size when accountent for a _flex-shrink-factor_:\r\n\r\n XML\r\n<Page>\r\n    <ScrollView orientation=\"horizontal\">\r\n    <!-- Experiment with the width here. The \"row\" item below will completely disappear while \"columnwreverse\" will stay quite large -->\r\n    <FlexboxLayout width=\"400\" horizontalAlignment=\"left\" borderWidth=\"1\" borderColor=\"black\">\r\n        <Label text=\"row\" borderWidth=\"1\" borderColor=\"black\" />\r\n        <Label text=\"rowwreverse\" borderWidth=\"1\" borderColor=\"black\" />\r\n        <Label text=\"column\" borderWidth=\"1\" borderColor=\"black\" />\r\n        <Label text=\"columnwreverse\" borderWidth=\"1\" borderColor=\"black\" />\r\n        <Label text=\"row\" borderWidth=\"1\" borderColor=\"black\" />\r\n        <Label text=\"rowwreverse\" borderWidth=\"1\" borderColor=\"black\" />\r\n        <Label text=\"column\" borderWidth=\"1\" borderColor=\"black\" />\r\n        <Label text=\"columnwreverse\" borderWidth=\"1\" borderColor=\"black\" />\r\n    </FlexboxLayout>\r\n    </ScrollView>\r\n</Page>\r\n\r\n\r\nRead: [https://www.w3.org/TR/css-flexbox-1/#flex-base-size](https://www.w3.org/TR/css-flexbox-1/#flex-base-size):\r\n\r\n> Note: The flex shrink factor is multiplied by the flex base size when distributing negative space. This distributes negative space in proportion to how much the item is able to shrink, so that e.g. a small item won\u2019t shrink to zero before a larger item has been noticeably reduced.\r\n\r\nThis doesn't seem to be applied in our case."}, {"classified_as": "bug", "text": "<!--\r\nHello \ud83d\udc4b Thank you for submitting an issue.\r\n\r\nBefore you start, please make sure your issue is understandable and reproducible.\r\nTo make your issue readable make sure you use valid Markdown syntax.\r\n\r\nhttps://guides.github.com/features/mastering-markdown/\r\n\r\nPlease ensure you have also read and understand the contributing guide.\r\n\r\nhttps://github.com/strapi/strapi/blob/master/CONTRIBUTING.md#reporting-an-issue\r\n-->\r\n\r\n**Describe the bug**\r\nEvery time strapi-plugin-documentation/config/functions/bootstrap.js runs, it will write to full_documentation.json even if no update is created.\r\n\r\n**Steps to reproduce the behavior**\r\n\r\n1. create a new project with users-permissions and documentation plugin installed \r\n2. start the server \r\n3. it should edit full_documentation.json but only changing thex-generation-date info\r\n\r\n**Expected behavior**\r\nIf no update has been made, it should not write to the file\r\n\r\n**Screenshots**\r\n\r\n![image](https://user-images.githubusercontent.com/20282317/89776024-a110af00-db3b-11ea-81d2-dc29ac5a0109.png)\r\n![image](https://user-images.githubusercontent.com/20282317/89776120-d3baa780-db3b-11ea-8f24-1de12a8b810d.png)\r\n\r\n**Code snippets**\r\nwhen bootstrap.js runs, it will almost always enter this condition\r\njs\r\n// strapi-plugin-documentation/config/functions/bootstrap.js: line 101\r\nif (!isMergedDocumentationExists || shouldUpdateFullDoc) {\r\n    // Create the folder\r\n    services.createDocumentationDirectory(documentationPath);\r\n    // Write the file\r\n    fs.writeFileSync(\r\n      path.resolve(documentationPath, 'full_documentation.json'),\r\n      JSON.stringify(fullDoc, null, 2),\r\n      'utf8'\r\n    );\r\n}\r\n\r\n\r\nas caused by checkIfPluginDocNeedsUpdate returning true when checking the \"users-permissions\" plugin, as it has 2 tags: UsersPermissions - User and UsersPermissions - Role\r\njs\r\n// strapi-plugin-documentation/config/functions/bootstrap.js: line 38\r\nconst needToUpdatePluginDoc = services.checkIfPluginDocNeedsUpdate(plugin);\r\n\r\n\r\nthis happens because createDocObject() uses _.merge() which doesnt work if there is a property that contains an array, as it will override the array. Thus only one tag can appear in the object. To fix that the function should be changed to mergeWith that has a customizer for array values\r\njs\r\n// strapi-plugin-documentation/services/Documentation.js\r\n// from\r\ncreateDocObject: array => {\r\n    return array.reduce((acc, curr) => _.merge(acc, curr), {});\r\n},\r\n\r\n// to \r\ncreateDocObject: array => {\r\n    function forArray(objValue, srcValue) {\r\n      if (_.isArray(objValue)) {\r\n        return objValue.concat(srcValue);\r\n      }\r\n    }\r\n    return array.reduce((acc, curr) => _.mergeWith(acc, curr,forArray), {});\r\n},\r\n\r\n\r\nhowever this raises another error in the areObjectsEquals() function as it simply does return JSON.stringify(obj1) === JSON.stringify(obj2); to check for equality and will fail if the arrays don't have the exact same order\r\n\r\n**System**\r\n- Docker image: strapi/strapi:3.1.3\r\n- Node.js version: v12\r\n- NPM version:\r\n- Strapi version: 3.1.3\r\n- Database: MongoDB\r\n- Operating system: Linux"}, {"classified_as": "enhancement", "text": "If you add tap gesture on a button parent (e.g. some layout for example), add tap handler on the button, click the button and execute navigation with clear history current fragment will be removed and we will clear the button listener owner. Still android will fire the click handler and we will throw an exception."}, {"classified_as": "bug", "text": "When the request path is the storage directory it shouldn't route that request to the API endpoints but rather return a not found response.\r\n\r\nConditions:\r\n- When the file doesn't exists in storage."}, {"classified_as": "enhancement", "text": "I paused this thing way back and it just keeps on syncing. New connections are prevented but existing ones are not terminated.\r\n\r\n<img width=\"571\" alt=\"Screenshot 2019-07-19 at 12 07 44\" src=\"https://user-images.githubusercontent.com/125426/61527971-f607f180-aa1d-11e9-8eca-37b996c8298a.png\">\r\n"}, {"classified_as": "enhancement", "text": "the supportedSubmitMethods should behave as follows:\n- if not configured, allow everything\n- if any values are configured, ensure operations exist in the array\n"}, {"classified_as": "bug", "text": "On desktop:\n![img_2014 11 25_20h04m25s_007_](https://cloud.githubusercontent.com/assets/1368405/5189452/5829492e-74de-11e4-94da-8a0dc1f525cc.png)\n\nOn mobile phone (currently):\n![img_2014 11 25_20h04m17s_006_](https://cloud.githubusercontent.com/assets/1368405/5189463/63d9e6a2-74de-11e4-9a43-66472d28b9c3.png)\n\nOn mobile phone (should be):\n![img_2014 11 25_20h04m03s_005_](https://cloud.githubusercontent.com/assets/1368405/5189470/6e99b068-74de-11e4-9f6c-5b51cfd49db0.png)\n\nJust create a helper class, that gives row elements a margin on mobile devices.\n"}, {"classified_as": "bug", "text": "<!--\r\nHello \ud83d\udc4b Thank you for submitting an issue.\r\n\r\nBefore you start, please make sure your issue is understandable and reproducible.\r\nTo make your issue readable make sure you use valid Markdown syntax.\r\n\r\nhttps://guides.github.com/features/mastering-markdown/\r\n-->\r\n\r\n**Describe the bug**\r\nWhen a value is entered in the component category input, the input value is not selectable. \r\n\r\n**Steps to reproduce the behavior**\r\n1. Go to the Content Type Builder plugin\r\n2. Click to create a new Component\r\n3. Enter a value into the category name input (and create the categetogy)\r\n4. Then click in the input (you can't select and navigate in the input)\r\n\r\n**Expected behavior**\r\nTo be able to navigate in the input value.\r\n\r\n**Screenshots**\r\nHere is a short video of the issue.\r\n\r\nhttps://www.loom.com/share/ab8be160a8354e80b62fe94535250b06\r\n\r\n**System**\r\n- Node.js version: v12.14.1\r\n- NPM version: 6.13.4\r\n- Strapi version: v3.0.0-beta.18.7\r\n- Database: SQLite\r\n- Operating system: MacOs\r\n"}, {"classified_as": "bug", "text": "**What is the current behavior?**\r\nLoading too slow\r\nScreen unresponsive\r\n\r\n**Steps to reproduce the problem**\r\n- Create 2 content types\r\n- Create relation between content types ( has many )\r\n- Seed with some items ( i'm trying with 10.000)\r\n- Navigate in content manager, select an item, wait for the results.\r\n\r\n**What is the expected behavior?**\r\nExpected a fast loading of the section, in fact the query is loading all documents. Too long, 2-3 minutes.\r\n\r\n**Suggested solutions**\r\nChecked: content-manager/explorer/{content-type}/{id}?source=content-manager\r\nIt is loading all documents from db, why is needed ?\r\n\r\n**Tested on**\r\nNode: 10.13.0\r\nStrapi: 3.0.0-alpha.14.5,15,16\r\nMongo: 3.6.3\r\nGoogle Chrome: 70.0.3538.110"}, {"classified_as": "bug", "text": "**Node.js version**: 8.9.4\r\n**npm version**: 5.6.0\r\n**Strapi version**: 3.0.0-alpha.8.3\r\n**Operating system**: Mac OSX\r\n\r\nA model containing a \"long\" description, will mess up the table(list of models) in Content Type Builder plugin.\r\n\r\nModel example:\r\n\r\n{\r\n  \"connection\": \"default\",\r\n  \"collectionName\": \"product\",\r\n  \"info\": {\r\n    \"name\": \"product\",\r\n    \"description\": \"Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test Test.\"\r\n  },\r\n  \"attributes\": {\r\n    \"name\": {\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/2089088/35266263-fc659ccc-0022-11e8-9a98-5c8f72405ae2.png)\r\n"}, {"classified_as": "bug", "text": "**Describe the bug**\r\ni have a many-to-many relation between doctor and meta. graphql query:\r\n doctors(limit:1}) {\r\n    id\r\n    metas{    id    }\r\n    }\r\n\r\ngenerates 3 mysql queries :\r\n1.  select doctors.* from doctors limit 1\r\n\r\n2. select distinct metas.* from metas left join doctop.doctors_metas__metas_doctors as doctors_metas__metas_doctors_1 on doctors_metas__metas_doctors_1.meta_id = metas.id left join doctop.doctors as doctors_1 on doctors_metas__metas_doctors_1.doctor_id = doctors_1.id where doctors_1.id in ('308384')\r\n\r\n3. select distinct doctors.*, doctors_metas__metas_doctors.meta_id as _pivot_meta_id, doctors_metas__metas_doctors.doctor_id as _pivot_doctor_id from doctors inner join doctors_metas__metas_doctors on doctors_metas__metas_doctors.doctor_id = doctors.id where doctors_metas__metas_doctors.meta_id in (26, 438, 872)\r\n\r\n\r\nthe third query is very time consuming. i have 1500000 doctors in my db, and system crashs with heap mempry!! i want only one doctor metas.  i dont undrestand why the third query is generated! \r\nincreaseing server memory, the heap memory error disapears. but the query runing time is 30 seconds!  and make website very slow. i even created a new strapi inctance, with doctor and meta only models. the queries is the same as my current instance!\r\n\r\n\r\n \r\n\r\n \r\n\r\n**Steps to reproduce the behavior**\r\n1. define meta, doctor models\r\n2. a many-to-many relation betwnn meta and doctor\r\n3. create 100K doctor and 100k metas\r\n4. query the doctors and metas. 3 qouries last more than 30S. low performance ....\r\n\r\n**Expected behavior**\r\n2 first qouries is enough!:\r\n1.  select doctors.* from doctors limit 1\r\n\r\n2. select distinct metas.* from metas left join doctop.doctors_metas__metas_doctors as doctors_metas__metas_doctors_1 on doctors_metas__metas_doctors_1.meta_id = metas.id left join doctop.doctors as doctors_1 on doctors_metas__metas_doctors_1.doctor_id = doctors_1.id where doctors_1.id in ('308384')\r\n\r\n \r\n**System**\r\n- Node.js version: v12.16.1\r\n- NPM version: 6.13.4\r\n- Strapi version:  v3.0.0-beta.18.8\r\n- Database: mysql\r\n- Operating system: centos\r\n \r\n\r\n"}, {"classified_as": "enhancement", "text": "Did some QA with a friend, both controllers happened to disconnect and reconnect in the opposite order as pads were defined. So both pads disconnected and when reconnecting Player 2's controller connected to Player 1's pad and Player 1's controller connected to Player 2's pad.\r\n\r\nThe controllers were both DualShock 4, but I'm not sure if it's relevant to the issue, seems like it can happen with any controller type."}, {"classified_as": "bug", "text": "I was trying to set GNU Stow on Windows 10 when I saw this: The symlink function is unimplemented.\r\nThe Windows API equivalent of symlink() is [CreateSymbolicLinkA](https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createsymboliclinka) and [CreateSymbolicLinkW](https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createsymboliclinkw).\r\n"}, {"classified_as": "enhancement", "text": "(I did not actually verify if this is a real issue)\r\n\r\nhttps://github.com/polkadot-js/api/pull/798#discussion_r271116857\r\n\r\n> DoubleMapType only exists in v3 so this should fail if trying to convert a metadata includes double to v2.\r\nOne way to solve this (without refactor everything to make it upgrade instead of downgrade), is duplicate DoubleMapType in v2 like how I retrofit is_linked in v1\r\n\r\n"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 9.x.x -->\r\n<!-- npm 5.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**:\r\n9.0.0\r\n- **npm version**:\r\n6.0.1\r\n- **Strapi version**:\r\n3.0.0-alpha.12.2\r\n- **Database**:\r\nMongoDB v3.6.5\r\n- **Operating system**:\r\nMac OS X Sierra\r\n**What is the current behavior?**\r\nThe server restarts when I create a content type.\r\n\r\n**Steps to reproduce the problem**\r\nCreate a content type.\r\n\r\n**What is the expected behavior?**\r\nI would expect the server to just keep running after creating a content type and an entry with a couple of fields.\r\n\r\nWhy would a whole server need to be restarted when only 'content' is created? Something seems wrong, from an architectural point of view \u2026\r\n\r\n**Suggested solutions**\r\nWell, make is possible to dynamically create content types without requiring a server restart.\r\n\r\n\r\n<!--  Make sure to browse the opened and closed issues before submit your issue. -->\r\n\r\n\r\n<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!--  Make sure to browse the opened and closed issues before submit your issue. -->\r\n"}, {"classified_as": "bug", "text": "I created an api called ali-api. After starting the strapi-server I'm greated by the error below.\nThe name should be checked at creation time.\nDo you want me to  make a PR to add this check to https://github.com/wistityhq/strapi-generate-api?\n\n\nali-api $ strapi generate api ali-api\ninfo: Generated a new api ali-api at ./api.\nali-api $ strapi start\ninfo: Your server is running at http://localhost:1337\ndebug: Time: Fri Nov 20 2015 10:06:59 GMT+0100 (CET)\ndebug: Environment: development\ndebug: Process PID: 12479\ndebug: Cluster: master\ninfo: To shut down your server, press <CTRL> + C at any time\n\nError: Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"Ali-api\" does not.\n\n"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!-- =============================================================================== -->\r\n<!--  If you are not using the current Strapi release, you will be asked to update. -->\r\n<!-- Please see the wiki for guides on upgrading to the latest release. -->\r\n<!-- =============================================================================== -->\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 10.x.x -->\r\n<!-- npm 6.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**: 11.6.0\r\n- **NPM version**: 6.5.0\r\n- **Strapi version**: alpha 20\r\n- **Database**: 10.3.8-MariaDB\r\n- **Operating system**: macos 10.14.2\r\n- **(Optional) Link to your Project**:  https://www.npmjs.com/package/@teamgi/strapi-provider-email-sparkpost\r\n\r\n**What is the current behavior?**\r\nI'm not seeing my custom email provider in the admin after installing it via npm.\r\n\r\n\r\n**Steps to reproduce the problem**\r\n- I run the following command in my project root:\r\nnpm i @teamgi/strapi-provider-email-sparkpost --save\r\n- I start strapi\r\n- I visit /admin/plugins/email/configurations/development\r\n- Under providers I only see Sendmail\r\n\r\n**What is the expected behavior?**\r\nI expect to see a provider named Sparkpost\r\n\r\n**Suggested solutions**\r\nThe issue seems to be in plugins/email/config/functions/bootstrap.js. It looks like it does not support org namespaced package names. I think it would be better to try to programmatically retrieve the list of npm packages rather than simply relying on the folder names.\r\n"}, {"classified_as": "bug", "text": "I'm trying to take a full-page screenshot for a website, that contains lots of images. I write below scripts:\r\n\r\njs\r\nconst puppeteer = require('puppeteer');\r\n\r\n(async() => {\r\n\tconst browser = await puppeteer.launch();\r\n\r\n\tconst page = await browser.newPage();\r\n\r\n\tawait page.goto('https://blog.petehouston.com', {\r\n\t\twaitUntil: 'networkidle'\r\n\t});\r\n\r\n\tawait page.waitForSelector('img');\r\n\r\n\tawait page.screenshot({\r\n\t\tpath: 'capture.jpg',\r\n\t\tfullPage: true\r\n\t});\r\n\r\n\tbrowser.close();\r\n})();\r\n\r\n\r\nHowever, the result screenshot capture.jpg shows that puppeteer hasn't completed loading all images on the site.\r\n\r\nIs there any way to wait for all images img completed loading?"}, {"classified_as": "enhancement", "text": "When the UI is zoomed to a high enough level the folder status text, e.g. \"Up to Date\", is replaced by a \"box\" character. This is not pronounceable by some screen readers, such as [NVDA](http://www.nvaccess.org/). I have very little HTML/CSS experience but I assume there are methods that can be employed so that screen readers are still given text to read out in this circumstance.\n"}, {"classified_as": "enhancement", "text": "Is it possible to modify the way to generate objectId for custom class instead of the auto generate 10 pseudo random 10 character string? Is it possible to have more than 10 characters objectId? thanks"}, {"classified_as": "enhancement", "text": "\r\nHello,\r\n\r\nIs there a REST endpoint for resending verification of emails?  I don't see anything in the documentation.\r\n\r\nThanks."}, {"classified_as": "enhancement", "text": "The -gui-address command-line parameter no longer accepts a scheme in v0.12, complains of \"too many colons\".\n\nSee IRC log:\n\n\n<canton7> it seems that v0.12 doesn't like having 'http://' or 'https://' in the -gui-address command-line parameter?\n<calmh> okay\n<canton7> is that an intended change, or an (unintended?) artefact of something else?\n<calmh> too many colons etc\n<canton7> yeah\n<calmh> i think unintended\n<calmh> i don't remember doing something about it intentionally\n<calmh> but i do remember changing how we handle overrides of those things from the command line\n<calmh> so i probably broke something\n<canton7> it would make my life amazing again if I can force https, even if the user hasn't checked that box in the settings (otherwise I'm playing a bit of a redirection guessing game) :D\n<calmh> you can always use https anyway, you won't get a redirect to http from it\n<calmh> but yes, that's supposed to work\n<canton7> I vaguely recall there being a gotcha there, but can't remember what it was\n<canton7> (helpful I know..)\n<calmh> right\n<calmh> so if that option is given, we just pretend that was the value that was stored as listen port in the config\n<calmh> but we don't store it that way in the config, and we have a separate tls flag there\n<calmh> so that's broken\n<calmh> we shoudl chop off the scheme, like we did before\n<calmh> i changed the config handling for other reasons a few commits back and broke this then\n\n"}, {"classified_as": "enhancement", "text": "All symlinks in our shares disappeared:\r\n\r\nhttps://gist.github.com/koma85/8901a0f56fa26196bacb5b1fed7b46ea\r\n\r\nThis happened after the automatic update as you can see from our log\r\n\r\n"}, {"classified_as": "bug", "text": "**Describe the bug**\r\nUsing xframe ALLOW-FROM throws error in console: Invalid 'X-Frame-Options' header encountered when loading 'https://api.dev.mysite.com/uploads/my-file.pdf': 'ALLOW-FROM dev.mysite.com' is not a recognized directive. The header will be ignored.\r\n\r\nhttps://strapi.io/documentation/v3.x/concepts/middlewares.html#response-middlewares\r\ninstructions for xframe indicate ALLOW-FROM which is obsolete per https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options\r\n\r\n**Steps to reproduce the behavior**\r\nSee docs\r\n\r\n**Expected behavior**\r\ni guess allow-from needs to be changed.\r\n\r\ni tried using frame-ancestors but it also wasnt recognized, so i dont have any suggestions at the moment\r\n\r\n**Screenshots**\r\nnone\r\n\r\n**Code snippets**\r\n\r\n        xframe: {\r\n            enabled: true,\r\n            value: \"frame-ancestors dev.mysite.com\"\r\n        },\r\n\r\n\r\n**System**\r\nNode.js version: v10.16.3\r\nNPM version: 6.9.0\r\nStrapi version: Strapi v3.0.4\r\nDatabase: mongo v4.0.12\r\nOperating system: ubuntu 18.04\r\n\r\n**Additional context**\r\nThank you!\r\n"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 9.x.x -->\r\n<!-- npm 5.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**: 9.11\r\n- **npm version**: 5.6\r\n- **Strapi version**: 3.0.0-alpha.12.6\r\n- **Database**: mongo\r\n- **Operating system**: windows 10 LTSB\r\n\r\n\r\n**What is the current behavior?**\r\n\r\nlanguage - not work, error in console \r\n![image](https://user-images.githubusercontent.com/8849299/42117286-6a841348-7c04-11e8-9ae3-45233e79be70.png)\r\n\r\n\r\n**Steps to reproduce the problem**\r\n\r\nstrapai start\r\n\r\n**What is the expected behavior?**\r\n\r\nis correct switch language\r\n\r\n**Suggested solutions**\r\n\r\n\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n"}, {"classified_as": "enhancement", "text": "From https://polkadot.js.org/api/types/\r\n\r\n- Metadata (and it looks the same as others) is not creating a link\r\n- Other links (e.g. AccountId), try to load the .md file instead of the generated HTML - well, actually HTML is not generated\r\n\r\nNeed a solution that does not entail adding all these to SUMMARY.md"}, {"classified_as": "enhancement", "text": "The shading makes seams on the models very obvious. It also makes the shadows much darker than they were originally.\r\n\r\n![image](https://user-images.githubusercontent.com/16433536/64656136-6880c680-d3fc-11e9-9ae2-6f2080fad564.png)\r\nin comparison to\r\n![image](https://user-images.githubusercontent.com/16433536/64656141-78000f80-d3fc-11e9-91d7-7d31cee85795.png)\r\n"}, {"classified_as": "bug", "text": "**Informations**\r\n- **Node.js version**: v9.11.1\r\n- **npm version**: v5.6.0\r\n- **Strapi version**: 12.0.1\r\n- **Database**: MongoDB v3.6.4\r\n- **Operating system**: Ubuntu Server 16.04 LTS\r\n\r\n**What is the current behavior?**\r\nWhen using numerical field (Int, Dec, or Float) if a value of 0 is entered the content manager will show a - instead of the value. Also while editing a record if you place any value in the text field then delete it, the value will default to 0\r\n\r\n**Steps to reproduce the problem**\r\nAdd a numerical field to any endpoint, place a 0 in the field, then return to the content manager.\r\nNote that if the column is displayed in the content manager it will show - instead of 0. Does not affect the API as it will return the proper value.\r\n\r\nSecond issue, attempt to modify the record and delete the value of the numerical field, which after clicking away it will auto-default back to 0 again. While not breaking, in some cases you may not want a default value of 0 and instead want a default value of null\r\n\r\n**What is the expected behavior?**\r\nContent Management should display the exact value and not assume that 0 is equal to null\r\nNumerical fields should not assume that a default numerical value is 0 and should default to null\r\n\r\n\r\n**Suggested solutions**\r\nUnsure as I'm not sure how the content management plugin determines default values. Recommend adding the option to set a default value on a numerical field to null.\r\n\r\n\r\n- [x] I'm sure that this issue hasn't already been referenced\r\n\r\n- Possible related issues/fixes:\r\nhttps://github.com/strapi/strapi/issues/670\r\nhttps://github.com/strapi/strapi/commit/f5571af1c17fc27fb3bda3a208826920a9a7d02c\r\n\r\nIssue is likely a \"Quality of Life\" fix and not a breaking bug\r\n"}, {"classified_as": "enhancement", "text": "I have several operations defined in my api's with an httpMethod of POST, and in my index.html the supportedSubmitMethods array does contain 'post', however when I attempt to test these endpoints, they are sent via a GET ajax request, not a POST.\n\nIs there any other requirements to get them to be submitted as a POST request? For instance these operations do include some \"query\" type parameters, as I want them in the query string, not the post data - but that shouldn't prevent it from being a POST request should it?\n"}, {"classified_as": "bug", "text": "<!--\r\nHello \ud83d\udc4b Thank you for submitting an issue.\r\n\r\nBefore you start, please make sure your issue is understandable and reproducible.\r\nTo make your issue readable make sure you use valid Markdown syntax.\r\n\r\nhttps://guides.github.com/features/mastering-markdown/\r\n-->\r\n\r\n**Describe the bug**\r\n\r\nThe browser autofill the username and password when create a new user:\r\n\r\n<img width=\"925\" alt=\"Screenshot 2020-01-22 at 11 59 45\" src=\"https://user-images.githubusercontent.com/1007051/72888972-f788de00-3d0e-11ea-9218-37729e6f0c2a.png\">\r\n\r\n\r\n**Steps to reproduce the behavior**\r\n1. Go to Users content type\r\n2. Click on Add new User\r\n3. The browser autofill the username and password  \r\n\r\n**Expected behavior**\r\n\r\nThe browser not autofill the username and password.\r\n\r\n**System**\r\n- Node.js version: v12\r\n- NPM version: v6\r\n- Strapi version: v3.0.0-beta.18.5\r\n- Database: MongoDB\r\n- Operating system: macOS\r\n"}, {"classified_as": "bug", "text": "Convert to ES6 classes in the same fashion as https://github.com/polkadot-js/client/pull/132\r\n\r\nhttps://github.com/polkadot-js/api/blob/master/packages/api-provider/src/http/index.ts\r\nhttps://github.com/polkadot-js/api/blob/master/packages/api-provider/src/ws/index.ts\r\n\r\nNot the only 2 places in the API layer, but a start. (Bonus convert all the closures with self)"}, {"classified_as": "bug", "text": "<!--\r\nHello \ud83d\udc4b Thank you for submitting an issue.\r\n\r\nBefore you start, please make sure your issue is understandable and reproducible.\r\nTo make your issue readable make sure you use valid Markdown syntax.\r\n\r\nhttps://guides.github.com/features/mastering-markdown/\r\n-->\r\n\r\n**Describe the bug**\r\n\ud83e\udd1e I'm not missing something but it looks like the current /change-password REST and/or the\r\nchangePassword GraphQL mutation actually is handling the **reset password** logic. \r\n\r\nTo fix this I'm proposing two things:\r\n1. rename current change-password logic to reset-password\r\n2. implement a new change-password mutation, for which I have a proposed PR, which I will reference in the comments shortly.\r\n\r\n**Expected behavior**\r\nFor the global self-isolation to end soon.\r\n\r\n**Proposed solution**\r\n**Follow the progress:** https://github.com/strapi/strapi/pull/5655\r\n\r\n**Inpired by**\r\nThe awesome PR https://github.com/strapi/strapi/pull/5580/ by @roelbeerens"}, {"classified_as": "enhancement", "text": "(Reported [here](https://puppeteer.slack.com/archives/C8XEP1718/p1524815460000457) on our slack channel)\r\n\r\nSince we terminate browser with kill -9 in an attempt to exit as fast as possible, browser.close() causes puppeteer child_process to exit with non-zero code.\r\n\r\nThis has unfortunate consequences on AWS Lambda.\r\nQuoting @alixaxel:\r\n\r\n> On Lambda, it creates core dumps which if the function is kept warm, will eventually prevent it from starting due to no disk space (only 500MB on /tmp).\r\n\r\nWe should:\r\n- enhance protocol's [Browser.close()](https://vanilla.aslushnikov.com/#Browser.close) to (optionally) ignore beforeunload handlers\r\n- use browser.close() exclusively instead of kill -9."}, {"classified_as": "bug", "text": "**Describe the bug**\r\n\r\n(I consider this a bug because it deviates from expected UX.)\r\n\r\nWhen saving a string field, Strapi should automatically trim leading and trailing spaces before storing in the database. This ensures data quality for these fields, and prevents issues such as a user copying and pasting a string into the input and accidentally & unknowingly (because it's not visible) saving trailing white spaces.\r\n\r\n(Related & untested--and I can create another issue if desired--but enumeration field options should also have their leading/trailing spaces trimmed off of all options when setting up allowed values. That's not so much of a data quality issue though, but would be a best practice.)\r\n\r\n**Steps to reproduce the behavior**\r\n\r\n1. In Content Type Builder, create a string field \r\n<img width=\"704\" alt=\"string field\" src=\"https://user-images.githubusercontent.com/50032291/64833758-a9c8d000-d5ce-11e9-887f-829ba810e69e.png\">\r\n2. In Strapi, create a new entry, enter data for this field including leading and trailing spaces, & save it.\r\n<img width=\"366\" alt=\"data entry\" src=\"https://user-images.githubusercontent.com/50032291/64833786-c6fd9e80-d5ce-11e9-8838-bf5354c06ec4.png\">\r\n3. Check the DB to see actual string stored.\r\n<img width=\"121\" alt=\"data in DB\" src=\"https://user-images.githubusercontent.com/50032291/64833881-16dc6580-d5cf-11e9-97e0-e3bce0c5a940.png\">\r\n\r\n**Expected behavior**\r\n\r\nThe string should be saved in the DB without any leading or trailing spaces\r\n\r\n**Actual behavior**\r\n\r\nThe string is stored in the DB with leading and trailing spaces.\r\n\r\n**System**\r\n- Node.js version: **User did not provide**\r\n- NPM version: **User did not provide**\r\n- Strapi version: beta.16\r\n- Database: SQLite\r\n- Operating system: **User did not provide**\r\n\r\n**Edited by:** @derrickmehaffy "}, {"classified_as": "enhancement", "text": "Vulkan compute descriptor allocation is suboptimal, making large RSX captures impossible to replay. Either the compute-based texture decoder should be possible to disable or the allocation should be dynamic to avoid this situation."}, {"classified_as": "enhancement", "text": "When choosing xml or json response types, the options are being lost\n"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 9.x.x -->\r\n<!-- npm 5.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**: Node 10.7.0\r\n- **npm version**: npm 6.1.0\r\n- **Strapi version**: 3.0.0-alpha.13.1\r\n- **Database**: mongodb\r\n- **Operating system**: Ubuntu 18.04\r\n\r\n\r\n**What is the current behavior?**\r\nStrapi returns a error {\"statusCode\":400,\"error\":\"Bad Request\",\"message\":[{\"messages\":[{\"id\":\"Auth.form.error.email.invalid\"}]}]}\r\n\r\n\r\n**Steps to reproduce the problem**\r\nGo to \"forgot password\" link at the Strapi login screen. Enter your emailaddress and click the button about 3 times fast\r\n\r\n\r\n**What is the expected behavior?**\r\nStrapi sends the forgot password email\r\n\r\n\r\n**Suggested solutions**\r\nStop any calls after the button click or don't process a call with the same 'call id or session id' as the previous one.\r\n\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n"}, {"classified_as": "enhancement", "text": "Demo:\r\n\r\nhttps://runkit.com/szmarczak/5d90f849ecc28e001ac8f3e1\r\n\r\nCurrent output:\r\n\r\nclient side - 4294967295\r\nclient side - 4294967295\r\nserver side - 4294967295\r\nserver side - 2\r\n\r\n\r\nExpected output:\r\n\r\nclient side - 4294967295\r\nclient side - 2\r\nserver side - 4294967295\r\nserver side - 2\r\n\r\n\r\nAs per the spec:\r\n### [6.5. SETTINGS](https://httpwg.org/specs/rfc7540.html#SETTINGS)\r\n\r\n> SETTINGS parameters are not negotiated; they describe characteristics of the sending peer, which are used by the receiving peer. Different values for the same parameter can be advertised by each peer. For example, a client might set a high initial flow-control window, whereas **a server might set a lower value to conserve resources**.\r\n\r\n> A SETTINGS frame MUST be sent by both endpoints at the start of a connection and **MAY be sent at any other time by either endpoint over the lifetime of the connection**. Implementations MUST support all of the parameters defined by this specification.\r\n\r\n> **Each parameter in a SETTINGS frame replaces any existing value for that parameter**. Parameters are processed in the order in which they appear, and **a receiver of a SETTINGS frame does not need to maintain any state other than the current value of its parameters**. Therefore, **the value of a SETTINGS parameter is the last value that is seen by a receiver**.\r\n\r\nSounds like a bug."}, {"classified_as": "bug", "text": "**Describe the bug**\r\nWhen trying to setup authentication with Strapi and Mongo via docker-compose it fails authentication when AUTHENTICATION_DATABASE is not set. It defaults to admin for authentication database.\r\n\r\n**Steps to reproduce the behavior**\r\nFollowing this tutorial on your website:\r\nhttps://strapi.io/blog/how-to-run-a-strapi-dev-stack-with-docker-compose\r\n\r\n**Expected behavior**\r\nWhen setting the database env variables I would expect Strapi to connect to the database name that I set. This was a gotcha moment for me that I also need to set authenticationDatabase.\r\n\r\n**Possible solution**\r\nWould it be an idea to change in the strapi-connector-mongoose/lib/index.js:\r\n\r\n\r\n  if (!_.isEmpty(authenticationDatabase)) {\r\n    connectOptions.authSource = authenticationDatabase;\r\n  }\r\n\r\n\r\nto:\r\n\r\n\r\n  if (!_.isEmpty(authenticationDatabase)) {\r\n    connectOptions.authSource = authenticationDatabase;\r\n  } else {\r\n    connectOptions.authSource = database;\r\n  }\r\n\r\n\r\nThen in most use cases the authentication database defaults to the database you want to connect to.\r\n\r\n**System**\r\n- Node.js version: 12.13.0\r\n- NPM version: 6.12.0\r\n- Strapi version: 3.0.1\r\n- Database: Mongo 4.2.7\r\n- Operating system: Linux\r\n"}, {"classified_as": "bug", "text": "Example:\r\njs\r\nvar Browser = require('puppeteer').Browser;\r\nvar browser = new Browser();\r\nbrowser.newPage().then(async page => {\r\n    page.on('dialog', dialog => {\r\n        dialog.accept('test');\r\n    });\r\n    console.log(await page.evaluate(() => prompt('q?')));\r\n    browser.close();\r\n});\r\n\r\n\r\nDialog accepting/dismissing throws on error on headless: \r\n>Error: Protocol error (Page.handleJavaScriptDialog): Could not handle JavaScript dialog\r\n\r\nUpstream bug: [crbug.com/718235](http://crbug.com/718235)\r\n\r\n"}, {"classified_as": "enhancement", "text": "**Original bug ID:** 7394\n**Reporter:** bartjacobs\n**Status:** resolved (set by @xavierleroy on 2017-02-16T09:53:43Z)\n**Resolution:** fixed\n**Priority:** normal\n**Severity:** minor\n**Version:** 4.03.0\n**Target version:** 4.05.0 +dev/beta1/beta2/beta3/rc1\n**Category:** documentation\n**Related to:** #7392\n\n## Bug description\n\nThe new warning 52 documentation (Sec. 8.5.1, under Batch compilation) encourages users to catch Failure _ to detect a particular failure mode for a function they're calling. That's a bad idea, because it's too easy for the implementors of that function to inadvertently propagate a Failure, raised for another reason, from a nested call. In other words, it's a bad idea because you don't know that a Failure you catch was raised for the reason you think.\r\n\r\nIn fact, typically the documentation for standard library functions that throw Failure does not even explicitly state that the function will throw Failure *only* for the reasons stated. (See my #7392 on this.)\r\n\r\nBut even if the docs did explicitly state that, it would still be problematic because it would be hard to ensure that the implementations actually conform to the specs (and continue to do so as code evolves).\r\n\r\nI think the fix is to use functions that indicate specific conditions that users may want to detect as a special return value (e.g. None), enabled by a richer return type, e.g. 'a option instead of 'a, instead of throwing Failure.\r\n\r\nAn alternative but less advisable fix is to use functions that raise a special-purpose exception, instead of the generic Failure. However, this approach still suffers from the (smaller) risk of the exception being propagated inadvertently from a nested call.\r\n\r\nI propose that the warning 52 documentation be updated.\r\n\r\n(I also propose that variants of the standard library functions that throw Failure for specific conditions that users want to detect be provided that allow detecting such conditions through a special return value. But (just to pick one home for each work item) I propose that this latter proposal be tracked through #7392 instead of this one.)\n"}, {"classified_as": "bug", "text": "Right now, the dialog will fill the full screen regardless of whether or not it needs it. This is especially noticeable on tablets.\n\n![screenshot-2015-01-06_22 38 52 606](https://cloud.githubusercontent.com/assets/1361086/5641903/d1100b74-95f5-11e4-93a4-a9dde56a696c.png)\n![screenshot-2015-01-06_22 39 34 772](https://cloud.githubusercontent.com/assets/1361086/5641902/d1101600-95f5-11e4-99a3-2caf63cd3c56.png)\n"}, {"classified_as": "bug", "text": "Library on top, AlertDialog in lollipop on bottom\nThe ripple in the library goes into the padding, unlike the native implementation and what the design specs describe.\n\n![screenshot_2014-12-05-16-46-22](https://cloud.githubusercontent.com/assets/6379975/5326015/261d99aa-7cb6-11e4-9eea-59d94b66afe2.png)\n![screenshot_2014-12-05-16-47-20](https://cloud.githubusercontent.com/assets/6379975/5326016/261dcaec-7cb6-11e4-9305-e4152a1bb35a.png)\n"}, {"classified_as": "enhancement", "text": "I know what causes the issue, but i'm waiting for the surface cache implementation on gl before this is addressed. Basically, the game creates a large render target surface, say 2160x1440, but only renders to a 1280x720 region for example. During buffer readback, the render target dimensions given are correct, but the original texture dimensions are too large. Blitting the image to screen includes the region outside the rendered section.\n\nNoted in Mortal Kombat 2 and outrun.\n"}, {"classified_as": "bug", "text": "* **Version**: v12.12.0\r\n* **Platform**: Darwin mba4.local 18.7.0 Darwin Kernel Version 18.7.0\r\n* **Subsystem**: util.inspect\r\n\r\ngetters:true works correctly on a plain object: \r\n\r\njs\r\nconst util = require('util')\r\nutil.inspect.defaultOptions.getters = true\r\n\r\nconst object = {\r\n  get test () {\r\n    return 'test'\r\n  }\r\n}\r\nconsole.log(object)\r\n\r\n\r\nOutput: \r\n\r\n\r\n{ test: [Getter: 'test'] }\r\n\r\n\r\nBut the same operation on a class instance fails to print the getter.\r\n\r\njs\r\nclass Something {\r\n  get test () {\r\n    return 'test'\r\n  }\r\n}\r\n\r\nconst something = new Something()\r\nconsole.log(something)\r\n\r\n\r\nOutput: \r\n\r\n\r\nSomething {}\r\n\r\n\r\nThe output I expect to see is:\r\n\r\n\r\nSomething { test: [Getter: 'test'] }\r\n"}, {"classified_as": "enhancement", "text": "Since the new upgrade check (#6385) we're getting a significant flood of upgrade requests. The problem is that some clients are stuck in restart loops, for various reasons, and hammer the upgrade server. We can of course offload this in various ways (CDNs and whatnot) but it still seems like an oversight that we should handle better...\r\n\r\nServer side rate limiting at the HTTPS level isn't enormously useful as the main cost is in the TLS handshake to begin with."}, {"classified_as": "bug", "text": "### Steps to reproduce\r\n\r\n**Tell us about your environment:**\r\n\r\n* Puppeteer version: 1.6.1\r\n* Platform / OS version:  Ubuntu 14.04.1 LTS (i686)\r\n* Node.js version: 8.11.3\r\n\r\n**What steps will reproduce the problem?**\r\n\r\n1. npm i puppeteer\r\n2. \r\njs\r\nconst puppeteer = require('puppeteer');\r\nconst browser = await puppeteer.launch();\r\nconst page = await browser.newPage();\r\n\r\n\r\n**What is the expected result?**\r\n\r\nWorking chrome\r\n\r\n**What happens instead?**\r\n\r\n(node:14901) UnhandledPromiseRejectionWarning: Error: Failed to launch chrome!\r\n/var/www/spiderman/node_modules/puppeteer/.local-chromium/linux-575458/chrome-linux/chrome: 1: /var/www/spiderman/node_modules/puppeteer/.local-chromium/linux-575458/chrome-linux/chrome: Syntax error: word unexpected (expecting \")\")\r\n\r\n\r\nIf i manually run that chrome, it says cannot execute binary file: Exec format error"}, {"classified_as": "bug", "text": "# Bug Report\r\n\r\n## Steps to Reproduce\r\n\r\n1. Set the local as a storage adapter in api.php \r\n2. Upload file (For example local.jpg)\r\n3. Change the storage adapter as s3\r\n4. Upload file (For example s3.jpg)\r\n\r\n## Expected Behavior\r\n\r\nlocal.jpg should be served from the local path as the value of directus_files.storage says the local.\r\ns3.jpg should server from S3 path.\r\n\r\n## Actual Behavior\r\nlocal.jpg is trying to serve from s3, But the file is not available on s3, So getting 404  error. \r\n\r\n## Other Context & Screenshots\r\n\r\nThis behavior is also applicable in vice-versa, change in adapter from s3 to local\r\n\r\n## Technical Details\r\n\r\n- Device: Desktop\r\n- OS: macOS 10.14.5\r\n- Web Server: Apache, MAMP Pro\r\n- PHP Version: 7.2.14\r\n- Database: MySQL 5.7.25\r\n- Install Method: cloned master branch\r\n"}, {"classified_as": "bug", "text": "**Node.js version**:\r\nv9.3.0\r\n\r\n**npm version**:\r\n5.5.1\r\n**Strapi version**:\r\n3.0.0-alpha.9.2\r\n**Operating system**:\r\nmacOS High Sierra 10.13.1 \r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nFeature\r\n\r\n**What is the current behavior?**\r\nThe creation of the strapi project is done, so what do I do ?\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce the problem**\r\nN/A\r\n\r\n**What is the expected behavior?**\r\nComplet the successful onboarding message, with some info \r\n\r\nINFO (80324 on padupuy): Testing database connection...\r\nINFO (80324 on padupuy): The app has been connected to the database successfully\r\nINFO (80324 on padupuy): Copying the dashboard...\r\nINFO (80324 on padupuy): Installing dependencies...\r\nINFO (80324 on padupuy): The plugin settings-manager has been successfully installed.\r\nINFO (80324 on padupuy): The plugin content-type-builder has been successfully installed.\r\nINFO (80324 on padupuy): The plugin content-manager has been successfully installed.\r\nINFO (80324 on padupuy): The plugin users-permissions has been successfully installed.\r\nINFO (80324 on padupuy): The plugin email has been successfully installed.\r\nINFO (80324 on padupuy): The plugin analytics has been successfully installed.\r\nINFO (80324 on padupuy): Your new application awesome is ready at /path/to/awesome.\r\n\r\n\r\nWe are almost there !!!\r\ncd /path/to/awesome\r\nstrapi start\r\nOpen your browser to localhost:1337\r\nEnjoy you strapi project :)\r\n"}, {"classified_as": "enhancement", "text": "The connection / latency check in osutil doesn't use the proxy dialer, so it fails all relays with \"connection refused\" in the test phase. The actual relay code does use the proxy dialer, but that doesn't help.\n"}, {"classified_as": "bug", "text": "**Tell us about your environment:**\r\n\r\n* Puppeteer version: 1.0.0\r\n* Platform / OS version: Ubuntu 16.04\r\n* URLs (if applicable):\r\n* Node.js version: 6.12.3\r\n\r\n**What steps will reproduce the problem?**\r\n\r\n\r\nawait page.pdf({\r\n    headerTemplate: '',\r\n    footerTemplate: '',\r\n});\r\n\r\n\r\n**What is the expected result?**\r\n\r\nThe header and footer should be blank.\r\n\r\n**What happens instead?**\r\n\r\nThe default header and footer are still shown.\r\n\r\nIt seems that passing any falsey value results in the default template being used instead. I would suggest that only undefined should cause it to use the default template. Empty string, null, false and 0 should all override the default template.\r\n\r\nThanks.\r\n"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!-- =============================================================================== -->\r\n<!--  If you are not using the current Strapi release, you will be asked to update. -->\r\n<!-- Please see the wiki for guides on upgrading to the latest release. -->\r\n<!-- =============================================================================== -->\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 10.x.x -->\r\n<!-- npm 6.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\nHello and thank you for this wonderful tool.\r\nI'd just like to make one small comment.\r\n\r\n**Informations**\r\n- **Node.js version**: any\r\n- **NPM version**: any\r\n- **Strapi version**: any\r\n- **Database**: any\r\n- **Operating system**: any\r\n\r\n**What is the current behavior?**\r\n\r\nThere is a mismatch between enumeration.placeholder, which indicates a comma separation and the enumeration.rules which specify the line feeds.\r\n\r\nhttps://github.com/strapi/strapi/blob/6ec2b17e80e567728b161c9104cf895fd5204d74/packages/strapi-plugin-content-type-builder/admin/src/translations/en.json#L45\r\n\r\nand \r\n\r\nhttps://github.com/strapi/strapi/blob/6ec2b17e80e567728b161c9104cf895fd5204d74/packages/strapi-plugin-content-type-builder/admin/src/translations/en.json#L46\r\n\r\n**Steps to reproduce the problem**\r\n\r\nEdit an enumeration field.\r\n\r\n**What is the expected behavior?**\r\n\r\n\r\nEx: morning\r\nnoon\r\nevening\r\n\r\n\r\n**Suggested solutions**\r\n\r\n\r\n\"form.attribute.item.enumeration.placeholder\": \"Ex: morning\r\nnoon\r\nevening\"\r\n\r\n\r\nCheers,\r\nSteve"}, {"classified_as": "enhancement", "text": "confirmed broken:\r\n~~subscribeNewHead~~ Doesn't seem to appear broken anymore\r\n~~account.id lookups~~ Fixed by https://github.com/polkadot-js/api/pull/831/\r\n\r\n"}, {"classified_as": "enhancement", "text": "rel/details: https://github.com/playproject-io/datdot-substrate/issues/18\r\n\r\nWhen we make the same extrinsic call using multiple accounts (calling signAndSend on the same extrinsic using multiple pairs) practically simultaneously, the callback object appears to return the same events for every call - when each call should in reality return unique events.\r\n\r\nHere is the exact code where this occurs:\r\n\r\nhttps://github.com/joshua-mir/datdot-service/blob/e5ee50b3b5080c9cafaae71cae9deff2e6ec249b/index.js#L175-L228\r\n\r\nI have confirmed that we see every expected event separately in the UI - so this appears to be an issue specific to events in callbacks."}, {"classified_as": "enhancement", "text": "v1.0.0-rc  page.waitForNavigation()\r\n\r\nsetting timeout:0 should disable timeout according to the docs (meaning it never times out), but it seems to just actually set it to 0 seconds, and then promise reverts to null immediately everytime.\r\n"}, {"classified_as": "bug", "text": "Perbill - https://github.com/polkadot-js/api/blob/c42b71a6d8f892e57799f0a43d7c5e637e7d4c52/packages/types/src/Perbill.ts#L9\r\nPermill - https://github.com/polkadot-js/api/blob/c42b71a6d8f892e57799f0a43d7c5e637e7d4c52/packages/types/src/Permill.ts#L9"}, {"classified_as": "enhancement", "text": "Refs: #29222\r\n\r\nAs that PR shows, there are some unused imports that tools/check-imports.py doesn't catch because:\r\n\r\n1. They're used in comments.\r\n2. The tool doesn't match at word boundaries (e.g. FromJust is considered a use of Just.)"}, {"classified_as": "bug", "text": "PLYExporter needs to support little endian.\r\n\r\nI had to change code for that.\r\n\r\nPLYExporter.d.ts\r\nts\r\nimport { Object3D } from 'three';\r\n\r\nexport interface PLYExporterOptions {\r\n\tbinary?: boolean;\r\n\tlittleEndian?: boolean;\r\n\texcludeAttributes?: string[];\r\n}\r\n\r\nexport class PLYExporter {\r\n\r\n\tconstructor();\r\n\r\n\tparse( object: Object3D, onDone: ( res: string ) => void, options: PLYExporterOptions ): string | null;\r\n\r\n}\r\n\r\n\r\nPLYExporter.js\r\n\r\njs\r\n/**\r\n * @author Garrett Johnson / http://gkjohnson.github.io/\r\n * https://github.com/gkjohnson/ply-exporter-js\r\n *\r\n * Usage:\r\n *  var exporter = new PLYExporter();\r\n *\r\n *  // second argument is a list of options\r\n *  exporter.parse(mesh, data => console.log(data), { binary: true, excludeAttributes: [ 'color' ] });\r\n *\r\n * Format Definition:\r\n * http://paulbourke.net/dataformats/ply/\r\n */\r\n\r\nimport {\r\n\tBufferGeometry,\r\n\tMatrix3,\r\n\tVector3\r\n} from \"three\";\r\n\r\nvar PLYExporter = function () {};\r\n\r\nPLYExporter.prototype = {\r\n\r\n\tconstructor: PLYExporter,\r\n\r\n\tparse: function ( object, onDone, options ) {\r\n\r\n\t\tif ( onDone && typeof onDone === 'object' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.PLYExporter: The options parameter is now the third argument to the \"parse\" function. See the documentation for the new API.' );\r\n\t\t\toptions = onDone;\r\n\t\t\tonDone = undefined;\r\n\r\n\t\t}\r\n\r\n\t\t// Iterate over the valid meshes in the object\r\n\t\tfunction traverseMeshes( cb ) {\r\n\r\n\t\t\tobject.traverse( function ( child ) {\r\n\r\n\t\t\t\tif ( child.isMesh === true ) {\r\n\r\n\t\t\t\t\tvar mesh = child;\r\n\t\t\t\t\tvar geometry = mesh.geometry;\r\n\r\n\t\t\t\t\tif ( geometry.isGeometry === true ) {\r\n\r\n\t\t\t\t\t\tgeometry = geomToBufferGeom.get( geometry );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( geometry.isBufferGeometry === true ) {\r\n\r\n\t\t\t\t\t\tif ( geometry.getAttribute( 'position' ) !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tcb( mesh, geometry );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\t// Default options\r\n\t\tvar defaultOptions = {\r\n\t\t\tbinary: false,\r\n\t\t\texcludeAttributes: [] // normal, uv, color, index\r\n\t\t};\r\n\r\n\t\toptions = Object.assign( defaultOptions, options );\r\n\r\n\t\tvar excludeAttributes = options.excludeAttributes;\r\n\t\tvar geomToBufferGeom = new WeakMap();\r\n\t\tvar includeNormals = false;\r\n\t\tvar includeColors = false;\r\n\t\tvar includeUVs = false;\r\n\r\n\t\t// count the vertices, check which properties are used,\r\n\t\t// and cache the BufferGeometry\r\n\t\tvar vertexCount = 0;\r\n\t\tvar faceCount = 0;\r\n\t\tobject.traverse( function ( child ) {\r\n\r\n\t\t\tif ( child.isMesh === true ) {\r\n\r\n\t\t\t\tvar mesh = child;\r\n\t\t\t\tvar geometry = mesh.geometry;\r\n\r\n\t\t\t\tif ( geometry.isGeometry === true ) {\r\n\r\n\t\t\t\t\tvar bufferGeometry = geomToBufferGeom.get( geometry ) || new BufferGeometry().setFromObject( mesh );\r\n\t\t\t\t\tgeomToBufferGeom.set( geometry, bufferGeometry );\r\n\t\t\t\t\tgeometry = bufferGeometry;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geometry.isBufferGeometry === true ) {\r\n\r\n\t\t\t\t\tvar vertices = geometry.getAttribute( 'position' );\r\n\t\t\t\t\tvar normals = geometry.getAttribute( 'normal' );\r\n\t\t\t\t\tvar uvs = geometry.getAttribute( 'uv' );\r\n\t\t\t\t\tvar colors = geometry.getAttribute( 'color' );\r\n\t\t\t\t\tvar indices = geometry.getIndex();\r\n\r\n\t\t\t\t\tif ( vertices === undefined ) {\r\n\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvertexCount += vertices.count;\r\n\t\t\t\t\tfaceCount += indices ? indices.count / 3 : vertices.count / 3;\r\n\r\n\t\t\t\t\tif ( normals !== undefined ) includeNormals = true;\r\n\r\n\t\t\t\t\tif ( uvs !== undefined ) includeUVs = true;\r\n\r\n\t\t\t\t\tif ( colors !== undefined ) includeColors = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tvar includeIndices = excludeAttributes.indexOf( 'index' ) === - 1;\r\n\t\tincludeNormals = includeNormals && excludeAttributes.indexOf( 'normal' ) === - 1;\r\n\t\tincludeColors = includeColors && excludeAttributes.indexOf( 'color' ) === - 1;\r\n\t\tincludeUVs = includeUVs && excludeAttributes.indexOf( 'uv' ) === - 1;\r\n\r\n\r\n\t\tif ( includeIndices && faceCount !== Math.floor( faceCount ) ) {\r\n\r\n\t\t\t// point cloud meshes will not have an index array and may not have a\r\n\t\t\t// number of vertices that is divisble by 3 (and therefore representable\r\n\t\t\t// as triangles)\r\n\t\t\tconsole.error(\r\n\r\n\t\t\t\t'PLYExporter: Failed to generate a valid PLY file with triangle indices because the ' +\r\n\t\t\t\t'number of indices is not divisible by 3.'\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar indexByteCount = 4;\r\n\r\n\t\tvar header =\r\n\t\t\t'ply\\n' +\r\n\t\t\tformat ${ options.binary ? (options.littleEndian?'binary_little_endian':'binary_big_endian') : 'ascii' } 1.0\\n +\r\n\t\t\telement vertex ${vertexCount}\\n +\r\n\r\n\t\t\t// position\r\n\t\t\t'property float x\\n' +\r\n\t\t\t'property float y\\n' +\r\n\t\t\t'property float z\\n';\r\n\r\n\t\tif ( includeNormals === true ) {\r\n\r\n\t\t\t// normal\r\n\t\t\theader +=\r\n\t\t\t\t'property float nx\\n' +\r\n\t\t\t\t'property float ny\\n' +\r\n\t\t\t\t'property float nz\\n';\r\n\r\n\t\t}\r\n\r\n\t\tif ( includeUVs === true ) {\r\n\r\n\t\t\t// uvs\r\n\t\t\theader +=\r\n\t\t\t\t'property float s\\n' +\r\n\t\t\t\t'property float t\\n';\r\n\r\n\t\t}\r\n\r\n\t\tif ( includeColors === true ) {\r\n\r\n\t\t\t// colors\r\n\t\t\theader +=\r\n\t\t\t\t'property uchar red\\n' +\r\n\t\t\t\t'property uchar green\\n' +\r\n\t\t\t\t'property uchar blue\\n';\r\n\r\n\t\t}\r\n\r\n\t\tif ( includeIndices === true ) {\r\n\r\n\t\t\t// faces\r\n\t\t\theader +=\r\n\t\t\t\telement face ${faceCount}\\n +\r\n\t\t\t\tproperty list uchar int vertex_index\\n;\r\n\r\n\t\t}\r\n\r\n\t\theader += 'end_header\\n';\r\n\r\n\r\n\t\t// Generate attribute data\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar normalMatrixWorld = new Matrix3();\r\n\t\tvar result = null;\r\n\r\n\t\tif ( options.binary === true ) {\r\n\r\n\t\t\t// Binary File Generation\r\n\t\t\tvar headerBin = new TextEncoder().encode( header );\r\n\r\n\t\t\t// 3 position values at 4 bytes\r\n\t\t\t// 3 normal values at 4 bytes\r\n\t\t\t// 3 color channels with 1 byte\r\n\t\t\t// 2 uv values at 4 bytes\r\n\t\t\tvar vertexListLength = vertexCount * ( 4 * 3 + ( includeNormals ? 4 * 3 : 0 ) + ( includeColors ? 3 : 0 ) + ( includeUVs ? 4 * 2 : 0 ) );\r\n\r\n\t\t\t// 1 byte shape desciptor\r\n\t\t\t// 3 vertex indices at ${indexByteCount} bytes\r\n\t\t\tvar faceListLength = includeIndices ? faceCount * ( indexByteCount * 3 + 1 ) : 0;\r\n\t\t\tvar output = new DataView( new ArrayBuffer( headerBin.length + vertexListLength + faceListLength ) );\r\n\t\t\tnew Uint8Array( output.buffer ).set( headerBin, 0 );\r\n\r\n\r\n\t\t\tvar vOffset = headerBin.length;\r\n\t\t\tvar fOffset = headerBin.length + vertexListLength;\r\n\t\t\tvar writtenVertices = 0;\r\n\t\t\ttraverseMeshes( function ( mesh, geometry ) {\r\n\r\n\t\t\t\tvar vertices = geometry.getAttribute( 'position' );\r\n\t\t\t\tvar normals = geometry.getAttribute( 'normal' );\r\n\t\t\t\tvar uvs = geometry.getAttribute( 'uv' );\r\n\t\t\t\tvar colors = geometry.getAttribute( 'color' );\r\n\t\t\t\tvar indices = geometry.getIndex();\r\n\r\n\t\t\t\tnormalMatrixWorld.getNormalMatrix( mesh.matrixWorld );\r\n\r\n\t\t\t\tfor ( var i = 0, l = vertices.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvertex.x = vertices.getX( i );\r\n\t\t\t\t\tvertex.y = vertices.getY( i );\r\n\t\t\t\t\tvertex.z = vertices.getZ( i );\r\n\r\n\t\t\t\t\tvertex.applyMatrix4( mesh.matrixWorld );\r\n\r\n\r\n\t\t\t\t\t// Position information\r\n\t\t\t\t\toutput.setFloat32( vOffset, vertex.x, options.littleEndian );\r\n\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\toutput.setFloat32( vOffset, vertex.y, options.littleEndian );\r\n\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\toutput.setFloat32( vOffset, vertex.z, options.littleEndian );\r\n\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t// Normal information\r\n\t\t\t\t\tif ( includeNormals === true ) {\r\n\r\n\t\t\t\t\t\tif ( normals != null ) {\r\n\r\n\t\t\t\t\t\t\tvertex.x = normals.getX( i );\r\n\t\t\t\t\t\t\tvertex.y = normals.getY( i );\r\n\t\t\t\t\t\t\tvertex.z = normals.getZ( i );\r\n\r\n\t\t\t\t\t\t\tvertex.applyMatrix3( normalMatrixWorld ).normalize();\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, vertex.x, options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, vertex.y, options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, vertex.z, options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0, options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0, options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0, options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// UV information\r\n\t\t\t\t\tif ( includeUVs === true ) {\r\n\r\n\t\t\t\t\t\tif ( uvs != null ) {\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, uvs.getX( i ), options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, uvs.getY( i ), options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t} else if ( includeUVs !== false ) {\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0, options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0, options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Color information\r\n\t\t\t\t\tif ( includeColors === true ) {\r\n\r\n\t\t\t\t\t\tif ( colors != null ) {\r\n\r\n\t\t\t\t\t\t\toutput.setUint8( vOffset, Math.floor( colors.getX( i ) * 255 ) );\r\n\t\t\t\t\t\t\tvOffset += 1;\r\n\r\n\t\t\t\t\t\t\toutput.setUint8( vOffset, Math.floor( colors.getY( i ) * 255 ) );\r\n\t\t\t\t\t\t\tvOffset += 1;\r\n\r\n\t\t\t\t\t\t\toutput.setUint8( vOffset, Math.floor( colors.getZ( i ) * 255 ) );\r\n\t\t\t\t\t\t\tvOffset += 1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\toutput.setUint8( vOffset, 255 );\r\n\t\t\t\t\t\t\tvOffset += 1;\r\n\r\n\t\t\t\t\t\t\toutput.setUint8( vOffset, 255 );\r\n\t\t\t\t\t\t\tvOffset += 1;\r\n\r\n\t\t\t\t\t\t\toutput.setUint8( vOffset, 255 );\r\n\t\t\t\t\t\t\tvOffset += 1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( includeIndices === true ) {\r\n\r\n\t\t\t\t\t// Create the face list\r\n\r\n\t\t\t\t\tif ( indices !== null ) {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = indices.count; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\toutput.setUint8( fOffset, 3 );\r\n\t\t\t\t\t\t\tfOffset += 1;\r\n\r\n\t\t\t\t\t\t\toutput.setUint32( fOffset, indices.getX( i + 0 ) + writtenVertices, options.littleEndian );\r\n\t\t\t\t\t\t\tfOffset += indexByteCount;\r\n\r\n\t\t\t\t\t\t\toutput.setUint32( fOffset, indices.getX( i + 1 ) + writtenVertices, options.littleEndian );\r\n\t\t\t\t\t\t\tfOffset += indexByteCount;\r\n\r\n\t\t\t\t\t\t\toutput.setUint32( fOffset, indices.getX( i + 2 ) + writtenVertices, options.littleEndian );\r\n\t\t\t\t\t\t\tfOffset += indexByteCount;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = vertices.count; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\toutput.setUint8( fOffset, 3 );\r\n\t\t\t\t\t\t\tfOffset += 1;\r\n\r\n\t\t\t\t\t\t\toutput.setUint32( fOffset, writtenVertices + i, options.littleEndian );\r\n\t\t\t\t\t\t\tfOffset += indexByteCount;\r\n\r\n\t\t\t\t\t\t\toutput.setUint32( fOffset, writtenVertices + i + 1, options.littleEndian );\r\n\t\t\t\t\t\t\tfOffset += indexByteCount;\r\n\r\n\t\t\t\t\t\t\toutput.setUint32( fOffset, writtenVertices + i + 2, options.littleEndian );\r\n\t\t\t\t\t\t\tfOffset += indexByteCount;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t// Save the amount of verts we've already written so we can offset\r\n\t\t\t\t// the face index on the next mesh\r\n\t\t\t\twrittenVertices += vertices.count;\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tresult = output.buffer;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Ascii File Generation\r\n\t\t\t// count the number of vertices\r\n\t\t\tvar writtenVertices = 0;\r\n\t\t\tvar vertexList = '';\r\n\t\t\tvar faceList = '';\r\n\r\n\t\t\ttraverseMeshes( function ( mesh, geometry ) {\r\n\r\n\t\t\t\tvar vertices = geometry.getAttribute( 'position' );\r\n\t\t\t\tvar normals = geometry.getAttribute( 'normal' );\r\n\t\t\t\tvar uvs = geometry.getAttribute( 'uv' );\r\n\t\t\t\tvar colors = geometry.getAttribute( 'color' );\r\n\t\t\t\tvar indices = geometry.getIndex();\r\n\r\n\t\t\t\tnormalMatrixWorld.getNormalMatrix( mesh.matrixWorld );\r\n\r\n\t\t\t\t// form each line\r\n\t\t\t\tfor ( var i = 0, l = vertices.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvertex.x = vertices.getX( i );\r\n\t\t\t\t\tvertex.y = vertices.getY( i );\r\n\t\t\t\t\tvertex.z = vertices.getZ( i );\r\n\r\n\t\t\t\t\tvertex.applyMatrix4( mesh.matrixWorld );\r\n\r\n\r\n\t\t\t\t\t// Position information\r\n\t\t\t\t\tvar line =\r\n\t\t\t\t\t\tvertex.x + ' ' +\r\n\t\t\t\t\t\tvertex.y + ' ' +\r\n\t\t\t\t\t\tvertex.z;\r\n\r\n\t\t\t\t\t// Normal information\r\n\t\t\t\t\tif ( includeNormals === true ) {\r\n\r\n\t\t\t\t\t\tif ( normals != null ) {\r\n\r\n\t\t\t\t\t\t\tvertex.x = normals.getX( i );\r\n\t\t\t\t\t\t\tvertex.y = normals.getY( i );\r\n\t\t\t\t\t\t\tvertex.z = normals.getZ( i );\r\n\r\n\t\t\t\t\t\t\tvertex.applyMatrix3( normalMatrixWorld ).normalize();\r\n\r\n\t\t\t\t\t\t\tline += ' ' +\r\n\t\t\t\t\t\t\t\tvertex.x + ' ' +\r\n\t\t\t\t\t\t\t\tvertex.y + ' ' +\r\n\t\t\t\t\t\t\t\tvertex.z;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tline += ' 0 0 0';\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// UV information\r\n\t\t\t\t\tif ( includeUVs === true ) {\r\n\r\n\t\t\t\t\t\tif ( uvs != null ) {\r\n\r\n\t\t\t\t\t\t\tline += ' ' +\r\n\t\t\t\t\t\t\t\tuvs.getX( i ) + ' ' +\r\n\t\t\t\t\t\t\t\tuvs.getY( i );\r\n\r\n\t\t\t\t\t\t} else if ( includeUVs !== false ) {\r\n\r\n\t\t\t\t\t\t\tline += ' 0 0';\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Color information\r\n\t\t\t\t\tif ( includeColors === true ) {\r\n\r\n\t\t\t\t\t\tif ( colors != null ) {\r\n\r\n\t\t\t\t\t\t\tline += ' ' +\r\n\t\t\t\t\t\t\t\tMath.floor( colors.getX( i ) * 255 ) + ' ' +\r\n\t\t\t\t\t\t\t\tMath.floor( colors.getY( i ) * 255 ) + ' ' +\r\n\t\t\t\t\t\t\t\tMath.floor( colors.getZ( i ) * 255 );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tline += ' 255 255 255';\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvertexList += line + '\\n';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create the face list\r\n\t\t\t\tif ( includeIndices === true ) {\r\n\r\n\t\t\t\t\tif ( indices !== null ) {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = indices.count; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\tfaceList += 3 ${ indices.getX( i + 0 ) + writtenVertices };\r\n\t\t\t\t\t\t\tfaceList +=  ${ indices.getX( i + 1 ) + writtenVertices };\r\n\t\t\t\t\t\t\tfaceList +=  ${ indices.getX( i + 2 ) + writtenVertices }\\n;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = vertices.count; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\tfaceList += 3 ${ writtenVertices + i } ${ writtenVertices + i + 1 } ${ writtenVertices + i + 2 }\\n;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfaceCount += indices ? indices.count / 3 : vertices.count / 3;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\twrittenVertices += vertices.count;\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tresult = ${ header }${vertexList}${ includeIndices ? ${faceList}\\n : '\\n' };\r\n\r\n\t\t}\r\n\r\n\t\tif ( typeof onDone === 'function' ) requestAnimationFrame( () => onDone( result ) );\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n};\r\n\r\nexport { PLYExporter };\r\n\r\n\r\n\r\nPlease check and include to the upcoming release.\r\nThanks."}, {"classified_as": "bug", "text": "**Describe the bug**\r\nI noticed that the schema.graphql.js in the latest version of the User Permissions plugin is somewhat changed. The checkBadRequest function doesn't return an Apollo error anymore which results in a JWT error when the password and/or username is incorrect. \r\n\r\n**Steps to reproduce the behavior**\r\n1. Go to config/schema.graphql.js\r\n2. Go to line 8-14\r\n3. Check the throw new Error \r\n4. This used to be a throw new ApolloError\r\n\r\n**Expected behavior**\r\nA clear error message when the username and/or password is incorrect when trying to log in.\r\n\r\n**System**\r\n- Node.js version: 13.10.1\r\n- NPM version: 6.14.3\r\n- Strapi version: 3.0.0-beta.19.3\r\n- Database: MySQL / MariaDB\r\n- Operating system: MacOS\r\n"}, {"classified_as": "enhancement", "text": "Sanitizer needs TLC\r\n\r\nFix this -\r\n\r\nhttps://github.com/polkadot-js/api/commit/3d67b75059a2083ffe5757932ed2398abf27e3ce#diff-d3faa316bd5c74c6bf196aa849de6c07R26-R27\r\n\r\nIssue introduced here - \r\n\r\nhttps://github.com/polkadot-js/api/pull/2557/files#diff-9b56692be303c9c373a391e5a7a8ebbfR10783"}, {"classified_as": "enhancement", "text": "ActivityIndicator color cannot be set via CSS. For example:\n\n CSS\nActivityIndicator {\n color: red;\n}\n\n"}, {"classified_as": "enhancement", "text": "This page I found on twitter does not work and returns 502\r\nhttps://blog.strapi.io/content-internationalization-with-strapi/\r\n\r\nTwitter link:\r\nhttps://twitter.com/strapijs/status/1041613814209421313?lang=en\r\n\r\nScreenshot:\r\n![image](https://user-images.githubusercontent.com/3635348/90511259-1a1f9000-e154-11ea-952d-b674a36ff5de.png)\r\n\r\n"}, {"classified_as": "bug", "text": "Hey, is it possible to launch as a new tab in an existing profile? \r\n\r\nI have an existing session with cookies and authentication bearer, problem is that puppeteer opens a dedicated chrome without the session or profile I want. \r\n\r\nheres my code:\r\njs\r\n(async () => {\r\n  const browser = await puppeteer.launch({\r\n  \theadless: false,\r\n  \texecutablePath: '/Applications/Google Chrome.app/Contents/MacOS/Google Chrome',\r\n  \targs: ['--user-data-dir']\r\n  }); \r\n  const page = await browser.newPage();\r\n})();\r\n\r\nif i don't use executablePath it opens a whole new profile and there's no error, but when I do it opens a new window at the correct profile/session yet errors with the following:\r\n\r\n(node:26977) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code."}, {"classified_as": "enhancement", "text": "As noted in #2598. Setting the required percentage to zero disables the percentage check. But we also check for each file that there is space for the temp file. But if the temp file already exists this can fail. We should either skip if the temp file already exists or, at the very least, skip the check if the required space is set to zero.\n\n(Apart from this scenario, there may be valid cases where the disk space check just plain doesn't give accurate results and we should let the user override it.)\n"}, {"classified_as": "bug", "text": "Create GET /debug endpoint which returns the below info.\r\n\r\n1. Server OS and version\r\n2. PHP version\r\n3. MySQL version\r\n4. PHP extension (pdo, mysql, curl, gd, fileinfo, libapache2-mod-php and mbstring)\r\n5. if applicable, mod_rewrite enable.\r\n5. Public directory permission\r\n6. Log directory permission\r\n7. /public/uploads directory permission\r\n8. API version\r\n9. APP version\r\n10. Max file upload size\r\n11. Browser OS (Either server will try to detect from header or App will add in additional of the server response)\r\n12. Cache driver, if Cache enable\r\n13. Storage driver\r\n14. Log path\r\n15. App environment "}, {"classified_as": "enhancement", "text": "The child_process module allows to bypass the JavaScript validation logic and to pass a custom array into C++, which then crashes the process:\r\n\r\njs\r\nconst { spawn } = require('child_process');\r\n\r\nspawn('ls', Object.assign([], {\r\n  slice() {\r\n    return this;\r\n  },\r\n  unshift(arg) {\r\n    [].unshift.call(this, arg);\r\n    Object.defineProperty(this, '0', {\r\n      get() { throw new Error(); }\r\n    });\r\n  }\r\n}));\r\n\r\n\r\nThis should be virtually impossible to exploit, so I am not marking this as a security issue."}, {"classified_as": "bug", "text": "**Describe the bug**\r\n\r\nGraphQL Authentication confusing error message: should be just \"Forbidden\"\r\n\r\n**Steps to reproduce the behavior**\r\n1. Set DB to MongoDB\r\n2. Run any authenticated GraphQL query with Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVkN2RjY2Y4NzQyODEzNDJhNDliZmQ0ZCIsImlhdCI6MTU2ODUyNjgwMSwiZXhwIjoxNTcxMTE4ODAxfQ.VZGU5Nb91Ac-lF16XeqcbopM3HawTMcVGY61QcwJ8go\r\n\r\n3. Error:\r\n\r\n\r\n[GraphQL error]: Message: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"UsersPermissionsUser\", Location: [object Object], Path: projects\r\nGraphQL error occurred [getDataFromTree] { Error: GraphQL error: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"UsersPermissionsUser\"\r\n    at new ApolloError (d:\\project_amanah\\soluvas\\appstudio\\node_modules\\apollo-client\\bundle.umd.js:92:26)\r\n    at d:\\project_amanah\\soluvas\\appstudio\\node_modules\\apollo-client\\bundle.umd.js:1587:34\r\n    at d:\\project_amanah\\soluvas\\appstudio\\node_modules\\apollo-client\\bundle.umd.js:2007:15\r\n    at Set.forEach (<anonymous>)\r\n    at d:\\project_amanah\\soluvas\\appstudio\\node_modules\\apollo-client\\bundle.umd.js:2005:26\r\n    at Map.forEach (<anonymous>)\r\n    at QueryManager.broadcastQueries (d:\\project_amanah\\soluvas\\appstudio\\node_modules\\apollo-client\\bundle.umd.js:2003:20)\r\n    at d:\\project_amanah\\soluvas\\appstudio\\node_modules\\apollo-client\\bundle.umd.js:2130:19\r\n    at Object.next (d:\\project_amanah\\soluvas\\appstudio\\node_modules\\zen-observable\\lib\\Observable.js:308:23)\r\n    at notifySubscription (d:\\project_amanah\\soluvas\\appstudio\\node_modules\\zen-observable\\lib\\Observable.js:130:18)\r\n    at onNotify (d:\\project_amanah\\soluvas\\appstudio\\node_modules\\zen-observable\\lib\\Observable.js:165:3)\r\n    at SubscriptionObserver.next (d:\\project_amanah\\soluvas\\appstudio\\node_modules\\zen-observable\\lib\\Observable.js:219:7)\r\n    at d:\\project_amanah\\soluvas\\appstudio\\node_modules\\apollo-client\\bundle.umd.js:1101:36\r\n    at Set.forEach (<anonymous>)\r\n    at Object.next (d:\\project_amanah\\soluvas\\appstudio\\node_modules\\apollo-client\\bundle.umd.js:1100:21)\r\n    at notifySubscription (d:\\project_amanah\\soluvas\\appstudio\\node_modules\\zen-observable\\lib\\Observable.js:130:18)\r\n  graphQLErrors:\r\n   [ { message:\r\n        'Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"UsersPermissionsUser\"',\r\n       locations: [Array],\r\n       path: [Array],\r\n       extensions: [Object] } ],\r\n  networkError: null,\r\n  message:\r\n   'GraphQL error: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"UsersPermissionsUser\"',\r\n  extraInfo: undefined }\r\n\r\n\r\n**Expected behavior**\r\n\r\nIf JWT sub and User ID in database doesn't match type, simply give Forbidden error.\r\n\r\n**System**\r\n- Node.js version: 10.16.3\r\n- NPM version: 6.11.3\r\n- Strapi version: 3.0.0-beta.16.3\r\n- Database: MongoDB\r\n- Operating system: Windows 10 1903\r\n"}, {"classified_as": "enhancement", "text": "**Original bug ID:** 7392\n**Reporter:** bartjacobs\n**Status:** resolved (set by @xavierleroy on 2016-12-07T18:14:17Z)\n**Resolution:** duplicate\n**Priority:** normal\n**Severity:** minor\n**Version:** 4.03.0\n**Category:** documentation\n**Related to:** #7394\n**Monitored by:** @gasche\n\n## Bug description\n\nSince #254 (Warning on fragile literals in constructor argument patterns) (released in OCaml 4.03), the documentation for int_of_string, which says \"Raise Failure \"int_of_string\" if the given string is not a valid representation of an integer, or if the integer represented exceeds the range of integers representable in type int.\", is inconsistent with the OCaml implementation (specifically, file typing/predef.ml), which declares exception Failure with the warn_on_literal_pattern attribute. The documentation for int_of_string is pretty unequivocal that the behavior of int_of_string in case of malformed input is exactly to raise the exception Failure \"int_of_string\". The warn_on_literal_pattern attribute, on the other hand, suggests that the value of the argument of Failure should not be relied upon, i.e. that instead of throwing Failure \"int_of_string\", int_of_string might in a future OCaml release throw something else in case of malformed input.\r\n\r\nThis is problematic for someone trying to write code that uses int_of_string and that does something other than propagating the exception in case of malformed input.\r\n\r\nThe warning 52 documentation (Sec. 8.5.1, in the Batch compilation chapter) suggests that this person should simply catch any exception that matches Failure _.\r\n\r\nHowever, this raises the following question: What if int_of_string throws a Failure exception for a reason other than malformed input? Perhaps, for int_of_string this is a rather far-fetched scenario, but (without looking at the source code) it is not entirely inconceivable. And for some of the other similar cases, such as int_of_big_int, with presumably a more complex implementation with more failure modes, this is somewhat more conceivable still. And in any case, the documentation for these functions does not state that this will not happen.\r\n\r\nClient code should propagate such an exception instead of treating it as if it indicated malformed input.\r\n\r\nTo fix this problem in a backward-compatible way, I suggest to update the documentation for int_of_string and similar functions (including int_of_big_int), by adding the sentence \"Do not raise a Failure for any other reason.\" Another way to put it is to replace \"Raise Failure \"int_of_string\" if the given string is not a valid representation of an integer, or if the integer represented exceeds the range of integers representable in type int.\" by \"Raise Failure if (and only if) the given string is not a valid representation of an integer, or if the integer represented exceeds the range of integers representable in type int.\" (while of course continuing to raise only Failure \"int_of_string\" for backward compatibility).\r\n\r\n(Of course, one should also check that the current implementations of these functions do indeed not throw Failure for other reasons!)\r\n\r\n(Note: a (much less severe) lack of clarity in the documentation of int_of_string and similar functions existed already before OCaml 4.03: it did not explicitly guarantee that it would not throw Failure \"int_of_string\" for a reason other than malformed input. To see how this is not entirely inconceivable, one could vaguely imagine an implementation that would in some cases directly or indirectly perform a nested int_of_string call with some other input. Again, this is more conceivable with functions that are more complex than int_of_string. But again, the main argument is not about whether it is conceivable, but about whether the documentation should be explicit about it, which seems a clear \"yes\" since people do rely on it and furthermore it's not hard to fix.)\r\n\r\n((Even more parenthesized note: for any function with a non-trivial implementation that involves nested function calls, it is not actually easy to guarantee that the function will *not* throw any given exception, especially if the exception is a generic one such as Failure. This suggests that attaching any postcondition (other than \"true\") to a function raising an exception is dubious, and instead the function's return type should probably be enriched (from 'a to 'a option or 'a + string) so that the exceptional condition can be indicated as a special return value. A client who wishes to ignore the exceptional case can easily turn the special return value into an exception using a partial match (or a helper function that raises an appropriate exception). Note that this is pretty much how error handling is done in Erlang. So, perhaps a better solution would be to introduce a new function, perhaps called int_option_of_string, that returns an int option.))\n\n## Additional information\n\n(I put Severity \"minor\" because this issue is unlikely to lead to many problems at run time, but on the other hand I think this is currently impacting many people who care about writing clearly correct code.)\n"}, {"classified_as": "bug", "text": "<!--\r\nThank you for reporting a possible bug in Node.js.\r\n\r\nPlease fill in as much of the template below as you can.\r\n\r\nVersion: output of node -v\r\nPlatform: output of uname -a (UNIX), or version and 32 or 64-bit (Windows)\r\nSubsystem: if known, please specify the affected core module name\r\n\r\nIf possible, please provide code that demonstrates the problem, keeping it as\r\nsimple and free of external dependencies as you can.\r\n-->\r\n\r\n* **Version**: master\r\n* **Platform**: linux / all\r\n* **Subsystem**: process\r\n\r\n<!-- Please provide more details below this comment. -->\r\n\r\nThis is opened for 3 reasons:\r\n - help progress #23277\r\n - gather intelligence on internal memory management where I may have lack of clarity\r\n - help clearly define process's memory usage - for future support and documentation (specifically for cloud workloads where usage has bearings on billing)\r\n\r\n$ cat foo.cc\r\nc\r\n#include <stdlib.h>\r\n#include <unistd.h>\r\n#include <stdio.h>\r\n#include <malloc.h>\r\n\r\nvoid *list[1024 * 1024];\r\n\r\nint r() {\r\n  // add a one so as to never return 0\r\n  return 1 + random() % 137;\r\n}\r\n\r\nint main() {\r\n  // use calloc so that the pages are 'touched'.\r\n  for(int i=0;i< 1024 * 1024;i++)\r\n    list[i] = calloc(r(), 1);\r\n  for(int i=0;i< 1024 * 1024;i++)\r\n    free(list[i]);\r\n  sleep(60 * 1000);\r\n}\r\n\r\n\r\nA linux (RHEL 8) observation:\r\nThe static memory usage (without the callocs) of this code is 12 MB\r\n - 8 MB for the array (64-bit, so 8 * 1MB)\r\n - 4 MB for a.out + libc + ...\r\n\r\ntop output after the program runs and sleeps for enough time:\r\n\r\n$ top -p 6777\r\n  PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND                            \r\n 6777 root      20   0   99772  96344    932 S   0.0   5.1   0:00.16 a.out \r\n\r\n$ cat /proc/meminfo | grep MemFree\r\nMemFree:         1637932 kB\r\n$\r\n\r\n\r\ntop output after the system is heavily loaded:\r\n\r\ntop -p 6777\r\n  PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND                            \r\n 6777 root      20   0   99772      0      0 S   0.0   0.0   0:00.16 a.out \r\n$ cat /proc/meminfo | grep MemFree\r\nMemFree:           70444 kB\r\n\r\n\r\npmap shows 85 MB is still mapped into the process, matching with top.\r\n\r\n\r\n0000000002c7c000  87384K rw---   [ anon ]\r\n\r\n\r\nObservations:\r\n - rss stays high (~ virtual memory) for ever, if there is no load in the system\r\n - virtual memory stays high even after all the allocated memory is freed.\r\n - all numbers tally: 85 for the dynamic memory + 12 for the static part = 97, as shown in top\r\n\r\n\r\nProblems / questions:\r\n - what is a meaningful measure of program's memory usage? we can say these are the values we get from the OS, and leave it for the user to interpret those, but that does not help them enough. rss is a function of not only on the program's activity with memory, but also to other parts of the system. virtual memory on the other hand was apparently the sum of allocations (malloc/calloc/mmap...) in the program, but looks like it is not, and depends on the glibc's memory management implementations and its discretion as to when to retain and when to release chunks back to OS, and as to what size of chunks qualify for removal, and may be also depend on the memory usage hueristics as well! When I used 4K chunks for calloc/free, I got different results.\r\n\r\nIn Cloud workloads this has implications. A user would want to minimize memory tagged against their process and would do everything in their application to achieve that, but due the dependency on the system load and allocation caching behavior, this would not translate well?\r\n\r\n - memory leak definition becomes loose and detection becomes less comprehensive. Plurality of tools profiling the app from different angles would bring-in mutually contradicting results? For example: in a batch process, a code that genuinely leaks an MB versus an MB that is cached in malloc arenas - what is the difference from outside, and why should I worry more about the former and not worry about the later?\r\n\r\n - I read about wss (working set size) - that is a true measure of how much memory the program is actively engaged in. The idea looks like tracking paging-in; as that would be a true reflection of the program's needs. I don't find an API for this, nor a platform-neutral way to obtain this. Even if we could, this has an issue - the value is transient, as it depends on the history of usage, not the current state?"}, {"classified_as": "enhancement", "text": "Having error TS4020: 'extends' clause of exported class '...' has or is using private name 'EnumConstructor'. when i tried to create a class via extends Enum.with(...)\r\n\r\nexport EnumConstructor should solve my problem.\r\n"}, {"classified_as": "enhancement", "text": "Generated metadata is not updated during subsequent builds which makes newly added '.aar' dependencies unreachable through the JS layer.\n"}, {"classified_as": "enhancement", "text": "It only raises the propertyChange event (inherited from Observable) for the length property. But is should also raise the 'change' event, since widgets such as the ListView listen for the change event in order to refresh their UI.\n"}, {"classified_as": "enhancement", "text": "if using ApiPromise, it can be easily reproduced by executing await api.derive.chain.bestNumber() and (await api.rpc.chain.getHeader()).blockNumber repeatedly.\r\n\r\nI think the current cache solution works only for rxjs because an observable is a stream, you still can get latest from it even you hold a cached one. but for promise it's one shot thing.\r\n\r\nwhen the observable is toPromised, it will be terminated after first result, makes caching it meaningless."}, {"classified_as": "enhancement", "text": "https://polkadot.js.org/api/types/\r\n\r\nClick links on one of the type throws some error on js console. Right click open in new window gives a broken md file https://polkadot.js.org/api/types/classes/_type_accountid_.accountid.md"}, {"classified_as": "enhancement", "text": "### Issue Description\r\n\r\nRunning parse in express app, basic configuration on MacBook Air start use node app.js, starts up fine.\r\n\r\nDo Ctrl+C to stop, parse does not stop\r\n\r\n### Steps to reproduce\r\n\r\nStart Parse from command line using node app.js\r\nTry Ctrl+C.\r\n\r\n#### Expected Results\r\n\r\nParse/express to showdown\r\n\r\n#### Actual Outcome\r\n\r\nNo response, app stays running\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 2.3.8\r\n  - Operating System:     OS X 10.12.4/ Ubuntu 16.04 LTS\r\n  - Hardware:            Macbook Air/ AWS EC2\r\n  - Localhost or remote server? Both\r\n\r\n- **Database**\r\n  - MongoDB version: 3.4\r\n  - Storage engine:  Wired Tiger\r\n  - Hardware:        Macbook/ EC2\r\n  - Localhost or remote server? AWS/Local\r\n\r\n### Logs/Trace\r\n\r\nexpress:application set \"x-powered-by\" to true +0ms\r\n  express:application set \"etag\" to 'weak' +5ms\r\n  express:application set \"etag fn\" to [Function: wetag] +3ms\r\n  express:application set \"env\" to 'development' +0ms\r\n  express:application set \"query parser\" to 'extended' +0ms\r\n  express:application set \"query parser fn\" to [Function: parseExtendedQueryString] +1ms\r\n  express:application set \"subdomain offset\" to 2 +0ms\r\n  express:application set \"trust proxy\" to false +0ms\r\n  express:application set \"trust proxy fn\" to [Function: trustNone] +1ms\r\n  express:application booting in development mode +0ms\r\n  express:application set \"view\" to [Function: View] +0ms\r\n  express:application set \"views\" to '/Users/craig/Code/webApps/####/views' +1ms\r\n  express:application set \"jsonp callback name\" to 'callback' +0ms\r\n  express:router:route new '/files/:appId/:filename' +1ms\r\n  express:router:layer new '/files/:appId/:filename' +1ms\r\n  express:router:route get '/files/:appId/:filename' +2ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/files' +1ms\r\n  express:router:layer new '/files' +0ms\r\n  express:router:route post '/files' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/files/:filename' +24ms\r\n  express:router:layer new '/files/:filename' +0ms\r\n  express:router:route post '/files/:filename' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route post '/files/:filename' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route post '/files/:filename' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route post '/files/:filename' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/files/:filename' +0ms\r\n  express:router:layer new '/files/:filename' +0ms\r\n  express:router:route delete '/files/:filename' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route delete '/files/:filename' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route delete '/files/:filename' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route delete '/files/:filename' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' query +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' expressInit +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' allowCrossDomain +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' router +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/health' <anonymous> +1ms\r\n  express:router:layer new '/health' +1ms\r\n  express:router:layer new '/apps/:appId/verify_email' +4ms\r\n  express:router:layer new '/apps/choose_password' +1ms\r\n  express:router:layer new '/apps/:appId/request_password_reset' +0ms\r\n  express:router:layer new '/apps/:appId/request_password_reset' +0ms\r\n  express:router use '/apps' serveStatic +1ms\r\n  express:router:layer new '/apps' +0ms\r\n  express:router:route new '/apps/:appId/verify_email' +1ms\r\n  express:router:layer new '/apps/:appId/verify_email' +1ms\r\n  express:router:route get '/apps/:appId/verify_email' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/apps/choose_password' +0ms\r\n  express:router:layer new '/apps/choose_password' +0ms\r\n  express:router:route get '/apps/choose_password' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/apps/:appId/request_password_reset' +0ms\r\n  express:router:layer new '/apps/:appId/request_password_reset' +0ms\r\n  express:router:route post '/apps/:appId/request_password_reset' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/apps/:appId/request_password_reset' +0ms\r\n  express:router:layer new '/apps/:appId/request_password_reset' +0ms\r\n  express:router:route get '/apps/:appId/request_password_reset' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' router +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' urlencodedParser +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' router +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router use '/' jsonParser +2ms\r\n  express:router:layer new '/' +1ms\r\n  express:router use '/' allowCrossDomain +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' allowMethodOverride +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' handleParseHeaders +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:layer new '/classes/:className' +1ms\r\n  express:router:layer new '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/classes/:className' +0ms\r\n  express:router:layer new '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/users' +1ms\r\n  express:router:layer new '/users' +0ms\r\n  express:router:layer new '/users/me' +0ms\r\n  express:router:layer new '/users/:objectId' +0ms\r\n  express:router:layer new '/users/:objectId' +0ms\r\n  express:router:layer new '/users/:objectId' +0ms\r\n  express:router:layer new '/login' +1ms\r\n  express:router:layer new '/logout' +0ms\r\n  express:router:layer new '/requestPasswordReset' +0ms\r\n  express:router:layer new '/verificationEmailRequest' +0ms\r\n  express:router:layer new '/sessions/me' +0ms\r\n  express:router:layer new '/sessions' +1ms\r\n  express:router:layer new '/sessions/:objectId' +0ms\r\n  express:router:layer new '/sessions' +0ms\r\n  express:router:layer new '/sessions/:objectId' +0ms\r\n  express:router:layer new '/sessions/:objectId' +0ms\r\n  express:router:layer new '/upgradeToRevocableSession' +1ms\r\n  express:router:layer new '/roles' +1ms\r\n  express:router:layer new '/roles/:objectId' +1ms\r\n  express:router:layer new '/roles' +1ms\r\n  express:router:layer new '/roles/:objectId' +1ms\r\n  express:router:layer new '/roles/:objectId' +0ms\r\n  express:router:layer new '/events/AppOpened' +1ms\r\n  express:router:layer new '/events/:eventName' +0ms\r\n  express:router:layer new '/installations' +1ms\r\n  express:router:layer new '/installations/:objectId' +1ms\r\n  express:router:layer new '/installations' +0ms\r\n  express:router:layer new '/installations/:objectId' +0ms\r\n  express:router:layer new '/installations/:objectId' +0ms\r\n  express:router:layer new '/functions/:functionName' +1ms\r\n  express:router:layer new '/jobs/:jobName' +1ms\r\n  express:router:layer new '/jobs' +1ms\r\n  express:router:layer new '/schemas' +1ms\r\n  express:router:layer new '/schemas/:className' +0ms\r\n  express:router:layer new '/schemas' +1ms\r\n  express:router:layer new '/schemas/:className' +0ms\r\n  express:router:layer new '/schemas/:className' +0ms\r\n  express:router:layer new '/schemas/:className' +1ms\r\n  express:router:layer new '/push' +1ms\r\n  express:router:layer new '/scriptlog' +0ms\r\n  express:router:layer new '/validate_purchase' +4ms\r\n  express:router:layer new '/serverInfo' +1ms\r\n  express:router:layer new '/config' +1ms\r\n  express:router:layer new '/config' +0ms\r\n  express:router:layer new '/purge/:className' +1ms\r\n  express:router:layer new '/hooks/functions' +0ms\r\n  express:router:layer new '/hooks/triggers' +0ms\r\n  express:router:layer new '/hooks/functions/:functionName' +1ms\r\n  express:router:layer new '/hooks/triggers/:className/:triggerName' +0ms\r\n  express:router:layer new '/hooks/functions' +0ms\r\n  express:router:layer new '/hooks/triggers' +0ms\r\n  express:router:layer new '/hooks/functions/:functionName' +1ms\r\n  express:router:layer new '/hooks/triggers/:className/:triggerName' +0ms\r\n  express:router:layer new '/cloud_code/jobs' +0ms\r\n  express:router:layer new '/batch' +1ms\r\n  express:router:route new '/classes/:className' +0ms\r\n  express:router:layer new '/classes/:className' +0ms\r\n  express:router:route get '/classes/:className' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/classes/:className/:objectId' +0ms\r\n  express:router:route get '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/classes/:className' +0ms\r\n  express:router:layer new '/classes/:className' +0ms\r\n  express:router:route post '/classes/:className' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/classes/:className/:objectId' +1ms\r\n  express:router:layer new '/classes/:className/:objectId' +0ms\r\n  express:router:route put '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/classes/:className/:objectId' +0ms\r\n  express:router:route delete '/classes/:className/:objectId' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/users' +0ms\r\n  express:router:layer new '/users' +0ms\r\n  express:router:route get '/users' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/users' +0ms\r\n  express:router:layer new '/users' +1ms\r\n  express:router:route post '/users' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/users/me' +0ms\r\n  express:router:layer new '/users/me' +0ms\r\n  express:router:route get '/users/me' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/users/:objectId' +1ms\r\n  express:router:layer new '/users/:objectId' +0ms\r\n  express:router:route get '/users/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/users/:objectId' +0ms\r\n  express:router:layer new '/users/:objectId' +0ms\r\n  express:router:route put '/users/:objectId' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/users/:objectId' +0ms\r\n  express:router:layer new '/users/:objectId' +0ms\r\n  express:router:route delete '/users/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/login' +1ms\r\n  express:router:layer new '/login' +0ms\r\n  express:router:route get '/login' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/logout' +2ms\r\n  express:router:layer new '/logout' +0ms\r\n  express:router:route post '/logout' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/requestPasswordReset' +0ms\r\n  express:router:layer new '/requestPasswordReset' +0ms\r\n  express:router:route post '/requestPasswordReset' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/verificationEmailRequest' +0ms\r\n  express:router:layer new '/verificationEmailRequest' +1ms\r\n  express:router:route post '/verificationEmailRequest' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/sessions/me' +0ms\r\n  express:router:layer new '/sessions/me' +0ms\r\n  express:router:route get '/sessions/me' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/sessions' +0ms\r\n  express:router:layer new '/sessions' +16ms\r\n  express:router:route get '/sessions' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/sessions/:objectId' +0ms\r\n  express:router:layer new '/sessions/:objectId' +0ms\r\n  express:router:route get '/sessions/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/sessions' +1ms\r\n  express:router:layer new '/sessions' +0ms\r\n  express:router:route post '/sessions' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/sessions/:objectId' +1ms\r\n  express:router:layer new '/sessions/:objectId' +0ms\r\n  express:router:route put '/sessions/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/sessions/:objectId' +1ms\r\n  express:router:layer new '/sessions/:objectId' +0ms\r\n  express:router:route delete '/sessions/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/upgradeToRevocableSession' +0ms\r\n  express:router:layer new '/upgradeToRevocableSession' +0ms\r\n  express:router:route post '/upgradeToRevocableSession' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/roles' +0ms\r\n  express:router:layer new '/roles' +0ms\r\n  express:router:route get '/roles' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/roles/:objectId' +0ms\r\n  express:router:layer new '/roles/:objectId' +0ms\r\n  express:router:route get '/roles/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/roles' +1ms\r\n  express:router:layer new '/roles' +0ms\r\n  express:router:route post '/roles' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/roles/:objectId' +0ms\r\n  express:router:layer new '/roles/:objectId' +0ms\r\n  express:router:route put '/roles/:objectId' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/roles/:objectId' +0ms\r\n  express:router:layer new '/roles/:objectId' +0ms\r\n  express:router:route delete '/roles/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/events/AppOpened' +1ms\r\n  express:router:layer new '/events/AppOpened' +0ms\r\n  express:router:route post '/events/AppOpened' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/events/:eventName' +1ms\r\n  express:router:layer new '/events/:eventName' +0ms\r\n  express:router:route post '/events/:eventName' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/installations' +2ms\r\n  express:router:layer new '/installations' +1ms\r\n  express:router:route get '/installations' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/installations/:objectId' +0ms\r\n  express:router:layer new '/installations/:objectId' +1ms\r\n  express:router:route get '/installations/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/installations' +0ms\r\n  express:router:layer new '/installations' +0ms\r\n  express:router:route post '/installations' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/installations/:objectId' +0ms\r\n  express:router:layer new '/installations/:objectId' +1ms\r\n  express:router:route put '/installations/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/installations/:objectId' +0ms\r\n  express:router:layer new '/installations/:objectId' +0ms\r\n  express:router:route delete '/installations/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/functions/:functionName' +1ms\r\n  express:router:layer new '/functions/:functionName' +0ms\r\n  express:router:route post '/functions/:functionName' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/jobs/:jobName' +0ms\r\n  express:router:layer new '/jobs/:jobName' +1ms\r\n  express:router:route post '/jobs/:jobName' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/jobs' +1ms\r\n  express:router:layer new '/jobs' +0ms\r\n  express:router:route post '/jobs' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/schemas' +1ms\r\n  express:router:layer new '/schemas' +0ms\r\n  express:router:route get '/schemas' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/schemas/:className' +1ms\r\n  express:router:layer new '/schemas/:className' +0ms\r\n  express:router:route get '/schemas/:className' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/schemas' +1ms\r\n  express:router:layer new '/schemas' +0ms\r\n  express:router:route post '/schemas' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/schemas/:className' +0ms\r\n  express:router:layer new '/schemas/:className' +0ms\r\n  express:router:route post '/schemas/:className' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/schemas/:className' +1ms\r\n  express:router:layer new '/schemas/:className' +0ms\r\n  express:router:route put '/schemas/:className' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/schemas/:className' +0ms\r\n  express:router:layer new '/schemas/:className' +1ms\r\n  express:router:route delete '/schemas/:className' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/push' +0ms\r\n  express:router:layer new '/push' +1ms\r\n  express:router:route post '/push' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/scriptlog' +0ms\r\n  express:router:layer new '/scriptlog' +0ms\r\n  express:router:route get '/scriptlog' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/validate_purchase' +0ms\r\n  express:router:layer new '/validate_purchase' +0ms\r\n  express:router:route post '/validate_purchase' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/serverInfo' +0ms\r\n  express:router:layer new '/serverInfo' +0ms\r\n  express:router:route get '/serverInfo' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/config' +0ms\r\n  express:router:layer new '/config' +0ms\r\n  express:router:route get '/config' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/config' +0ms\r\n  express:router:layer new '/config' +1ms\r\n  express:router:route put '/config' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/purge/:className' +0ms\r\n  express:router:layer new '/purge/:className' +0ms\r\n  express:router:route delete '/purge/:className' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/functions' +1ms\r\n  express:router:layer new '/hooks/functions' +0ms\r\n  express:router:route get '/hooks/functions' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/triggers' +0ms\r\n  express:router:layer new '/hooks/triggers' +0ms\r\n  express:router:route get '/hooks/triggers' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/functions/:functionName' +0ms\r\n  express:router:layer new '/hooks/functions/:functionName' +0ms\r\n  express:router:route get '/hooks/functions/:functionName' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/triggers/:className/:triggerName' +0ms\r\n  express:router:layer new '/hooks/triggers/:className/:triggerName' +1ms\r\n  express:router:route get '/hooks/triggers/:className/:triggerName' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/functions' +0ms\r\n  express:router:layer new '/hooks/functions' +0ms\r\n  express:router:route post '/hooks/functions' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/triggers' +0ms\r\n  express:router:layer new '/hooks/triggers' +0ms\r\n  express:router:route post '/hooks/triggers' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/functions/:functionName' +1ms\r\n  express:router:layer new '/hooks/functions/:functionName' +0ms\r\n  express:router:route put '/hooks/functions/:functionName' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/triggers/:className/:triggerName' +1ms\r\n  express:router:layer new '/hooks/triggers/:className/:triggerName' +0ms\r\n  express:router:route put '/hooks/triggers/:className/:triggerName' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/cloud_code/jobs' +0ms\r\n  express:router:layer new '/cloud_code/jobs' +0ms\r\n  express:router:route get '/cloud_code/jobs' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/batch' +0ms\r\n  express:router:layer new '/batch' +0ms\r\n  express:router:route post '/batch' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router use '/' router +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' handleParseErrors +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:application set \"x-powered-by\" to true +1ms\r\n  express:application set \"etag\" to 'weak' +0ms\r\n  express:application set \"etag fn\" to [Function: wetag] +0ms\r\n  express:application set \"env\" to 'development' +2ms\r\n  express:application set \"query parser\" to 'extended' +1ms\r\n  express:application set \"query parser fn\" to [Function: parseExtendedQueryString] +0ms\r\n  express:application set \"subdomain offset\" to 2 +1ms\r\n  express:application set \"trust proxy\" to false +0ms\r\n  express:application set \"trust proxy fn\" to [Function: trustNone] +0ms\r\n  express:application booting in development mode +0ms\r\n  express:application set \"view\" to [Function: View] +1ms\r\n  express:application set \"views\" to '/Users/craig/Code/webApps/#####/views' +0ms\r\n  express:application set \"jsonp callback name\" to 'callback' +0ms\r\n  express:application set \"port\" to '3000' +0ms\r\n  express:router use '/' query +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router use '/' expressInit +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:application .use app under / +0ms\r\n  express:router use '/' mounted_app +0ms\r\n  express:router:layer new '/' +1ms\r\n\u2713 App is running at http://localhost:3000 in development mode\r\n  Press CTRL-C to stop\r\n\r\n^C^C^C^C^C^C^C^C^C^C^C^C^C^C"}, {"classified_as": "enhancement", "text": "## Motivation\r\nWhen using the MLflowCallback it is possible that the user added user_attrs (like lists of float) that are longer then 5000 characters when converted to a str. This causes problems with MLflow which limits the length to 5000. See example below:\r\n\r\n bash\r\n[...]\r\n  File \"/home/smay/miniconda3/envs/py38/lib/python3.8/site-packages/mlflow/utils/validation.py\", line 136, in _validate_length_limit\r\n    raise MlflowException(\r\nmlflow.exceptions.MlflowException: Tag value '[0.8562690322984875, 0.8544098885636596, 0.8544098885636596, 0.8544098885636596, 0.8544098885636596, 0.859181214773054, 0.86273086038245, 0.86273086038245, 0.86273086038245, 0.86273086038245, 0.86273086038245, 0.8562690322984875, 0.8544098885636596, ' had length 5276, which exceeded length limit of 5000\r\n\r\n\r\n## Description\r\nI suggest to check the strings if they are len() > 5000 and cut them if needed. If this happens a warning should be printed.\r\n\r\nI can provide a PR if wanted. Just give me feedback to my proposal please.\r\n"}, {"classified_as": "bug", "text": "As you can see in the following image, axis labels overlap when parameter names are too long. I think we can solve this issue if we limit the maximum length of the labels and/or tilt the labels.\r\n\r\n![newplot (39)](https://user-images.githubusercontent.com/3255979/66977250-19efd780-f0e0-11e9-87ba-a6616083da31.png)\r\n\r\n**Conditions**\r\n- Optuna version: 0.17.1\r\n- Python version: 3.7.2\r\n- OS: macOS 10.13\r\n\r\n**Code to reproduce**\r\n\r\npython\r\nimport optuna\r\n\r\ndef objective(trial):\r\n    x = trial.suggest_uniform('x' * 100, -10, 10)\r\n    y = trial.suggest_uniform('y' * 100, -10, 10)\r\n    return x - y\r\n\r\nstudy = optuna.create_study()\r\nstudy.optimize(objective, n_trials=20)\r\n\r\noptuna.visualization.plot_parallel_coordinate(study)\r\n"}, {"classified_as": "enhancement", "text": "symlinks created on a Linux machine are being removed by a Windows machine. Syncthing used to warn it cannot sync it, but for a while now this is no longer true.\r\n\r\nThe links are within the repository, so are supported (or at least used to be). Even if I forget to run as admin in the Windows machine, I do not want it to delete files! In any case I tested with admin as well.\r\n\r\nI would be happy run a special debug mode or provide whatever other info is needed,\r\nthanks"}, {"classified_as": "bug", "text": "**Informations**\r\n- **Node.js version**: v9.11.1\r\n- **npm version**: 5.6.0\r\n- **Strapi version**: 3.0.0-alpha.12.1.2\r\n- **Database**: 10.2.14-MariaDB\r\n- **Operating system**: Ubuntu 16.04 LTS\r\n\r\n**What is the current behavior?**\r\nWhen creating a new content type the adminUI still states to create the table manually: \r\n\r\n![image](https://user-images.githubusercontent.com/8593673/39623958-46a34fe6-4f4c-11e8-869e-1054c6853405.png)\r\n\r\n**Steps to reproduce the problem**\r\nSetup a new strapi instance with mysql, create a new content type\r\n\r\n**What is the expected behavior?**\r\nMessage should not show, as it is no longer required.\r\n\r\n**Suggested solutions**\r\nRemove message\r\n\r\n- [x] I'm sure that this issue hasn't already been referenced\r\n"}, {"classified_as": "bug", "text": "I wrote a complete description of the problem in this thread: https://discourse.threejs.org/t/error-in-pdb-loader/14648 "}, {"classified_as": "bug", "text": "<!--\r\nThank you for reporting a possible bug in Node.js.\r\n\r\nPlease fill in as much of the template below as you can.\r\n\r\nVersion: output of node -v\r\nPlatform: output of uname -a (UNIX), or version and 32 or 64-bit (Windows)\r\nSubsystem: if known, please specify the affected core module name\r\n\r\nIf possible, please provide code that demonstrates the problem, keeping it as\r\nsimple and free of external dependencies as you can.\r\n-->\r\n\r\n* **Version**:\r\n\r\n13.3.0\r\n\r\n* **Platform**:\r\n\r\nLinux\r\n\r\n* **Subsystem**:\r\n\r\nDebian\r\n\r\n<!-- Please provide more details below this comment. -->\r\n\r\nIf I were to create a \"server\" for IPC using a named pipe like:\r\n\r\n\r\nconst ipc_server = net.createServer((c) => {\r\n        // 'connection' listener.\r\n        console.log('ipc client connected');\r\n        c.on('end', () => {\r\n                console.log('ipc client disconnected');\r\n        });\r\n        c.write('hello\\r\\n');\r\n        c.pipe(c);\r\n});\r\n\r\nipc_server.listen('/tmp/collect.sock', () => {\r\n        console.log('ipc connected at /tmp/pipe_name.sock');\r\n});\r\n\r\n\r\nThere are permission issues if I am accessing that named pipe from a process which has a different linux profile permission mask than the user which started the server.\r\n\r\nIt would be really nice to just have the ability to set the permissions on the named pipe file when creating the server with net.createServer().\r\n\r\nYou get something like this when trying to connect to the named pipe in a process ran by a user with different permissions on his account.\r\n\r\n\r\nipc client error { Error: connect EACCES /tmp/pipe_name.sock\r\n    at PipeConnectWrap.afterConnect [as oncomplete] (net.js:1106:14)\r\n  errno: 'EACCES',\r\n  code: 'EACCES',\r\n  syscall: 'connect',\r\n  address: '/tmp/pipe_name.sock' }\r\n"}, {"classified_as": "enhancement", "text": "I want to use a / character in the tag name when grouping resources but this breaks the shebang stuff.\n\nFor example if I have a tag named /login to group all resources related to login I get an url like: http://....../apidocs/#!//login/login_profile_get which does not automatically expand.\n"}, {"classified_as": "bug", "text": "A bare-bones Directus 8 project's GraphQL output looks fine in a viewer like iGraphQL, but throws all sorts of errors during compilation when importing the data into Gatsby via the gatsby-source-graphql plugin, as shown here:  \r\n\r\nError: Interface field Directus_Node.id expected but Directus_DirectusActivity does not provide it.  \r\nInterface field Directus_Node.id expected but Directus_DirectusFileThumbnailItem does not provide it.  \r\nInterface field Directus_Node.id expected but Directus_Metadata does not provide it.  \r\nInterface field Directus_Node.id expected but Directus_DirectusCollection does not provide it.  \r\nInterface field Directus_Node.id expected but Directus_DirectusCollectionItem does not provide it.  \r\nInterface field Directus_Node.id expected but Directus_DirectusFieldItem does not provide it.  \r\nInterface field Directus_Node.id expected but Directus_DirectusCollectionPreset does not provide it.  \r\nInterface field Directus_Node.id expected but Directus_DirectusField does not provide it.  \r\nInterface field Directus_Node.id expected but Directus_DirectusFile does not provide it.  \r\nInterface field Directus_Node.id expected but Directus_DirectusFolder does not provide it.  \r\nInterface field Directus_Node.id expected but Directus_DirectusPermission does not provide it.  \r\nInterface field Directus_Node.id expected but Directus_DirectusRelation does not provide it.  \r\nInterface field Directus_Node.id expected but Directus_DirectusRevision does not provide it.  \r\nInterface field Directus_Node.id expected but Directus_DirectusRole does not provide it.  \r\nInterface field Directus_Node.id expected but Directus_DirectusSetting does not provide it.  \r\nNames must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"2fa_secret_eq\" does not.  \r\nNames must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"2fa_secret_neq\" does not.  \r\nNames must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"2fa_secret_contains\" does not.  \r\nNames must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"2fa_secret_ncontains\" does not.  \r\nNames must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"2fa_secret_rlike\" does not.  \r\nNames must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"2fa_secret_nrlike\" does not.  \r\nNames must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"2fa_secret_empty\" does not.  \r\nNames must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"2fa_secret_nempty\" does not.  \r\nNames must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"2fa_secret_null\" does not.  \r\nNames must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"2fa_secret_nnull\" does not.  \r\nInterface field Directus_Node.id expected but Directus_DirectusUser does not provide it.  \r\n\r\nFor reference, in the gatsby plugin config I'm using a typeName of Directus and a fieldName of directus.\r\n\r\nHonestly, I don't know if this is a Directus issue or a Gatsby issue, although the GraphQL spec says that names shouldn't start with a number, hence all the 2fa errors above. I suspect that Gatsby requires a particular edge - node hierarchy that the GraphQL spec doesn't require and Directus doesn't provide, but that's just a guess.\r\n\r\n"}]