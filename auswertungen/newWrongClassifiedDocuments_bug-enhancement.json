[{"classified_as": "enhancement", "text": ""}, {"classified_as": "bug", "text": "## Motivation\r\n\r\nDifferent concrete storages should behave similar. There is currently a logging behavior inconsistency when a study is being created and it should be fixed. More concretely [RDBStorage logs the event](https://github.com/optuna/optuna/blob/master/optuna/storages/_rdb/storage.py#L168), while InMemoryStorage and RedisStorage don't.\r\n\r\nA PR author might also want to have a look at how the study creation method of the storage is called from create_study [here](https://github.com/optuna/optuna/blob/master/optuna/study.py#L787).\r\n\r\n## Description\r\n\r\nSee above."}, {"classified_as": "bug", "text": "**Describe the bug**\r\nThe \"privacy policy\" link on the setup page leads to a wrong page (/policy => 404).\r\n\r\n**Steps to reproduce the behavior**\r\n1. Start fresh install\r\n2. Go to http://localhost:1337/admin\r\n3. Click on \"privacy policy\" link in the \"Keep me updated about ...\" checkbox\r\n4. You get redirected to /policy - resulting in 404\r\n\r\n**Expected behavior**\r\nShould be redirected to /privacy (see footer of strapi.io site)\r\n\r\n**Screenshots**\r\n![2019-09-28](https://user-images.githubusercontent.com/3247664/65815814-756f2980-e1f4-11e9-8b85-65553f9bbc63.png)\r\n![2019-09-28 (1)](https://user-images.githubusercontent.com/3247664/65815852-c41cc380-e1f4-11e9-8331-9990a7402888.png)\r\n\r\n**System**\r\n- Strapi version: master\r\n"}, {"classified_as": "bug", "text": "* **Version**: v13.2.0\r\n* **Platform**: Windows 10, 64-bit\r\n* **Subsystem**: N/A\r\n\r\n<!-- Please provide more details below this comment. -->\r\nWhen trying to import a JSON file, the error message provided is the following:\r\n\r\n(node:7004) ExperimentalWarning: The ESM module loader is experimental.\r\ninternal/modules/run_main.js:50\r\n    internalBinding('errors').triggerUncaughtException(\r\n                              ^\r\n\r\nTypeError [ERR_UNKNOWN_FILE_EXTENSION]: Unknown file extension: C:\\Users\\Mercy\\Desktop\\New folder\\node_modules\\patron.js\\package.json\r\n    at Loader.resolve [as _resolve] (internal/modules/esm/default_resolve.js:114:13)\r\n    at Loader.resolve (internal/modules/esm/loader.js:74:33)\r\n    at Loader.getModuleJob (internal/modules/esm/loader.js:148:40)\r\n    at ModuleWrap.<anonymous> (internal/modules/esm/module_job.js:41:40)\r\n    at link (internal/modules/esm/module_job.js:40:36) {\r\n  code: 'ERR_UNKNOWN_FILE_EXTENSION'\r\n}\r\n\r\n\r\n**How to reproduce:**\r\n1. Create test.mjs with import './package.json'\r\n2. Run node test.mjs\r\n\r\nTo help debug this error we should ensure it provides the name of the parent module that attempted the file extension load - something like imported from /path/to/test.mjs."}, {"classified_as": "bug", "text": "**Node.js version**:  v8.9.3\r\n**npm version**: 5.5.1\r\n**Strapi version**: 3.0.0-alpha.8.3\r\n**Operating system**: Win7 Ultimate\r\n\r\nMy model:\r\n\r\njson\r\n{\r\n  \"connection\": \"default\",\r\n  \"collectionName\": \"punchbags\",\r\n  \"info\": {\r\n    \"name\": \"punchbag\",\r\n    \"description\": \"\"\r\n  },\r\n  \"options\": {\r\n    \"increments\": true,\r\n    \"timestamps\": true,\r\n    \"comment\": \"\"\r\n  },\r\n  \"attributes\": {\r\n    \"name\": {\r\n      \"type\": \"string\"\r\n    },\r\n    \"description\": {\r\n      \"type\": \"text\"\r\n    },\r\n    \"price\": {\r\n      \"type\": \"decimal\"\r\n    },\r\n    \"img\": {\r\n      \"type\": \"string\"\r\n    },\r\n    \"height\": {\r\n      \"type\": \"float\"\r\n    },\r\n    \"width\": {\r\n      \"type\": \"float\"\r\n    },\r\n    \"type_name\": {\r\n      \"type\": \"string\"\r\n    },\r\n    \"icon\": {\r\n      \"type\": \"text\"\r\n    }\r\n  }\r\n}\r\n\r\nResponse: \r\n![default](https://user-images.githubusercontent.com/9945452/35224262-360af684-ffa6-11e7-9ed9-ec19b493d587.png)\r\n\r\nResult:\r\n![default](https://user-images.githubusercontent.com/9945452/35223606-c46dc58a-ffa3-11e7-8b86-275d69370f89.png)\r\n"}, {"classified_as": "enhancement", "text": "master/src/cli/parse-server.js line 54\n\noptions = Object.keys(definitions).reduce(function (options, key) {\n  if (typeof program[key] !== 'undefined') {\n    options[key] = program[key];\n  }\n  return options;\n}, options);\n\n\nE.g\"mountPath\": \"/mymountPath\",\n\ntypeof program[key] is defalut /parse\n\noptions = Object.keys(definitions).reduce(function (options, key) {\n  if (typeof program[key] !== 'undefined' &&  typeof options[key] == 'undefined') {\n    options[key] = program[key];\n  }\n  return options;\n}, options);\n"}, {"classified_as": "enhancement", "text": "I paused this thing way back and it just keeps on syncing. New connections are prevented but existing ones are not terminated.\r\n\r\n<img width=\"571\" alt=\"Screenshot 2019-07-19 at 12 07 44\" src=\"https://user-images.githubusercontent.com/125426/61527971-f607f180-aa1d-11e9-8eca-37b996c8298a.png\">\r\n"}, {"classified_as": "bug", "text": "<!-- \r\n\r\nHalf of all issues filed here are duplicates, answered in the FAQ, or not appropriate for the bug tracker. Even if you think you've found a *bug*, please read the FAQ first, especially the Common \"Bugs\" That Aren't Bugs section!\r\n\r\nPlease help us by doing the following steps before logging an issue:\r\n  * Search: https://github.com/Microsoft/TypeScript/search?type=Issues\r\n  * Read the FAQ: https://github.com/Microsoft/TypeScript/wiki/FAQ\r\n\r\nPlease fill in the *entire* template below.\r\n-->\r\n\r\n<!--\r\nPlease try to reproduce the issue with the latest published version. It may have already been fixed.\r\nFor npm: typescript@next\r\nThis is also the 'Nightly' version in the playground: http://www.typescriptlang.org/play/?ts=Nightly\r\n-->\r\n**TypeScript Version:**  3.9.0-beta\r\n\r\n<!-- Search terms you tried before logging this (so others can find this issue more easily) -->\r\n**Search Terms:** recursive, recursive generic\r\n\r\n**Code**\r\n\r\n\r\ntype Intersect<U extends any[], R = unknown> =\r\n    ((...u: U) => any) extends ((h: infer H, ...t: infer T) => any)\r\n        ? Intersect<T, R & H>\r\n        : R\r\n\r\nconst value: Intersect<[{a: number}, {b: number}]> = {\r\n    a: 1,\r\n    b: 2\r\n}\r\n\r\n\r\n*Note: the usual workaround of an immediately-indexed intermediate object type still works.*\r\n\r\n**Expected behavior:** It to type check without warnings\r\n\r\n**Actual behavior:**\r\n\r\n- At line 1: Type alias 'Intersect' circularly references itself. (2456)\r\n- At line 3: Type 'Intersect' is not generic. (2315)\r\n- At line 6: Type 'Intersect' is not generic. (2315)\r\n\r\n**Playground Link:** <!-- A link to a TypeScript Playground \"Share\" link which demonstrates this behavior --> [Link](https://www.typescriptlang.org/play?ts=3.9.0-beta#code/C4TwDgpgBAkgdsCAnAzhAxsAPAVShAD0TgBMUoBDOEAbQF0AaKAJSgF4oBXOAazgHsA7nAB87AFBQpUABQyAdIs4AuKDgCU7MVRCbCxMrJkALVQEs4AM2RQAEk0Xzg5qzYAqmtturrJ0-wD8sAjIaJhYbkysAGR2In7+UqrM4uLo-HAowFAAbhQANpwQqvCIqBjYNADeFKpwnAC2AEbIAL5MVU11jS1IrXRiHFUJlKoAjAwjXVAATOKtQA)\r\n\r\n**Related Issues:** <!-- Did you find other bugs that looked similar? -->\r\n\r\n- #37426 (root cause might be this)\r\n- #37344\r\n- Probably about 25%-30% of all other recursive type issues.\r\n- My use case is basically solving #26058 in userland, and doing [this](https://stackoverflow.com/questions/50374908/transform-union-type-to-intersection-type/50375286#50375286) with SomeTuple[number] won't work because I don't want to recurse.\r\n"}, {"classified_as": "enhancement", "text": "Having error TS4020: 'extends' clause of exported class '...' has or is using private name 'EnumConstructor'. when i tried to create a class via extends Enum.with(...)\r\n\r\nexport EnumConstructor should solve my problem.\r\n"}, {"classified_as": "enhancement", "text": "If you try to bind to bindingContext and the source is instance of View then binding doesn't work.\r\n\r\n\r\nthis._actionsScrollView.bind({\r\n   sourceProperty: \"context\",\r\n   targetProperty: \"bindingContext\"\r\n}, this);\r\n\r\nwhere this is some view instance."}, {"classified_as": "enhancement", "text": "![image](https://user-images.githubusercontent.com/7029338/81122194-7fc08580-8f84-11ea-8980-b8c4f2ba72f4.png)\r\nI think it's because typegen/ src/templates wasn't published."}, {"classified_as": "enhancement", "text": "When built with Go 1.15, every connection attempt results in \r\n\r\n\r\n[SYNO4] 10:08:38 WARNING: Bad certificate from ... at 172.16.33.3:22001-172.16.33.8:59376/tcp-server/TLS1.3-TLS_AES_128_GCM_SHA256:\r\n   x509: certificate relies on legacy Common Name field, use SANs or temporarily enable Common Name matching with GODEBUG=x509ignoreCN=0\r\n\r\n\r\nWe should generate certificates with a SAN instead/in addition to the common name. However it would be great if we can connect without forcing new device IDs on everyone...\r\n\r\nSetting the env var makes things work. However we would ideally not do that as it affects all other TLS connections as well."}, {"classified_as": "enhancement", "text": "Currently we have this for labels. I think would be good to add this for Buttons as well. Will give user ability to add icon font and text inside buttons or add text with different styles inside the button. \n"}, {"classified_as": "bug", "text": "Starting the API against Substrate fdac986a and other recent versions gives the error\r\n\r\n\r\n2019-10-04 10:28:30 API/DECORATOR: Error: \"FATAL: Unable to initialize the API: Unable to find plain type for {\"info\":5,\"type\":\"GroupIndex\"}\"\r\n"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 9.x.x -->\r\n<!-- npm 5.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**: 9.0.0\r\n- **npm version**: 5.1.1\r\n- **Strapi version**: 3.0.0 alpha 12.7\r\n- **Database**: MongoDB\r\n- **Operating system**: Linux\r\n\r\n\r\n**What is the current behavior?**\r\nSearch input not shown well in Firefox.\r\n\r\n\r\n**Steps to reproduce the problem**\r\nSee this image:\r\n![strapi_ui](https://user-images.githubusercontent.com/25859075/42616046-062cd3c2-85c2-11e8-960d-9bb16d00d106.png)\r\n\r\n\r\n\r\n**What is the expected behavior?**\r\nWe don't need scrollbar.\r\n\r\n\r\n**Suggested solutions**\r\n\r\n\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n"}, {"classified_as": "bug", "text": "**Informations**\r\n- **Node.js version**: v9.11.1\r\n- **npm version**: 5.6.0\r\n- **Strapi version**: 3.0.0-alpha.12.1.2\r\n- **Database**: 10.2.14-MariaDB\r\n- **Operating system**: Ubuntu 16.04 LTS\r\n\r\n**What is the current behavior?**\r\nWhen creating a new content type the adminUI still states to create the table manually: \r\n\r\n![image](https://user-images.githubusercontent.com/8593673/39623958-46a34fe6-4f4c-11e8-869e-1054c6853405.png)\r\n\r\n**Steps to reproduce the problem**\r\nSetup a new strapi instance with mysql, create a new content type\r\n\r\n**What is the expected behavior?**\r\nMessage should not show, as it is no longer required.\r\n\r\n**Suggested solutions**\r\nRemove message\r\n\r\n- [x] I'm sure that this issue hasn't already been referenced\r\n"}, {"classified_as": "bug", "text": "## Motivation\r\n\r\nCurrent storage class implementations have several issues listed in the following.\r\n- Inconsistent error handlings between backends.\r\n- Significant bottlenecks in the storage class on training with / querying to RDB.\r\n- O(trial^2) running time even with random-sampler and CMA-ES.\r\n- Undefined consistency models for multi-worker optimizations.\r\n\r\nSome of these limitations come from the optuna's origin, that is, optuna was initially\r\ndeveloped for deep-learning applications with ~1000 trials.\r\nGiven increasing applications optuna, it will be a good time to reconsider the design\r\nand implementations of storage classes.\r\n\r\nThis issue is meant to be used for open discussions and PR tracking.\r\n\r\nRelated PR: #1155 \r\n\r\n## Roadmaps\r\n\r\nSome of the roadmaps come from committers' discussions, but they are open for discussions. Comments are appreciated.\r\n\r\n\r\n### Documentation and implementation consistency\r\n\r\n- [x] Document consistency models for storage classes.\r\n    - #1174 \r\n- [x] Document each method, especially concerning error-handling.\r\n    - #1175 \r\n- [x] Add tests and fix implementation on error-handling.\r\n    - #1191 \r\n- [x] Support load method in storage implementations.\r\n    - #1263\r\n    - The method name [needs discussion](https://github.com/optuna/optuna/pull/1174#discussion_r422022176).\r\n- [ ] (\u00f0\u0178\u017d\u2030 contribution-welcome\u00f0\u0178\u017d\u2030) Log when new studies are created in all backends.\r\n- [ ] (\u00f0\u0178\u017d\u2030 contribution-welcome\u00f0\u0178\u017d\u2030) Define the default study name.\r\n\r\n### Performance improvements\r\n\r\n- [x] Add cache for unfinished trials.\r\n    - #1140\r\n- [x] Support bulk updates of trial attributes.\r\n    - #1140 \r\n- [x] Make storages sync only once per trial.\r\n- [ ] Support incremental load of DB contents.\r\n- [ ] Support indexing of finished trials.\r\n- [x] Remove unnecessary deep-copies.\r\n    - https://github.com/optuna/optuna/pull/1228#issuecomment-627147492\r\n- Miscs\r\n    - #1264 \r\n    - #1274\r\n\r\n### Refactoring\r\n\r\n- [x] Remove unnecessary return values.\r\n    - #1337 \r\n    - #1327 \r\n- [ ] (\u00f0\u0178\u017d\u2030 contribution-welcome\u00f0\u0178\u017d\u2030) Add more default implementations in BaseStorage class.\r\n- [ ] (\u00f0\u0178\u017d\u2030 contribution-welcome\u00f0\u0178\u017d\u2030) Removed unnecessary backend-specific method implementations.\r\n\r\n### Miscellaneous issues\r\n\r\n- [ ] (\u00f0\u0178\u017d\u2030 contribution-welcome\u00f0\u0178\u017d\u2030) Support heart-beat of trials.\r\n- [x] Support multi-studies in in-memory storage.\r\n    - #1191\r\n    - #1228\r\n- [ ] (\u00f0\u0178\u017d\u2030 contribution-welcome\u00f0\u0178\u017d\u2030) Fix race-condition in waiting queue.\r\n- [ ] (\u00f0\u0178\u017d\u2030 contribution-welcome\u00f0\u0178\u017d\u2030) Raise errors when a single trial is modified from multiple workers at the same time.\r\n- [ ] Remove multi-threading support and add multi-processing support.\r\n    - #1232"}, {"classified_as": "enhancement", "text": "Latest master, but it started since #7230\r\nhttps://media.discordapp.net/attachments/277227681836302338/666904501982199819/unknown.png?width=1249&height=670\r\nGame Icons for some reason became low res, for comparision, look at this pic:\r\nhttps://media.discordapp.net/attachments/277227681836302338/666905112484118538/unknown.png?width=1249&height=670\r\nBroken GUI (some treaky issues with scalling or idk what):\r\n![image](https://user-images.githubusercontent.com/47083527/72415062-f4707980-3773-11ea-8ecb-6b34dc90774f.png)\r\n![image](https://user-images.githubusercontent.com/47083527/72415121-1833bf80-3774-11ea-9e9a-8e51e3a4caaf.png)\r\nEven if I changed whole OS to 100% still looks super weird a way too big. Here latest master and older build to compare:\r\nhttps://media.discordapp.net/attachments/277227681836302338/666910858844176394/unknown.png?width=1133&height=671\r\nhttps://media.discordapp.net/attachments/319224795785068545/666912459210358784/unknown.png?width=1144&height=671"}, {"classified_as": "enhancement", "text": "DatabaseController.canAddField does not check whether a request is issued with a master key before verifying CLPs. This is not consistent with all other DB ops(create/update/read/delete). Is it this way by design? \n"}, {"classified_as": "enhancement", "text": "When you do parallel execution in study.optimize (when n_jobs=-1 for example). You say with Parallel(n_jobs=n_jobs, prefer=\"threads\") as parallel:. See here:\r\n\r\nhttps://github.com/optuna/optuna/blob/61c6a0acb22338789a83a02bb147326159f41d1e/optuna/study.py#L317\r\n\r\nIMO this just opens (threading) which suffers from the Python Global Interpreter Lock. See here: https://joblib.readthedocs.io/en/latest/generated/joblib.Parallel.html\r\n\r\nThis would not lead to real parallel execution and is useless with CPU bound problems. I suggest to use this: with Parallel(n_jobs=n_jobs, backend=\"multiprocessing\") as parallel:\r\n\r\nIf you want to I can provide a PR."}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 9.x.x -->\r\n<!-- npm 5.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**: 10.5.0\r\n- **npm version**: 6.1.0\r\n- **Strapi version**: 3.0.0-alpha.12.6\r\n- **Database**: MongoDB (v: 3.6.5)\r\n- **Operating system**: ArchLinux\r\n\r\n\r\n**What is the current behavior?**\r\nAlways got this error when creating new project:\r\nDeprecationWarning: current URL string parser is deprecated, and will be removed in a future version. To use the new parser, pass option { useNewUrlParser: true } to MongoClient.connect.\r\n\r\n\r\n**Steps to reproduce the problem**\r\nfirst step in creating a new project (by running \"strapi new pname\")\r\n\r\n\r\n**What is the expected behavior?**\r\n\r\n\r\n\r\n**Suggested solutions**\r\nI found the solution here:\r\nhttps://www.thanhphu.tech/2018/05/23/about-mongos-usenewurlparser-warning/\r\n\r\nhe told: \r\nYou can resolve the above warning by changing from \"MongoClient.connect(\"mongodb://localhost:27017\")\" to \"MongoClient.connect(\"mongodb://localhost:27017\", { useNewUrlParser: true })\"\r\n\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n"}, {"classified_as": "bug", "text": "**Informations**\r\n- **Node.js version**: 10.15.0\r\n- **NPM version**: 6.4.1\r\n- **Strapi version**: 3.0.0-alpha.24.1\r\n- **Database**: SQLite\r\n- **Operating system**: Linux\r\n\r\n\r\n**What is the current behavior?**\r\n\r\n\r\nError throwed, documentation is not generated\r\n\r\nUnhandledPromiseRejectionWarning: TypeError: current.method.toLowerCase is not a function\r\n    at routes.reduce (src/backend/plugins/documentation/services/Documentation.js:433:35)\r\n\r\n\r\n\r\n**Steps to reproduce the problem**\r\n\r\n1. Create routes.json with next content\r\n\r\n{\r\n\"routes\": [\r\n{\r\n      \"method\": [\"GET\", \"POST\"],\r\n      \"path\": \"/example\",\r\n      \"handler\": \"Example.example\",\r\n      \"config\": {\r\n        \"policies\": []\r\n      }\r\n    }\r\n]\r\n}\r\n\r\n2. Start strapi and observe result\r\n\r\n**What is the expected behavior?**\r\n\r\nDocumentation should be generated\r\n\r\n"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!-- =============================================================================== -->\r\n<!--  If you are not using the current Strapi release, you will be asked to update. -->\r\n<!-- Please see the wiki for guides on upgrading to the latest release. -->\r\n<!-- =============================================================================== -->\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 10.x.x -->\r\n<!-- npm 6.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**: v10.12.0\r\n- **NPM version**: 6.4.1\r\n- **Strapi version**: 3.0.0-alpha.18\r\n- **Database**: MongoDB\r\n- **Operating system**: macOS Mojave Version 10.14.2\r\n- **(Optional) Link to your Project**: local test project\r\n\r\n\r\n**What is the current behavior?**\r\n\r\nMenu item text for ContentTypeBuilder plugin is different from the title and Content Types translation to Russian on the /admin/plugins/content-type-builder page for Russian locale.\r\n\r\n**Steps to reproduce the problem**\r\n\r\nJust navigate to /admin/plugins/content-type-builder\r\n\r\n**What is the expected behavior?**\r\n\r\nTranslations of \"Content Types\" to Russian are the same everywhere.\r\n\r\n**Suggested solutions**\r\n\r\nIt seems like in the strapi-admin package \"Content Types\" was translated as \"\u00d0\u00a2\u00d0\u00b8\u00d0\u00bf\u00d1\u2039 \u00d0\u0161\u00d0\u00be\u00d0\u00bd\u00d1\u201a\u00d0\u00b5\u00d0\u00bd\u00d1\u201a\u00d0\u00b0\" but in the strapi-plugin-content-type-builder package it was translated as \"\u00d0\u00a2\u00d0\u00b8\u00d0\u00bf\u00d1\u2039 \u00d0\u00b4\u00d0\u00b0\u00d0\u00bd\u00d0\u00bd\u00d1\u2039\u00d1\u2026\".\r\n\r\n\"\u00d0\u00a2\u00d0\u00b8\u00d0\u00bf\u00d1\u2039 \u00d0\u00b4\u00d0\u00b0\u00d0\u00bd\u00d0\u00bd\u00d1\u2039\u00d1\u2026\" means \"Data Types\" not \"Content Types\". I would recommend to translate \"Content Types\" as \"\u00d0\u00a2\u00d0\u00b8\u00d0\u00bf\u00d1\u2039 \u00d0\u0161\u00d0\u00be\u00d0\u00bd\u00d1\u201a\u00d0\u00b5\u00d0\u00bd\u00d1\u201a\u00d0\u00b0\" everywhere in admin. I can create PR for this issue if someone approves the correct translation.\r\n"}, {"classified_as": "enhancement", "text": "Backtrace is here: http://pastebin.com/THVDagnk\n\nEasily duplicable (I think?) in my fork, branch nix-fix.\n\n(Also, this happens just before the first frame is flip()'d to the screen, so I think after we fix this one, Linux might get intro screens in some cases. :)\n\nCommenting:\n\n\n    data += image.get()[i + 0];\n    data += image.get()[i + 1];\n    data += image.get()[i + 2];\n\n\nWill temporarily bypass the crasher.\n"}, {"classified_as": "bug", "text": "![Screenshot_20191102_092935](https://user-images.githubusercontent.com/27875141/68064191-75160100-fd53-11e9-9516-f805126747cd.jpg)\r\n"}, {"classified_as": "bug", "text": "My application spring boot to develop and use docker image openjdk:11-jdk to build image\r\npreviously I use alpine version of the image and ran into problem which sometimes the pod is not able to connect to k8s dns\r\nafter changing back to base openjdk:11-jdk version, the dns discovery is resolved, yet sometimes, every 10-20, it takes so long about 14-16 seconds to reach destination (other service within the cluster)"}, {"classified_as": "enhancement", "text": "Change the button background styling from \n\n\n      setBackground()\n\n\nto\n\n\n     setBackgroundTintList()\n\n\n       btn.setBackgroundTintList(android.content.res.ColorStateList.valueOf(tColor.android));\n\n\nI've done this programatically by creating a new android.widget.Button() and found no issues.\n\nIf this is possible without collision in other areas it would give the buttons their material design ripple effect, whereas setBackground removes the ripple effect. Will this open other issues. I didn't want to make a PR without knowing if there would be other issues or conflicts.\n"}, {"classified_as": "bug", "text": "Perbill - https://github.com/polkadot-js/api/blob/c42b71a6d8f892e57799f0a43d7c5e637e7d4c52/packages/types/src/Perbill.ts#L9\r\nPermill - https://github.com/polkadot-js/api/blob/c42b71a6d8f892e57799f0a43d7c5e637e7d4c52/packages/types/src/Permill.ts#L9"}, {"classified_as": "bug", "text": "<!--\r\nHello \u00f0\u0178\u2018\u2039 Thank you for submitting an issue.\r\n\r\nBefore you start, please make sure your issue is understandable and reproducible.\r\nTo make your issue readable make sure you use valid Markdown syntax.\r\n\r\nhttps://guides.github.com/features/mastering-markdown/\r\n-->\r\n\r\n**Describe the bug**\r\nThe very first sentence in **[Parameters](https://strapi.io/documentation/3.0.0-beta.x/content-api/parameters.html)** section, has a bad link (spelled as **parameters' concepts**). \r\n\r\n**Note 1** There is no sub-section parameters in the Concepts section.\r\n\r\n**Note 2** The apostrophe character in **parameters' concepts** is syntactically incorrect.\r\n\r\n**System**\r\n\r\n- Node.js version: v12.14.0<!-- Please ensure you are using the Node LTS version (v12) -->\r\n- NPM version: 6.13.6\r\n- Strapi version:  3.0.0-beta.19.5<!-- Please make sure you are on the latest version -->\r\n- Database: N/A\r\n- Operating system: Windows 10 Enterprise\r\n\r\n_**My comment**: I am very sensitive to the correctness and completeness of the technical documentation, being burned in the past when this priority was not at the top of my list_\r\n"}, {"classified_as": "bug", "text": "When an error occures on a Web Worker, it is not collected by page.on('pageerror'... event. \r\n\r\nFor example:\r\n\r\njs\r\nconst puppeteer = require('puppeteer');\r\n(async () => {\r\n  const browser = await puppeteer.launch();\r\n  const page = await browser.newPage();\r\n  page.on('pageerror', message => console.log(message));\r\n\r\n  await page.setContent(<!DOCTYPE html>\r\n  <script id=\"worker1\" type=\"javascript/worker\">\r\n    throw new Error('this is my error');\r\n  </script>\r\n  <script>\r\n    const blob = new Blob([\r\n      document.querySelector('#worker1').textContent\r\n    ], { type: \"text/javascript\" })\r\n\r\n    new Worker(window.URL.createObjectURL(blob));\r\n  </script>);\r\n})()\r\n\r\n"}, {"classified_as": "bug", "text": "**Information**\r\n- **Node.js version**:  v10.14.1 \r\n- **NPM version**:  v6.4.1\r\n- **Strapi version**: commit hash 2edd056\r\n- **Database**:  mongo with replicas and +srv string\r\n- **Operating system**:  Google Kubernetes Engine running linux and custom docker based on commit 2edd056 \r\n\r\n**What is the current behavior?**\r\n\r\nThere is no ENV to specify +srv\r\n\r\n**Steps to reproduce the problem**\r\n\r\nCan't setup mongo replicas without resorting to manually editing configuration database.json\r\n\r\nstrapi new appname is missing a parameter where I could specify +srv=true\r\n\r\n    strapi new <name> \\\r\n    --dbclient=<dbclient> \\\r\n    --dbhost=<dbhost> \\\r\n    --dbport=<dbport> \\\r\n    --dbname=<dbname> \\\r\n    --dbusername=<dbusername> \\\r\n    --dbpassword=<dbpassword> \\\r\n    --dbssl=<dbssl> \\\r\n    --dbauth=<dbauth>\r\n\r\nhttps://strapi.io/documentation/3.x.x/cli/CLI.html#strapi-new\r\n\r\n**What is the expected behavior?**\r\n\r\nSpecifically, the command line strapi new app should take command line params to NONINTERACTIVELY save database.json like this. \r\n\r\n    {\r\n      \"defaultConnection\": \"default\",\r\n      \"connections\": {\r\n        \"default\": {\r\n          \"connector\": \"strapi-hook-mongoose\",\r\n          \"settings\": {\r\n            \"client\": \"mongo\",\r\n            \"host\": \"some.mongodb.net\",\r\n            \"srv\": true,\r\n            \"port\": 27017,\r\n            \"database\": \"strapi\",\r\n            \"username\": \"username\",\r\n            \"password\": \"password\"\r\n          },\r\n          \"options\": {\r\n            \"authenticationDatabase\": \"admin\",\r\n            \"ssl\": true\r\n          }\r\n        }\r\n      }\r\n    }\r\nNeed ENV to set +srv connection: true (default false) that sets -> scope.database.settings.srv\r\n\r\nRelated to https://github.com/strapi/strapi-docker/issues/71 and https://github.com/strapi/strapi-docker/issues/52"}, {"classified_as": "enhancement", "text": "### Introduction\r\nI create this issue to avoid other issues related to the same topic.\r\n\r\n## Description\r\nCurrently, if you are adding a min / max limit or default value,  will not be applied in the REST routes.\r\nOnly required and unique constraints work.\r\n\r\nmin / max will only be applied in the admin panel.\r\n\r\n## Contribution\r\n\r\nIf you want to work on this topic, I suggest you open an RFC on the following repo [strapi/rfcs](https://github.com/strapi/rfcs)"}, {"classified_as": "enhancement", "text": "This is a container bug for issues caused by PR https://github.com/libuv/libuv/pull/2082. Disparate reports but the root cause is the linked PR.\r\n\r\n#25856 \r\n#27869\r\n#28512\r\n#28882\r\n#28917\r\n\r\nFixing it turned out to be not so easy (https://github.com/libuv/libuv/pull/2313) and simply reverting trades one regression for another."}, {"classified_as": "enhancement", "text": "Running through the Vue tutorial in the playground, lesson 3 step 7 says drag a TabView from the component selector on the left. But there's no TabView component in the selector. I can only find a Tabs navigation component. Has something changed here, or am I missing something obvious..?\r\n\r\n"}, {"classified_as": "enhancement", "text": "If two folders both have the ID \"default\" in the config, we rename them to \"default~1\" and \"default~2\". But tilde isn't allowed in folder IDs, and the user can't change folder IDs in the GUI, so it's kinda impossible to recover gracefully from.\n\nGranted, they shouldn't be able to get in this state without editing the config manually to start with, but still...\n"}, {"classified_as": "enhancement", "text": "I want to use a / character in the tag name when grouping resources but this breaks the shebang stuff.\n\nFor example if I have a tag named /login to group all resources related to login I get an url like: http://....../apidocs/#!//login/login_profile_get which does not automatically expand.\n"}, {"classified_as": "bug", "text": "**Describe the bug**\r\nUsing xframe ALLOW-FROM throws error in console: Invalid 'X-Frame-Options' header encountered when loading 'https://api.dev.mysite.com/uploads/my-file.pdf': 'ALLOW-FROM dev.mysite.com' is not a recognized directive. The header will be ignored.\r\n\r\nhttps://strapi.io/documentation/v3.x/concepts/middlewares.html#response-middlewares\r\ninstructions for xframe indicate ALLOW-FROM which is obsolete per https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options\r\n\r\n**Steps to reproduce the behavior**\r\nSee docs\r\n\r\n**Expected behavior**\r\ni guess allow-from needs to be changed.\r\n\r\ni tried using frame-ancestors but it also wasnt recognized, so i dont have any suggestions at the moment\r\n\r\n**Screenshots**\r\nnone\r\n\r\n**Code snippets**\r\n\r\n        xframe: {\r\n            enabled: true,\r\n            value: \"frame-ancestors dev.mysite.com\"\r\n        },\r\n\r\n\r\n**System**\r\nNode.js version: v10.16.3\r\nNPM version: 6.9.0\r\nStrapi version: Strapi v3.0.4\r\nDatabase: mongo v4.0.12\r\nOperating system: ubuntu 18.04\r\n\r\n**Additional context**\r\nThank you!\r\n"}, {"classified_as": "bug", "text": "### Source\r\nPackage.json\r\n\r\n### Found\r\neslint ./**/*.js --fix --ignore-pattern node_modules/\"\r\n\r\n### Suggested\r\n- [x] Create .eslintignore.js file. \r\n- [x] Add folders and files that will be ignored."}, {"classified_as": "bug", "text": "## TL;DR\r\nThis PR requests to deprecate the return value of [BaseStorage.set_trial_intermediate_value](https://github.com/optuna/optuna/blob/24300dc57661bff7961499a2d52534fcd41ad258/optuna/storages/base.py#L144) method.\r\n\r\n## General background\r\n[BaseStorage.set_trial_intermediate_value](https://github.com/optuna/optuna/blob/24300dc57661bff7961499a2d52534fcd41ad258/optuna/storages/base.py#L144) method returns False when the specified step already has a value. Its motivation is identical with #1308. The method is solely used in [trial.report](https://github.com/optuna/optuna/blob/v1.4.0/optuna/trial.py#L807), but the return value is ignored.\r\n\r\n## Proposal\r\nRemove the return value and change the method's behavior to \"always overwrite existing values\". See #1308 for similar discussion.\r\n\r\n## Note\r\nThis is out of the scope of this issue, but #852 is a related issue and we should add appropriate handling in [trial.report](https://github.com/optuna/optuna/blob/v1.4.0/optuna/trial.py#L807)."}, {"classified_as": "bug", "text": "#### Version\r\n\r\nbash\r\n$ node -v\r\nv13.1.0\r\n$ uname -a                                                                                                                                                                                                                                         06:58:36\r\nDarwin Admins-MacBook-Pro.local 19.0.0 Darwin Kernel Version 19.0.0: Wed Sep 25 20:18:50 PDT 2019; root:xnu-6153.11.26~2/RELEASE_X86_64 x86_64\r\n\r\n\r\n\r\n#### Code\r\n\r\njs\r\nrequire('https')\r\n  .get('https://www.megaplextheatres.com/api/theatres/all', (response) => {\r\n    console.log('OK');\r\n  })\r\n  .on('error', (error) => {\r\n    console.error(error);\r\n  });\r\n\r\n\r\n\r\n#### Actual\r\n\r\nError:\r\n\r\n\r\nError: Parse Error: Invalid header value char\r\n    at TLSSocket.socketOnData (_http_client.js:454:22)\r\n    at TLSSocket.emit (events.js:210:5)\r\n    at addChunk (_stream_readable.js:326:12)\r\n    at readableAddChunk (_stream_readable.js:301:11)\r\n    at TLSSocket.Readable.push (_stream_readable.js:235:10)\r\n    at TLSWrap.onStreamRead (internal/stream_base_commons.js:182:23) {\r\n  bytesParsed: 722,\r\n  code: 'HPE_INVALID_HEADER_TOKEN',\r\n  reason: 'Invalid header value char',\r\n  rawPacket: <Buffer 48 54 54 50 2f 31 2e 31 20 32 30 30 20 4f 4b 0d 0a 54 72 61 6e 73 66 65 72 2d 45 6e 63 6f 64 69 6e 67 3a 20 63 68 75 6e 6b 65 64 0d 0a 43 6f 6e 74 65 ... 1402 more bytes>\r\n}\r\n\r\n\r\n\r\n#### Expected\r\n\r\n\"OK\" or an error with an access to the raw HTTP response, so that I could at least somehow parse the response myself.\r\n\r\n#### Workarounds\r\n\r\nNone known to me.\r\n\r\nPreviously it was possible to workaround it using --http-parser=legacy.\r\n\r\nbash\r\n$ node -v\r\nv12.11.1\r\n$ node --http-parser=legacy test.js\r\nOK\r\n\r\n\r\n\r\nThis stopped working in v13.\r\n\r\nPrevious it was possible to override the default HTTP parser.\r\n\r\njs\r\nprocess.binding('http_parser').HTTPParser = require('http-parser-js').HTTPParser;\r\n\r\nrequire('https')\r\n  .get('https://www.megaplextheatres.com/api/theatres/all', (response) => {\r\n    console.log('OK');\r\n  })\r\n  .on('error', (error) => {\r\n    console.error(error);\r\n  });\r\n\r\n\r\n\r\nbash\r\n$ node -v\r\nv10.17.0\r\n$ node test-using-http-parser-js.js\r\nOK\r\n\r\n\r\n\r\nThis stopped working in v12.\r\n\r\nThis issue did not exist in Node.js v10.\r\n\r\n#### Related issues\r\n\r\n* https://github.com/nodejs/node/issues/22064#issuecomment-519675190\r\n* https://github.com/sindresorhus/got/issues/855"}, {"classified_as": "enhancement", "text": "(Reported [here](https://puppeteer.slack.com/archives/C8XEP1718/p1524815460000457) on our slack channel)\r\n\r\nSince we terminate browser with kill -9 in an attempt to exit as fast as possible, browser.close() causes puppeteer child_process to exit with non-zero code.\r\n\r\nThis has unfortunate consequences on AWS Lambda.\r\nQuoting @alixaxel:\r\n\r\n> On Lambda, it creates core dumps which if the function is kept warm, will eventually prevent it from starting due to no disk space (only 500MB on /tmp).\r\n\r\nWe should:\r\n- enhance protocol's [Browser.close()](https://vanilla.aslushnikov.com/#Browser.close) to (optionally) ignore beforeunload handlers\r\n- use browser.close() exclusively instead of kill -9."}, {"classified_as": "enhancement", "text": "![1](https://user-images.githubusercontent.com/41135145/42610329-541b0ecc-8591-11e8-87c0-39ffb0ddabdb.jpg)\r\nlike on screen.\r\nAthlon 64 x2 5600+\r\n4GB RAM\r\nGT610\r\nusing latest version downloaded from site and latest fw from sony site"}, {"classified_as": "bug", "text": "### Steps to reproduce\r\n\r\n**Tell us about your environment:**\r\n\r\n* Puppeteer version:\r\n1.1.1\r\n* Platform / OS version:\r\nubuntu 16.04\r\n* URLs (if applicable):\r\nhttps://a.df-srv.de/v2/view/lePQD7Tyr8SNUYizE5Yy/a.html\r\n* Node.js version:\r\n9.7.1\r\n\r\n**What steps will reproduce the problem?**\r\nLoad a page over https:// that has a http:// resource embeded in an <iframe> object.\r\n(Example page: https://a.df-srv.de/v2/view/lePQD7Tyr8SNUYizE5Yy/a.html)\r\n\r\nThe debug console if devtools:true is enabled will show:\r\nMixed Content: The page at 'https://a.df-srv.de/v2/view/lePQD7Tyr8SNUYizE5Yy/a.html' was loaded over HTTPS, but requested an insecure resource 'http://ende.de/'. This request has been blocked; the content must be served over HTTPS. \r\n\r\nHowever this message is not seen by puppeteer, even in the  DEBUG=puppeteer:* logs there is no sign of the blocked request.\r\n\r\n_Please include code that reproduces the issue._\r\n\r\n1. Load https://a.df-srv.de/v2/view/lePQD7Tyr8SNUYizE5Yy/a.html\r\n2. See Mixed Content: The page at 'https://a.df-srv.de/v2/view/lePQD7Tyr8SNUYizE5Yy/a.html' was loaded over HTTPS, but requested an insecure resource 'http://ende.de/'. This request has been blocked; the content must be served over HTTPS.\r\n3. Not intercept-able via requestfailed, Network.loadingFailed, Network.requestIntercepted, Network.requestWillBeSent or any other event.\r\n\r\n**What is the expected result?**\r\n\r\nSome way to catch the blocked Mixed Content log shown in the debug console.\r\n\r\n**What happens instead?**\r\n\r\nNothing."}, {"classified_as": "enhancement", "text": "Currently the icon for statistics <span class=\"fas fa-chart-bar\"></span> is missing.\r\nIt seems that [v5-compat.css](https://github.com/ForkAwesome/Fork-Awesome/tree/master/css) from Fork Awesome is not a 100% replacement for Font Awesome\r\n"}, {"classified_as": "enhancement", "text": "Hi, \r\n\r\nCurrently on the phone, so I hope its good to start with the reference. Feel free to edit/add my post if necessary :).\r\n\r\nRaised according to \r\n- https://forum.syncthing.net/t/problem-with-post-ignoring-a-file-sendonly-recvonly/13749/2\r\n\r\nThanks for your help on this."}, {"classified_as": "bug", "text": "<!--\r\nSTEP 1: Are you in the right place?\r\n\r\n- For general technical questions or \"how to\" guidance, please search StackOverflow for questions tagged \"puppeteer\" or create a new post.\r\n\r\nhttps://stackoverflow.com/questions/tagged/puppeteer\r\n\r\n- For issues or feature requests related to the DevTools Protocol (https://chromedevtools.github.io/devtools-protocol/), file an issue there:\r\n\r\nhttps://github.com/ChromeDevTools/devtools-protocol/issues/new.\r\n\r\n- Problem in Headless Chrome? File an issue against Chromium's issue tracker:\r\n\r\nhttps://bugs.chromium.org/p/chromium/issues/entry?components=Internals%3EHeadless&blocking=705916\r\n\r\nFor issues, feature requests, or setup troubles with Puppeteer, file an issue right here!\r\n-->\r\n\r\n### Steps to reproduce\r\n\r\n**Tell us about your environment:**\r\n\r\n* Puppeteer version: 1.19\r\n* Platform / OS version: macOS\r\n* URLs (if applicable):\r\n* Node.js version: 10.16\r\n\r\n**What steps will reproduce the problem?**\r\n\r\nI want to emulate @media (hover: ...) to test my CSS at different devices.\r\nExample:\r\n\r\na {\r\n  color: green;\r\n}\r\n\r\n@media (hover: hover) {\r\n  a:hover {\r\n    background: red;\r\n  }\r\n}\r\n\r\n\r\n@media (hover: hover) works well when I run this code in puppeteer+macOS. But I want to emulate @media (hover: none) for mobile device to test it.\r\n\r\n**What is the expected result?**\r\n\r\nAPI to configure input mechanism."}, {"classified_as": "enhancement", "text": "When saving a new PFUser on iOS, the SDK(?) throws this error:\n\nCaught \"NSInternalInconsistencyException\" with reason \"User cannot be saved unless they are already signed up. Call signUp first.\"\nWhen saving a new PFUser via Cloud Code, it does not throw that error but simply mimics a \"signUp\", which creates a session token for the server... in Cloud Code! (actually, read #3 as this may be a bug with the pfuser handling)\n\nFor sake of flexibility and consistency (with PFObjects), I think there should be an option to \"save\" a PFUser without having a session token created, or restricting (iOS) apps to always use PFUser.signUp. There are many use-cases for such a feature, and I feel that it is a meaningless restriction.\n\nPersonal use-case: I have some special logic to replace the standard \"signUp\" flow, which has me creating a PFUser via Cloud Code + MasterKey. But with how the \"save\" function is behaving, it's creating a session token for the server!\n\nRef #1490 \n"}, {"classified_as": "enhancement", "text": ""}, {"classified_as": "enhancement", "text": "SwaggerResource object strips out \".{format}\" when setting \"this.name\".\n\nAs these files are JSON files, \".json\" is the correct extension to use (to get colored syntax and error highlighting from your IDE). But the \".json\" extension should be stripped from the resource heading (section name) in the same way that \".{format}\" already is.\n"}, {"classified_as": "enhancement", "text": "I'm seeing this behavior on master - is it a known issue?\n\nAlso, just wondering if master is the best branch to stay up-to-date with the Swagger 2.0 dev work. Or should I use \"develop\" instead?\n"}, {"classified_as": "enhancement", "text": "When playing a game and pressing alt+enter to enter fullscreen mode the enter button for example is used as input.\r\nThis can lead to skipped cutszenes and other unintended actions."}, {"classified_as": "enhancement", "text": "npm install -g puppeteer returns the following error: Download failed: EACCES: permission denied, mkdir '/usr/local/lib/node_modules/puppeteer/.local-chromium'\r\n\r\n\r\nIs this expected? I am using it as a dependency of a project I would like to install globally and this is blocking that."}, {"classified_as": "enhancement", "text": "Since {N} 1.4 I can now use <text-field> instead of TextField, but if I try to style text-field the CSS rules are not applied; I have to use TextField.\n\nCan the CSS implementation be updated to support the new lowercase, hyphen-separator element names?\n\nThanks.\n"}, {"classified_as": "enhancement", "text": "When the UI is zoomed to a high enough level the folder status text, e.g. \"Up to Date\", is replaced by a \"box\" character. This is not pronounceable by some screen readers, such as [NVDA](http://www.nvaccess.org/). I have very little HTML/CSS experience but I assume there are methods that can be employed so that screen readers are still given text to read out in this circumstance.\n"}, {"classified_as": "enhancement", "text": "Serialization fails. Would normally just fix (instead of log), but need to decode the Opaque system again to see what is up here."}, {"classified_as": "enhancement", "text": "Should look at mtime of when the file was archived, not mtime of the file.\r\nTo be honest, we should probably swap the two to start with, for easier search by users."}, {"classified_as": "bug", "text": "# Bug Report\r\n\r\n## Steps to Reproduce\r\n\r\n1. Set the local as a storage adapter in api.php \r\n2. Upload file (For example local.jpg)\r\n3. Change the storage adapter as s3\r\n4. Upload file (For example s3.jpg)\r\n\r\n## Expected Behavior\r\n\r\nlocal.jpg should be served from the local path as the value of directus_files.storage says the local.\r\ns3.jpg should server from S3 path.\r\n\r\n## Actual Behavior\r\nlocal.jpg is trying to serve from s3, But the file is not available on s3, So getting 404  error. \r\n\r\n## Other Context & Screenshots\r\n\r\nThis behavior is also applicable in vice-versa, change in adapter from s3 to local\r\n\r\n## Technical Details\r\n\r\n- Device: Desktop\r\n- OS: macOS 10.14.5\r\n- Web Server: Apache, MAMP Pro\r\n- PHP Version: 7.2.14\r\n- Database: MySQL 5.7.25\r\n- Install Method: cloned master branch\r\n"}, {"classified_as": "enhancement", "text": "\r\nLaunching with args:\r\njs\r\n\tconst browser = await puppeteer.launch({\r\n\t  headless: false,\r\n\t  args: ['--user-data-dir=/pathtoprofile/'],\r\n\t});\r\n\r\nWill override some files and removes all extensions from the chrome profile + alerts for \"settings corrupted\" at chrome://settings screen.\r\n"}, {"classified_as": "bug", "text": "**Informations**\r\n- **Node.js version**: v10\r\n- **NPM version**: v6\r\n- **Strapi version**: Alpha 25.2\r\n- **Database**: MySQL\r\n- **Operating system**: Ubuntu 18.04\r\n- **(Optional) Link to your Project**: https://github.com/canonn-science/CAPIv2-Strapi\r\n\r\n\r\n**What is the current behavior?**\r\n\r\nAttempting to pull a big integer value from graphql with a value larger than a 32-bit integer results in the following error: \r\n\r\n\"message\": \"Int cannot represent non 32-bit signed integer value: 1316130638171\"\r\n\r\n**Steps to reproduce the problem**\r\n\r\nCreate a model with the big integer field type, add some data with larger integer values than a 32-bit integer\r\n\r\n**What is the expected behavior?**\r\n\r\nIt should display the values \u00f0\u0178\u02dc\u203a \r\n\r\n**Suggested solutions**\r\n\r\nI recommend either a custom scalar type in graphQL or adding the following: https://github.com/chadlieberman/graphql-type-long\r\n\r\nExample of a custom scalar type via apollo: https://www.apollographql.com/docs/graphql-tools/scalars#Own-GraphQLScalarType-instance\r\n\r\n**References**\r\n\r\nhttps://github.com/graphql/graphql-spec/issues/73"}, {"classified_as": "bug", "text": "Type definition\r\n\r\nexport default {\r\n    types: {\r\n        ID: \"H256\",\r\n        IDS: \"Vec<ID>\",\r\n        Value: \"Vec<u8>\",\r\n\r\n        Change: {\r\n            primary: \"ID\",\r\n            relation: \"IDS\",\r\n            before: \"Option<Value>\",\r\n            after: \"Option<Value>\"\r\n        },\r\n        \r\n        Mutation: {\r\n            changes: 'Vec<Change>',\r\n        }\r\n    }\r\n}\r\n\r\nlead to error\r\n\r\nGenerating from metadata, 17,573 bytes\r\n/Users/dmitriyshabanov/Trucks/types/src/interfaces/augment-api-consts.ts\r\n\tGenerating\r\n\tWriting\r\n\r\n/Users/dmitriyshabanov/Trucks/types/src/interfaces/augment-api-query.ts\r\n\tGenerating\r\n\r\n/Users/dmitriyshabanov/Trucks/types/node_modules/@polkadot/typegen/util/derived.js:116\r\n    if (subDef.info === _types.TypeDefInfo.Plain) {\r\n               ^\r\nTypeError: Cannot read property 'info' of undefined\r\n\r\nbecause it can't proper handle relation: \"IDS\""}, {"classified_as": "bug", "text": "Hi! I'm using ApiPromise with websocket provider as singleton like this:\r\n\r\n\r\nlet wsProvider;\r\nlet client;\r\n\r\nfunction createClientInstance() {\r\n  wsProvider = new WsProvider('wss://rpc.polkadot.io');\r\n\r\n  client = new ApiPromise({ provider: wsProvider });\r\n}\r\n\r\nasync function buildDotClient() {\r\n  try {\r\n    if (!wsProvider) {\r\n      createClientInstance();\r\n    }\r\n\r\n    await client.isReady;\r\n\r\n    return client;\r\n  } catch (e) {\r\n    throw new Error('service_unavailable');\r\n  }\r\n}\r\n\r\n\r\nAnd then use client in some script inside interval. But from time to time I get such errors:\r\nAPI-WS: disconnected from wss://rpc.polkadot.io code: '1006' reason: 'Connection dropped by remote peer.'\r\nAPI-WS: disconnected from wss://rpc.polkadot.io code: '1006' reason: 'connection failed'\r\n\r\nAnd after throwing such error from ApiPromise, script gets stuck. It's even impossible to catch for following restart.\r\nI even tried to add event emitter listenings, but still the same:\r\n\r\n    client.on('disconnected', () => {\r\n      createClientInstance();\r\n    });\r\n\r\n    client.on('error', () => {\r\n      createClientInstance();\r\n    });\r\n\r\n\r\nMaybe it is possible to restart connection manually?\r\n\r\nPackage version:\r\n\"@polkadot/api\": \"^1.30.1\""}, {"classified_as": "enhancement", "text": "We have not migrated and are still using a combination of development and production databases on Parse. We have an array of pointers column on our _User class. It used to be that calling Parse.addUnique(\"students\", StudentObj); would save a reference pointer to the students but now the server seems to be populating the array with the full objects of each \"student\" _User class.\n\nAdditionally, this is causing a series of problems because calling \"include\" on _User for the students array of pointers is now simply returning an assorted array with some rows only having an ObjectID and some having a full (but out of date) object. What happened to the proper reference pointer logic?\n"}, {"classified_as": "enhancement", "text": "Repro: clone https://github.com/ljharb/has-package-exports\r\n\r\nIt has a dev dep of \"has-package-exports\": \"file:.\", so that in every node version, i can require('has-package-exports') from within the package, and it works.\r\n\r\nIn node v13.6 and v12.15, node test passes without issuing (node:96292) ExperimentalWarning: Package name self resolution is an experimental feature. This feature could change at any time as a warning.\r\n\r\nIn node v13.7, the warning is correctly issued, and the local dev dep is byassed.\r\n\r\nHowever, in node v12.16, without passing any flags, the warning is issued and the local dev dep is bypassed. v12.16 and v12.15 should behave identically with respect to this feature, regardless of the presence of \"exports\" in package.json.\r\n\r\ncc @nodejs/modules-active-members "}, {"classified_as": "bug", "text": "I'm trying to connect to my unsynced node with api 1.0.0-beta.17 \r\n\r\ntarget=#750431 (25 peers), best: #520014\r\n\r\nI'm getting \r\n![Screen Shot 2020-01-23 at 16 42 13](https://user-images.githubusercontent.com/3409250/72999295-74938080-3dff-11ea-9667-bd96dcc9c5bd.png)\r\n\r\nwhich is uncatchable with both of these\r\n\r\njavascript \r\ntry {\r\n  let api = await ApiPromise.create().catch(e => {})\r\n} catch (e) {}\r\n\r\n\r\nIt also doesn't emit error on \r\njavascript\r\nprovider.on('error',(e)=>{})\r\n\r\n\r\nIt results in stuck application since I can't react on anything that happened here. It also happens when you get error while connecting to wsprovider but it can be handled by wrapping api creation inside another promise, which I can reject. It is not ideal, but it works.\r\n\r\nWhen trying to connect to wss://cc3-5.kusama.network/ I get this on the other hand\r\n\r\n![Screen Shot 2020-01-23 at 16 41 42](https://user-images.githubusercontent.com/3409250/72999309-79583480-3dff-11ea-839f-8dc55b605d44.png)\r\n"}, {"classified_as": "enhancement", "text": "I have everything setup correctly \"so I say\". \n\nAny ideas?\n"}, {"classified_as": "bug", "text": "**Describe the bug**\r\nI only have Strapi backend running and trying to ensure MS Login works. I have set up the Azure Directory and followed the guide.\r\n\r\n**Steps to reproduce the behavior**\r\n1. Strapi Start and Login\r\n2. Enable Microsoft Provider\r\n3. Add In Client ID, Private Key (Enable Azure and add URL Redirect)\r\n\r\n**Expected behavior**\r\nTo be able to login, have microsoft dialog box authenticate me\r\n\r\n**Screenshots**\r\nNo screen shot but on the console I get error:\r\n\r\n> TypeError: object null is not iterable (cannot read property Symbol(Symbol.iterator))\r\n>     at callback (C:\\Users\\MyUserName\\Desktop\\backend\\project\\plugins\\users-permissions\\controllers\\Auth.js:95:16)\r\n\r\nOn the browser I get error:\r\n\r\n> {\r\n> statusCode: 500,\r\n> error: \"Internal Server Error\",\r\n> message: \"An internal server error occurred\"\r\n> }\r\n\r\n**System**\r\n- Node.js version: 10.0.0\r\n- NPM version: 6.9.0\r\n- Strapi version: 3.0.0-alpha.26.2 (Latest)\r\n- Database: MySQL 8\r\n- Operating system: Windows 10\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n"}, {"classified_as": "enhancement", "text": "* **Version**: v12.12.0\r\n* **Platform**: Darwin [redacted] 18.7.0 Darwin Kernel Version 18.7.0: Sat Oct 12 00:02:19 PDT 2019; root:xnu-4903.278.12~1/RELEASE_X86_64 x86_64\r\n* **Subsystem**: util\r\n\r\nI was very surprised to discover that in node v12, util.format('%s', v) does not consistently call String(v).  Checking [the docs](https://nodejs.org/api/util.html#util_util_format_format_args), I read:\r\n\r\n> %s: String will be used to convert all values except BigInt, Object and -0. BigInt values will be represented with an n and Objects that have no user defined toString function are inspected using util.inspect() with options { depth: 0, colors: false, compact: 3 }.\r\n\r\nThis is a surprising (and in my view undesirable) change from the previous behaviour, which was to consistently call String in response to %s.  It also appears to be a semantically breaking change introduced, via #27621 and #27799, in 12.3.0, despite that not being a new major version.  If so, it should be entirely reverted (and good riddance, in my opinion).\r\n\r\nIf there is some compelling argument for why the new behaviour is actually desirable, then at least the code should be made consistent with the documentation or vice versa.\r\n\r\nIn particular, whether a user defined toString function is called depends in non-documented and non-obvious ways on the value of the .constructor property of the object, which is otherwise normally of no significance:\r\n\r\nJS\r\n// ES6 subclassing:\r\nclass A {\r\n  toString() { return 'custom A'; }\r\n}\r\nclass B extends A {}\r\n\r\n// ES5 subclassing:\r\nfunction C() {}\r\nC.prototype.toString = function() { return 'custom C'; };\r\n\r\nfunction D() { C.call(this); }\r\nD.prototype = Object.create(C.prototype);\r\n// What if we forget to set the .constructor?\r\n// D.prototype.constructor = D;\r\n\r\nconsole.log('%s', new A());\r\nconsole.log('%s', new B());\r\nconsole.log('%s', new C());\r\nconsole.log('%s', new D());\r\n\r\n// Fix forgotten .constructor:\r\nD.prototype.constructor = D;\r\nconsole.log('%s', new D());\r\n\r\n\r\nActual output:\r\n\r\n\r\ncustom A\r\nB {}\r\ncustom C\r\ncustom C\r\nD {}\r\n\r\n\r\nExpected / documented output:\r\n\r\n\r\ncustom A\r\ncustom A\r\ncustom C\r\ncustom C\r\ncustom C\r\n\r\n\r\nConsistently applying the documented behaviour would go some way to remedying the breaking nature of this change, since at least user supplied .toString implementations would always be called, as was previously the case.\r\n"}, {"classified_as": "enhancement", "text": "The api object has a memory leak. This is consistent across many versions.\r\n\r\nHere you see the memory consumption. The consumption consistently drops when disconnecting and reconnecting.\r\n\r\n![image](https://user-images.githubusercontent.com/5869273/85206318-cffe6780-b2e6-11ea-86c7-5bc5df1deccc.png)\r\n\r\nIs there a clean up we are missing somewhere?\r\n"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!-- =============================================================================== -->\r\n<!--  If you are not using the current Strapi release, you will be asked to update. -->\r\n<!-- Please see the wiki for guides on upgrading to the latest release. -->\r\n<!-- =============================================================================== -->\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 10.x.x -->\r\n<!-- npm 6.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\nHello and thank you for this wonderful tool.\r\nI'd just like to make one small comment.\r\n\r\n**Informations**\r\n- **Node.js version**: any\r\n- **NPM version**: any\r\n- **Strapi version**: any\r\n- **Database**: any\r\n- **Operating system**: any\r\n\r\n**What is the current behavior?**\r\n\r\nThere is a mismatch between enumeration.placeholder, which indicates a comma separation and the enumeration.rules which specify the line feeds.\r\n\r\nhttps://github.com/strapi/strapi/blob/6ec2b17e80e567728b161c9104cf895fd5204d74/packages/strapi-plugin-content-type-builder/admin/src/translations/en.json#L45\r\n\r\nand \r\n\r\nhttps://github.com/strapi/strapi/blob/6ec2b17e80e567728b161c9104cf895fd5204d74/packages/strapi-plugin-content-type-builder/admin/src/translations/en.json#L46\r\n\r\n**Steps to reproduce the problem**\r\n\r\nEdit an enumeration field.\r\n\r\n**What is the expected behavior?**\r\n\r\n\r\nEx: morning\r\nnoon\r\nevening\r\n\r\n\r\n**Suggested solutions**\r\n\r\n\r\n\"form.attribute.item.enumeration.placeholder\": \"Ex: morning\r\nnoon\r\nevening\"\r\n\r\n\r\nCheers,\r\nSteve"}, {"classified_as": "bug", "text": "It should save with type REVERT"}, {"classified_as": "enhancement", "text": "The documentation specifies correctly that the css type-selectors are case in-sensitive; but does not say anything about the properties case sensistivity.   Since, in the browser I can do \ndiv { baCKgrouND-colOr: blUe; }  and it works; you would naturally assume that in NativeScript you could do the same thing...   Nope; apparently the property names are case sensitive and must be all lower case.  So why don't we have the css parser automatically lowercase the property name so that Button { Background-Color: Blue; } then works properly as expected!\n\nNow to fix this we have a couple of choices:\n1. css\\reworkcss.js on line 232 we can append a .toLowerCase() to the place the property is assigned and returned.\n2. In Style-scope, I can update the createSelectorsFromSyntaxTree function and add the toLowerCase() in their.\n3. I haven't traced this down, but where ever it goes to set the style property when the rule matches; make it case automatically lowercase the property before it assigns it.\n\nThe quickest fix is to do it in reworkcss; but that means you have your own non-stock reworkcss.js file.   I hate when that happens in my projects...\nSo I am leaning toward 2 -- so that way the fix is in the code you control -- I can do the style-scope change fairly easily and that routine should actually be more performant when I'm done.  :grinning: \n\nThoughts?\n"}, {"classified_as": "enhancement", "text": "I probably broke it when I changed the ini loading stuff to not use wxStrings. Shouldn't be to hard to debug but it's not a priority of mine, so if someone else wants to take it on in the meantime, feel free.\n"}, {"classified_as": "bug", "text": "Example:\r\njs\r\nvar Browser = require('puppeteer').Browser;\r\nvar browser = new Browser();\r\nbrowser.newPage().then(async page => {\r\n    page.on('dialog', dialog => {\r\n        dialog.accept('test');\r\n    });\r\n    console.log(await page.evaluate(() => prompt('q?')));\r\n    browser.close();\r\n});\r\n\r\n\r\nDialog accepting/dismissing throws on error on headless: \r\n>Error: Protocol error (Page.handleJavaScriptDialog): Could not handle JavaScript dialog\r\n\r\nUpstream bug: [crbug.com/718235](http://crbug.com/718235)\r\n\r\n"}, {"classified_as": "enhancement", "text": "i.e. versionString becomes versionText. We need the same logic we apply in boxing (that checks for a valid start, before replace).\r\n\r\nFix this -\r\n\r\nhttps://github.com/polkadot-js/api/pull/1951/files#diff-16721fcfbabb6adf34be1260e3ca19c3R65-R70"}, {"classified_as": "enhancement", "text": "### Steps to reproduce\r\n\r\n**Tell us about your environment:**\r\n\r\n* Puppeteer version: 1.1.1\r\n* Platform / OS version: macOS Sierra 10.12.6\r\n* URLs (if applicable): https://dpaphoto.com/\r\n* Node.js version: 9.6.1\r\n* Note: This issue does not happen when await puppeteer.launch({ headless: false });\r\n\r\n**What steps will reproduce the problem?**\r\n\r\n\r\nconst puppeteer = require('puppeteer');\r\n \r\nfunction iterateManipulatedObject () {\r\n for (const key in obj = {}) {\r\n    obj[key] = 'unexpected-key-added';\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\n(async () => {\r\n  const browser = await puppeteer.launch();\r\n  const page = await browser.newPage();\r\n  await page.goto('https://dpaphoto.com/');\r\n  const result = await page.evaluate(iterateManipulatedObject);\r\n  console.log(result);\r\n  await browser.close();\r\n})();\r\n\r\n\r\n**What is the expected result?**\r\n{}\r\n\r\n**What happens instead?**\r\n\r\n{ '__\\u0001symbol:__\\u0001symbol:react.element0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol@@0.06742652620663936':\r\n   { '@@__\\u0001symbol:__\\u0001symbol:react.element0.06742652620663936': true,\r\n     '@@__\\u0001symbol:__\\u0001symbol:react.portal0.06742652620663936': true,\r\n     '@@__\\u0001symbol:__\\u0001symbol:react.fragment0.06742652620663936': true,\r\n     '@@__\\u0001symbol:__\\u0001symbol:react.strict_mode0.06742652620663936': true,\r\n     '@@__\\u0001symbol:__\\u0001symbol:react.provider0.06742652620663936': true,\r\n     '@@__\\u0001symbol:__\\u0001symbol:react.context0.06742652620663936': true,\r\n     '@@__\\u0001symbol:__\\u0001symbol:react.async_mode0.06742652620663936': true,\r\n     '@@__\\u0001symbol:__\\u0001symbol:react.forward_ref0.06742652620663936': true,\r\n     '@@__\\u0001symbol:__\\u0001symbol:react.call0.06742652620663936': true,\r\n     '@@__\\u0001symbol:__\\u0001symbol:react.return0.06742652620663936': true,\r\n     '@@__\\u0001symbol:iterator0.067426526206639361': true,\r\n     '@@__\\u0001symbol:Symbol._hidden0.067426526206639363': true,\r\n     '@@__\\u0001symbol:Symbol.hasInstance0.067426526206639365': true,\r\n     '@@__\\u0001symbol:Symbol.isConcatSpreadable0.067426526206639366': true,\r\n     '@@__\\u0001symbol:Symbol.match0.067426526206639367': true,\r\n     '@@__\\u0001symbol:Symbol.replace0.067426526206639368': true,\r\n     '@@__\\u0001symbol:Symbol.search0.067426526206639369': true,\r\n     '@@__\\u0001symbol:Symbol.species0.0674265262066393610': true,\r\n     '@@__\\u0001symbol:Symbol.split0.0674265262066393611': true,\r\n     '@@__\\u0001symbol:Symbol.unscopables0.0674265262066393612': true,\r\n     '@@__\\u0001symbol:Symbol.toPrimitive0.067426526206639364': true,\r\n     '@@__\\u0001symbol:toStringTag0.067426526206639362': true,\r\n     '@@__\\u0001symbol:0.0674265262066393613': true,\r\n     '@@__\\u0001symbol:Symbol.asyncIterator0.0674265262066393614': true,\r\n     '@@__\\u0001symbol:Symbol.observable0.0674265262066393615': true,\r\n     '@@__\\u0001symbol:0.0674265262066393616': true },\r\n  '__\\u0001symbol:__\\u0001symbol:react.portal0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol:__\\u0001symbol:react.fragment0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol:__\\u0001symbol:react.strict_mode0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol:__\\u0001symbol:react.provider0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol:__\\u0001symbol:react.context0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol:__\\u0001symbol:react.async_mode0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol:__\\u0001symbol:react.forward_ref0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol:__\\u0001symbol:react.call0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol:__\\u0001symbol:react.return0.06742652620663936': 'unexpected-key-added',\r\n  '__\\u0001symbol:iterator0.067426526206639361': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol._hidden0.067426526206639363': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.hasInstance0.067426526206639365': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.isConcatSpreadable0.067426526206639366': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.match0.067426526206639367': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.replace0.067426526206639368': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.search0.067426526206639369': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.species0.0674265262066393610': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.split0.0674265262066393611': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.unscopables0.0674265262066393612': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.toPrimitive0.067426526206639364': 'unexpected-key-added',\r\n  '__\\u0001symbol:toStringTag0.067426526206639362': 'unexpected-key-added',\r\n  '__\\u0001symbol:0.0674265262066393613': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.asyncIterator0.0674265262066393614': 'unexpected-key-added',\r\n  '__\\u0001symbol:Symbol.observable0.0674265262066393615': 'unexpected-key-added',\r\n  '__\\u0001symbol:0.0674265262066393616': 'unexpected-key-added' }\r\n"}, {"classified_as": "bug", "text": "**Description**\r\n\r\nThe perlop docs describe the current behavior, so this doesn't contradict anything.\r\n\r\nA chained comparison in 5.31.10 appears to evaluate the middle condition twice for a tied scalar but doesn't warn about it. Since a programmer might not realize they are using a tied variable, they might see odd behavior. \r\n\r\n**Steps to Reproduce**\r\n\r\n\tuse v5.31.10;\r\n\r\n\tpackage UnstableScalar {\r\n\t\tuse parent qw(Tie::Scalar);\r\n\t\tsub TIESCALAR { bless {}, $_[0] }\r\n\t\tsub FETCH {\r\n\t\t\tmy $value = int rand 10;\r\n\t\t\tsay \"Fetching scalar with $value\";\r\n\t\t\treturn $value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\ttie my $unstable, 'UnstableScalar';\r\n\r\n\tif( 5 < $unstable < 9 ) {\r\n\t\tsay \"Found a value between 5 and 9\";\r\n\t\t}\r\n\r\nThe comparison short circuits just fine, but if the first comparison is true, the tied scalar is evaluated again (so things such as Tie::Cycle will unexpectedly progress or skip values):\r\n\r\n\r\n$ perl5.31.10 ~/Desktop/test.pl\r\nFetching scalar with 2\r\n\r\n$ perl5.31.10 ~/Desktop/test.pl\r\nFetching scalar with 0\r\n\r\n$ perl5.31.10 ~/Desktop/test.pl\r\nFetching scalar with 9\r\nFetching scalar with 2\r\nFound a value between 5 and 9\r\n\r\n$ perl5.31.10 ~/Desktop/test.pl\r\nFetching scalar with 6\r\nFetching scalar with 9\r\n\r\n\r\n**Expected behavior**\r\n\r\nI expect that the scalar would only call FETCH once and reuse the result in the second comparison. perlop says this may happen, but perhaps a warning would be useful here. Ideally, tied variables would be evaluated once.\r\n\r\nIs there a chance that the internals could recognize this and use the tied object instead of the scalar itself? This works as expected:\r\n\r\n\r\n\tif( 5 < tied($unstable)->FETCH < 9 ) {\r\n\t\tsay \"Found a value between 5 and 9\";\r\n\t\t}\r\n\r\n \r\n**Perl configuration**\r\n<!-- Please paste perl -V output just below. -->\r\n\r\nSummary of my perl5 (revision 5 version 31 subversion 10) configuration:\r\n\r\n  Platform:\r\n\tosname=darwin\r\n\tosvers=19.3.0\r\n\tarchname=darwin-2level\r\n\tuname='darwin otter.local 19.3.0 darwin kernel version 19.3.0: thu jan 9 20:58:23 pst 2020; root:xnu-6153.81.5~1release_x86_64 x86_64 '\r\n\tconfig_args='-des -Dprefix=/usr/local/perls/perl-5.31.10 -Dusedevel'\r\n\thint=recommended\r\n\tuseposix=true\r\n\td_sigaction=define\r\n\tuseithreads=undef\r\n\tusemultiplicity=undef\r\n\tuse64bitint=define\r\n\tuse64bitall=define\r\n\tuselongdouble=undef\r\n\tusemymalloc=n\r\n\tdefault_inc_excludes_dot=define\r\n\tbincompat5005=undef\r\n  Compiler:\r\n\tcc='cc'\r\n\tccflags ='-fno-common -DPERL_DARWIN -mmacosx-version-min=10.15 -fno-strict-aliasing -pipe -fstack-protector-strong -I/usr/local/include -DPERL_USE_SAFE_PUTENV'\r\n\toptimize='-O3'\r\n\tcppflags='-fno-common -DPERL_DARWIN -mmacosx-version-min=10.15 -fno-strict-aliasing -pipe -fstack-protector-strong -I/usr/local/include'\r\n\tccversion=''\r\n\tgccversion='4.2.1 Compatible Apple LLVM 11.0.0 (clang-1100.0.33.17)'\r\n\tgccosandvers=''\r\n\tintsize=4\r\n\tlongsize=8\r\n\tptrsize=8\r\n\tdoublesize=8\r\n\tbyteorder=12345678\r\n\tdoublekind=3\r\n\td_longlong=define\r\n\tlonglongsize=8\r\n\td_longdbl=define\r\n\tlongdblsize=16\r\n\tlongdblkind=3\r\n\tivtype='long'\r\n\tivsize=8\r\n\tnvtype='double'\r\n\tnvsize=8\r\n\tOff_t='off_t'\r\n\tlseeksize=8\r\n\talignbytes=8\r\n\tprototype=define\r\n  Linker and Libraries:\r\n\tld='cc'\r\n\tldflags =' -mmacosx-version-min=10.15 -fstack-protector-strong -L/usr/local/lib'\r\n\tlibpth=/usr/local/lib /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.0/lib /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib /usr/lib\r\n\tlibs=-lpthread -ldbm -ldl -lm -lutil -lc\r\n\tperllibs=-lpthread -ldl -lm -lutil -lc\r\n\tlibc=\r\n\tso=dylib\r\n\tuseshrplib=false\r\n\tlibperl=libperl.a\r\n\tgnulibc_version=''\r\n  Dynamic Linking:\r\n\tdlsrc=dl_dlopen.xs\r\n\tdlext=bundle\r\n\td_dlsymun=undef\r\n\tccdlflags=' '\r\n\tcccdlflags=' '\r\n\tlddlflags=' -mmacosx-version-min=10.15 -bundle -undefined dynamic_lookup -L/usr/local/lib -fstack-protector-strong'\r\n\r\n\r\nCharacteristics of this binary (from libperl): \r\n  Compile-time options:\r\n\tHAS_TIMES\r\n\tPERLIO_LAYERS\r\n\tPERL_COPY_ON_WRITE\r\n\tPERL_DONT_CREATE_GVSV\r\n\tPERL_MALLOC_WRAP\r\n\tPERL_OP_PARENT\r\n\tPERL_PRESERVE_IVUV\r\n\tPERL_USE_DEVEL\r\n\tPERL_USE_SAFE_PUTENV\r\n\tUSE_64_BIT_ALL\r\n\tUSE_64_BIT_INT\r\n\tUSE_LARGE_FILES\r\n\tUSE_LOCALE\r\n\tUSE_LOCALE_COLLATE\r\n\tUSE_LOCALE_CTYPE\r\n\tUSE_LOCALE_NUMERIC\r\n\tUSE_LOCALE_TIME\r\n\tUSE_PERLIO\r\n\tUSE_PERL_ATOF\r\n  Built under darwin\r\n  Compiled at Mar 27 2020 01:45:56\r\n  %ENV:\r\n\tPERL=\"/Users/brian/bin/perls/perl-latest\"\r\n\tPERL5_PATH=\"/Users/brian/bin/perls\"\r\n\tPERL6_PATH=\"/Users/brian/bin/perl6s:/Applications/Rakudo/bin:/Applications/Rakudo/share/perl6/site/bin\"\r\n\tPERLDOTCOM_AUTHOR=\"brian d foy\"\r\n  @INC:\r\n\t/usr/local/perls/perl-5.31.10/lib/site_perl/5.31.10/darwin-2level\r\n\t/usr/local/perls/perl-5.31.10/lib/site_perl/5.31.10\r\n\t/usr/local/perls/perl-5.31.10/lib/5.31.10/darwin-2level\r\n\t/usr/local/perls/perl-5.31.10/lib/5.31.10\r\n\r\n"}, {"classified_as": "enhancement", "text": "Hi, we have a model that starts with an envelope which has a single property which has a list as it's value. The objects that are in that list then have a property that is also a list of name value pairs (see model pasted below). I have seen the reference in the documentation that implies that this doesn't work (\"Containers must hold primitive or complex datatypes--nested containers are not supported.\") although I would argue that I am referencing a complex datatype so maybe it should work? \n\nEither way, here's what the UI wind up generating as the \"model schema\" for my POST:\n\n json\n{\n  \"events\": {\n    \"eventTypeCode\": \"int\",\n    \"eventTimestamp\": \"Date\",\n    \"attributes\": {\n      \"name\": \"string\",\n      \"value\": \"string\"\n    }\n  }\n}\n\n\nNote that it appears to have just ignored the List defined for the RawEventEnvelope entirely and just dropped the RawEvent model in their directly. Additionally, the List in the \"attributes\" property has been ignored as well.\n\nAm I doing something incorrectly, or is this actually unsupported. If it is unsupported, could you possibly point me in the right direction to add the logic to make this supported? I would be happy to look at adding the functionality since I have the need.\n\nOur Model:\n\n json\n\"models\": {\n        \"RawEvent\": {\n            \"properties\" : {\n                \"eventTypeCode\": {\n                    \"type\": \"int\"\n                },\n                \"eventTimestamp\": {\n                    \"type\": \"Date\"\n                },\n                \"attributes\": {\n                    \"type\": \"List\",\n                    \"items\":{\n                       \"$ref\":\"RawAttributeValue\"\n                    }\n                }\n\n            }\n        },\n        \"RawAttributeValue\": {\n            \"properties\" : {\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"RawEventEnvelope\": {\n            \"properties\" : {\n                \"events\":{\n                        \"type\":\"List\",\n                        \"items\":{\n                           \"$ref\":\"RawEvent\"\n                        }\n                }\n            }\n        }\n    }\n\n"}, {"classified_as": "enhancement", "text": "ActivityIndicator color cannot be set via CSS. For example:\n\n CSS\nActivityIndicator {\n color: red;\n}\n\n"}, {"classified_as": "bug", "text": "**OS:**\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 18.04.1 LTS\r\nRelease:        18.04\r\nCodename:       bionic\r\n\r\n**Environment config:**\r\n\r\nnodejs -v\r\nv10.9.0\r\n\r\nnpm -v\r\n6.2.0\r\n\r\nmongod --version\r\ndb version v4.0.1\r\ngit version: 54f1582fc6eb01de4d4c42f26fc133e623f065fb\r\nOpenSSL version: OpenSSL 1.1.0g  2 Nov 2017\r\nallocator: tcmalloc\r\nmodules: none\r\nbuild environment:\r\n    distmod: ubuntu1804\r\n    distarch: x86_64\r\n    target_arch: x86_64\r\n\r\n**Strapi using deprecated sprintf package:**\r\n\r\nnpm install strapi@alpha -g\r\nnpm WARN deprecated sprintf@0.1.5: The sprintf package is deprecated in favor of sprintf-js.\r\n\r\n**Comment:**\r\nCan you replace _sprintf_ package with _sprintf-js_ package? Thank you."}, {"classified_as": "bug", "text": "I found an edge case where webfonts don't seem to be loaded for PDF rendering, unless you trigger a screenshot first:\r\n\r\njs\r\nvar puppeteer = require('puppeteer')\r\n\r\nvar document = \r\n    <!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n      <style>\r\n        @import url(https://fonts.googleapis.com/css?family=Signika);\r\n        body {\r\n          font-family: 'Signika', sans-serif;\r\n        }\r\n      </style>\r\n    </head>\r\n    <body>\r\n      <h1>Hello world!</h1>\r\n    </body>\r\n    </html>\r\n  \r\n\r\npuppeteer.launch().then(async browser => {\r\n  let page = await browser.newPage()\r\n  await page.setContent(document)\r\n  // await page.screenshot() // <= Will render a blank PDF without this line\r\n  await page.pdf({\r\n    path: 'print.pdf',\r\n    format: 'A4'\r\n  })\r\n  browser.close()\r\n});\r\n\r\n\r\nInspecting the PDF without triggering a screenshot reveals only a single obj, which I suspect is the text: \r\n\r\n\r\n2 0 obj\r\n<</Filter /FlateDecode\r\n/Length 96>> stream\r\nx\u00ef\u00bf\u00bd3T0\u0000B]C aab\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdU\u00ef\u00bf\u00bd\u0005\u00121\u00ef\u00bf\u00bd4\u0005\r\n\u0018\u00ef\u00bf\u00bdY\u00ef\u00bf\u00bd\u001a\u00ef\u00bf\u00bd+\u0014\u00ef\u00bf\u00bdr\u00ef\u00bf\u00bdk)\u00ef\u00bf\u00bd\u0001\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdM\r\n\u00ef\u00bf\u00bd\r\nM\u00ef\u00bf\u00bdL\u00ef\u00bf\u00bd\u00ef\u00bf\u00bdPy@\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\r\n \u0018\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u0000a\u0014\u00ef\u00bf\u00bds\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u001b(\u00ef\u00bf\u00bd\u0017\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd4\u00ef\u00bf\u00bd4V0442\u0002\u0019\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u0015\b\u00ef\u00bf\u00bd\u0000\r\nh\u0018\u00ef\u00bf\u00bd\r\nendstream\r\nendobj\r\n\r\n\r\nAfter the screenshot the font is registered as a obj as well."}, {"classified_as": "bug", "text": "I think it is like a little bug in documentation:\r\n\r\nLook at https://strapi.io/documentation/3.0.0-beta.x/advanced/hooks.html\r\ninside initialize, this is a Function \r\n\r\n![image](https://user-images.githubusercontent.com/7165997/62385239-cea04100-b554-11e9-8e00-08aa13c3214a.png)\r\n\r\nif we want to get access to hook config (from defaults) inside initialize function, we can get it:\r\nthis().defaults['myConfig'] or strapi.config.hook.settings.myhook['myConfig']\r\n\r\n**System**\r\n- Node.js version: 10.15.1\r\n- NPM version: 6.4.1\r\n- Strapi version: 3.0.0-beta.13"}, {"classified_as": "enhancement", "text": "I have several operations defined in my api's with an httpMethod of POST, and in my index.html the supportedSubmitMethods array does contain 'post', however when I attempt to test these endpoints, they are sent via a GET ajax request, not a POST.\n\nIs there any other requirements to get them to be submitted as a POST request? For instance these operations do include some \"query\" type parameters, as I want them in the query string, not the post data - but that shouldn't prevent it from being a POST request should it?\n"}, {"classified_as": "enhancement", "text": "+cannot mapping input of gamepad\r\n+wrong work button: gamepad work but it not work right in MMJoystick mode:\r\nFor ex: button 4:X, button 2:circle; button 3:triggle; button 1 square.  it should be   button 1: X; button 2: circle; button 3: square button 4: triggle,...\r\ni think you should change the default setting like the last build or fix the remapping in config, i can't not input gamepad key but it can be work ingame: so strange( not work right lol) \r\n![dsd](https://user-images.githubusercontent.com/34053443/33306551-99fb2920-d445-11e7-8653-33954a620bae.JPG)\r\n\r\n![24169359_1020165694792366_155068374_o](https://user-images.githubusercontent.com/34053443/33306561-a7125674-d445-11e7-9e3a-0bf13201ae27.jpg)\r\nhttps://guides.github.com/features/mastering-markdown/\r\n![24167221_1020165671459035_767994502_o](https://user-images.githubusercontent.com/34053443/33306566-aa7cb048-d445-11e7-8812-857f3f9bb28e.jpg)\r\n\r\n"}, {"classified_as": "bug", "text": "\r\n![screen shot 2017-09-21 at 7 37 02 pm](https://user-images.githubusercontent.com/12194969/30693950-6bde622a-9e97-11e7-8b2c-9f3ae0fd6e93.png)\r\n"}, {"classified_as": "bug", "text": "**Informations**\r\n- **Node.js version**:\r\nv9.11.1\r\n- **npm version**:\r\n5.6.0\r\n- **Strapi version**:\r\n3.0.0-alpha.12.2\r\n- **Database**:\r\nMongoDB\r\n3.6.3\r\n- **Operating system**:\r\nMacOS 10.12\r\n\r\n\r\n**What is the current behavior?**\r\nNow I choose Chinese Simplify Language(ZH-HANS) in admin UI, and the next time when i reload the page in browser , the UI load the Language (ZH) in admin UI\r\n\r\nhttps://github.com/strapi/strapi/blob/master/packages/strapi-admin/admin/src/containers/LanguageProvider/reducer.js#L27\r\n\r\n\r\n// Detect user language.\r\nconst userLanguage = window.localStorage.getItem(localStorageKey) ||  window.navigator.language ||  window.navigator.userLanguage;\r\n\r\n// Split user language in a correct format.\r\nconst userLanguageShort = get(split(userLanguage, '-'), '0');\r\n\r\n// Check that the language is included in the admin configuration.\r\nconst foundLanguage = includes(languages, userLanguageShort) && userLanguageShort;\r\n\r\nconst initialState = fromJS({\r\n  locale: foundLanguage || first(languages) || 'en',\r\n});\r\n\r\n\r\nlooks like the code here will always load the short user language code (eg, zh for zh-hans, zh-hant )\r\n\r\n\r\n**Steps to reproduce the problem**\r\n1. create a new project, install project and start the server.\r\n2. login in the admin portal, then set my language By Click the Button in Right Top Corner, and then switch to ZH-HANS.\r\nThe language become ZH-HANS and the strapi-admin-language become zh-hans in LocalStorage. Until now all works on my side.\r\n3.  when next time i login into the admin portal, or just reload the page in browser,\r\nMy language become ZH. \r\n\r\n**What is the expected behavior?**\r\nIn Step 3, The admin UI should load the language i set in step 2.\r\n\r\n**Suggested solutions**\r\n\r\ntry load the whole language code first, and then load the short language code if the whole language not exist.\r\n\r\n\r\n<!--  Make sure to browse the opened and closed issues before submit your issue. -->\r\n"}, {"classified_as": "bug", "text": "**Informations**\r\n- **Node.js version**: v10\r\n- **npm version**: v6\r\n- **Strapi version**: 14.5\r\n- **Database**: MySQL (MariaDB 10.2)\r\n- **Operating system**: Linux Mint 19 (Ubuntu 18.04)\r\n\r\n\r\n**What is the current behavior?**\r\n\r\nWhen using bookshelf with MySQL if you leave a date field empty it will auto-fill with the current date.\r\n\r\n**Steps to reproduce the problem**\r\n\r\nCreate a model with a date field, create an entry and leave the date field empty. The database will auto-fill the date field with the current date/time\r\n\r\n**What is the expected behavior?**\r\n\r\nDate should remain empty until provided a value\r\n\r\n**Suggested solutions**\r\n\r\nModify the creation script to default to null, only created_at and updated_at should auto-fill and updated_at should update when a PUT request is made."}, {"classified_as": "enhancement", "text": ""}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n**Informations**\r\n\r\n- **Node.js version**: 10.1.0 (with nvm)\r\n- **npm version**: 6.1.0\r\n- **Strapi version**: 3.0.0-alpha.12.7.1\r\n- **Database**: mongo\r\n- **Operating system**: macOS 10.12.6\r\n\r\n**What is the current behavior?**\r\nWhen uploading to S3, all objects are saved as application/octet-stream type.\r\n\r\n**Steps to reproduce the problem**\r\n\r\n- Upload a file with the strapi-upload-aws-s3 plugin\r\n- Click to see the file, get prompted with a download\r\n- Inspect the object uploaded to S3 and check its metadata, Content-Type is set to application/octet-stream\r\n\r\n**What is the expected behavior?**\r\nWhen uploading to S3, the saved object should have the correct mime type.\r\n\r\n**Suggested solutions**\r\nAdd the ContentType attribute to the S3 upload params object and set it with file.mime\r\n\r\nDisclaimer: First time contributing to the project and Open Source in general, so if there is something that I am doing wrong, sorry.\r\n\r\nI have tried and debugged this solution in my project and it worked fine. Maybe this was left out for other use cases, but in the case of images, is handy to have the mime type already declared in the object within the bucket.\r\n\r\nI could provide a PR if you want with the snippet I used and worked:\r\njavascript\r\nS3.upload({\r\n   Key: ${file.hash}${file.ext},\r\n   Body: new Buffer(file.buffer, 'binary'),\r\n   ContentType: file.mime,\r\n   ACL: 'public-read'\r\n}\r\n\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n"}, {"classified_as": "bug", "text": "<sup>Issue template didn't really apply.</sup>\r\n\r\nI can't find anything in the api docs page about error handling. The main type of error that's encountered is a timeout. The issue is that there's no documented way to distinguish the type of error received in the catch after awaiting a promise that rejects.\r\n\r\nThe issue is that good code (most of the time) needs to do conditional catches to avoid silencing unexpected errors. There doesn't seem to be a good, stable way to do this currently.\r\n\r\nI tried inspecting some of the errors. For these tests, the output is logging error and then logging {...error}.\r\n\r\njs\r\nawait page.click('doesntexist');\r\n\r\n// Result\r\n{ AssertionError [ERR_ASSERTION]: No node found for selector: doesntexist\r\n    at Console.assert (console.js:188:23)\r\n    at Page.click (/private/tmp/temp-puppet-7695/node_modules/puppeteer/lib/Page.js:770:13)\r\n    at <anonymous>\r\n    at process._tickCallback (internal/process/next_tick.js:188:7)\r\n  generatedMessage: false,\r\n  name: 'AssertionError [ERR_ASSERTION]',\r\n  code: 'ERR_ASSERTION',\r\n  actual: false,\r\n  expected: true,\r\n  operator: '==' }\r\n{ generatedMessage: false,\r\n  name: 'AssertionError [ERR_ASSERTION]',\r\n  code: 'ERR_ASSERTION',\r\n  actual: false,\r\n  expected: true,\r\n  operator: '==' }\r\n\r\n\r\nGives a generic AssertionError with no information about the cause, except if you want to parse the error message, which seems very unstable as it can change without much notice.\r\n\r\nThe next issue is waitFor:\r\n\r\njs\r\nawait page.waitFor('doesntexist');\r\n\r\n// Result\r\nError: waiting failed: timeout 30000ms exceeded\r\n    at Timeout.WaitTask._timeoutTimer.setTimeout (/private/tmp/temp-puppet-7695/node_modules/puppeteer/lib/FrameManager.js:593:58)\r\n    at ontimeout (timers.js:475:11)\r\n    at tryOnTimeout (timers.js:310:5)\r\n    at Timer.listOnTimeout (timers.js:270:5)\r\n{}\r\n\r\n\r\nAgain, the only way I see to extract information is the error message.\r\n\r\n---\r\n\r\nThere are a few potential solutions here:\r\n\r\n1. document the error messages and give an example regex to check them. This requires no code changes, but makes it clear that the error messages changing would be a breaking change. \r\n2. don't change the errors, but give official utility functions like puppeteer.isTimeoutError(error). Very little code changes, but the api will be stable across versions. Better than 1.\r\n3. make each error either an Error subclass, or give it properties e.g. type: 'PuppeteerTimeout', selector: 'doesntexist'. This is about tied with 2, since it gives a readable way to check the error type.\r\n\r\n\r\nThoughts? Sorry if this has come up before, but I couldn't find anything relevant."}, {"classified_as": "enhancement", "text": "Hi,\r\n\r\nWhen creating PDFs from a responsive web page, lets say the page has a css rule to show a narrower version below 1024 pixels screen width and we supply width: \"1024px\" to pdf function. The rule should not apply on this case however it does and the layout changes in generated pdf. \r\n\r\nOnly when the width parameter is **4/3** of the actual width of viewport, then the pdf has exact same layout of given viewport width. This seems to be something related to an inches / points confusion somewhere (96 pixels per inch, 72 pixels per point. 96/72 = 4/3)\r\n\r\nSo, when I provide 1365px as pdf width I get the exact representation of the page at 1024px viewport width. Anything below 1365px, page acts like the viewport is below 1024px and applies the appropriate responsive css rules.\r\n\r\nI'm not sure if this is an upstream bug or something else though. Margins are set to 0 btw. \r\n\r\nAny ideas?"}, {"classified_as": "bug", "text": "**Informations**\r\n- **Node.js version**: v10.8.0\r\n- **npm version**: 6.2.0\r\n- **Strapi version**: 3.0.0-alpha.13.0.1\r\n- **Database**: mongodb\r\n- **Operating system**: macOS High Sierra\r\n\r\n\r\n**What is the current behavior?**\r\nWhen entering a period in a number field inside a Content Type for any of the three available number formats, any number that was already entered is removed and replaced by a 0. The 0 cannot be removed after. It can only be changed with the up/down arrows. A coma for decimal separation seems to work which is no good for me.\r\n\r\n\r\n**Steps to reproduce the problem**\r\nCreate a Content Type, add any of the available number fields to it. Go to make a new entry in your new Content Type. Type a few numbers in a number field and then try typing a period.\r\n\r\n\r\n**What is the expected behavior?**\r\nBeing able to have a period for decimal separation. Not having to refresh to remove the 0 that gets stuck in the field.\r\n\r\n**Suggestions**\r\nMaybe remove the up down arrows? Seems pointless to me for a simple number input.\r\n"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 9.x.x -->\r\n<!-- npm 5.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**: 9.11\r\n- **npm version**: 5.6\r\n- **Strapi version**: 3.0.0-alpha.12.6\r\n- **Database**: mongo\r\n- **Operating system**: windows 10 LTSB\r\n\r\n\r\n**What is the current behavior?**\r\n\r\nlanguage - not work, error in console \r\n![image](https://user-images.githubusercontent.com/8849299/42117286-6a841348-7c04-11e8-9ae3-45233e79be70.png)\r\n\r\n\r\n**Steps to reproduce the problem**\r\n\r\nstrapai start\r\n\r\n**What is the expected behavior?**\r\n\r\nis correct switch language\r\n\r\n**Suggested solutions**\r\n\r\n\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n"}, {"classified_as": "enhancement", "text": ""}, {"classified_as": "bug", "text": "Env:\r\nMacBook, Node v10.8.0\r\n\u00e2\u201d\u0153\u00e2\u201d\u20ac puppeteer-har@1.0.2\r\n\u00e2\u201d\u0153\u00e2\u201d\u20ac puppeteer@1.7.0\r\n\r\nIssue:\r\nAdding DNT Header doesn't populate navigator.doNotTrack. Please let me know if you have any questions. I was also having trouble activating this using the chrome modHeader extension. I only had luck activating navigator.doNotTrack by changing privacy settings for my user in chrome (not chromium).\r\njavascript \r\n// in async function\r\nconst headerOptions = ['1', '0'];\r\nfor (header of headerOptions) {\r\n    for (url of urls) {\r\n      try {\r\n        await page.setExtraHTTPHeaders({'DNT': header})\r\n        await page.goto(${hostName}${url}, {timeout: 35000, waitUntil: ['networkidle0', 'load']});\r\n        await page.waitFor(500);\r\n        const doNotTrackValue = await page.evaluate(() => navigator.doNotTrack || window.doNotTrack || navigator.msDoNotTrack);\r\n        const currentURL = await page.url();\r\n        data.push([currentURL, doNotTrackValue]);\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    fs.writeFileSync(./domState${header}.json, JSON.stringify(data), {flags: 'w'});\r\n  }\r\n\r\n\r\nI expected navigator.doNotTrack to equal '1' or '0' depending on the iteration\r\n\r\ninstead navigator.doNotTrack equals null\r\n\r\n"}, {"classified_as": "enhancement", "text": "I am passing ImageSource into ImageCache.set(key, image) and just hang. Try to look at the documentation where it just says as following but I don't think it is helpful. \n\n\nset\nset(key: string, image: any): void\nOverwrites Observable.set\nDefined in ui/image-cache/image-cache.d.ts:68\nSets the image for the specified key.\n\nParameters\n\nkey: string\n\nimage: any\n\nReturns void\n\n\nWhat image type can be passed into ImageCache.set(key, image). Why hang passing ImageSource which is commonly using in NativeScript.\n\nNote: I highly recommend to improve the documentation. Other sections like cookbook are ok but api reference is really poor (as shown above). Lack of detail or example. Hope can be improved soon.\n"}, {"classified_as": "bug", "text": "# Overview\r\nI'm looking for a simpler way to handle clicking on links which open new pages (like target=\"_blank\" anchor tags). \r\n\r\nHere handle means:\r\n- get the new page object\r\n- wait for the new tab to load (with timeout)\r\n\r\n<!--\r\nSTEP 1: Are you in the right place?\r\n\r\n- For general technical questions or \"how to\" guidance, please search StackOverflow for questions tagged \"puppeteer\" or create a new post.\r\n\r\nhttps://stackoverflow.com/questions/tagged/puppeteer\r\n\r\n- For issues or feature requests related to the DevTools Protocol (https://chromedevtools.github.io/devtools-protocol/), file an issue there:\r\n\r\nhttps://github.com/ChromeDevTools/devtools-protocol/issues/new.\r\n\r\n- Problem in Headless Chrome? File an issue against Chromium's issue tracker:\r\n\r\nhttps://bugs.chromium.org/p/chromium/issues/entry?components=Internals%3EHeadless&blocking=705916\r\n\r\nFor issues, feature requests, or setup troubles with Puppeteer, file an issue right here!\r\n-->\r\n\r\n### Steps to reproduce\r\n\r\n**Tell us about your environment:**\r\n\r\n* Puppeteer version: ^1.11.0\r\n* Platform / OS version:  64-bit, win 10 pro\r\n* URLs (if applicable): none\r\n* Node.js version: v10.15.0\r\n\r\nI've looked at related issues:\r\n#386 \r\n#3535 \r\n#978\r\nand more\r\n\r\n\r\n**What steps will reproduce the problem?**\r\n_I've included the code snippet below_\r\n\r\nI'm trying to:\r\n1. Get the object for the new page when clicking on a link opens a new tab. (The links are dynamically generated, capturing href might not be the most elegant way)\r\n2. Wait till the new page loads (with timeout). I'd like it if you can use page.waitForNavigation for consistency\r\n3. close the tab and return the earlier tab to continue further operations\r\n\r\n\r\n\r\n_Please include code that reproduces the issue._\r\n\r\n// as referenced here on #386 : https://github.com/GoogleChrome/puppeteer/issues/386#issuecomment-425109457\r\n    const getNewPageWhenLoaded =  async () => {\r\n        return new Promise(x =>\r\n            global.browser.on('targetcreated', async target => {\r\n                if (target.type() === 'page') {\r\n                    const newPage = await target.page();\r\n                    const newPagePromise = new Promise(y =>\r\n                        newPage.once('domcontentloaded', () => y(newPage))\r\n                    );\r\n                    const isPageLoaded = await newPage.evaluate(\r\n                        () => document.readyState\r\n                    );\r\n                    return isPageLoaded.match('complete|interactive')\r\n                        ? x(newPage)\r\n                        : x(newPagePromise);\r\n                }\r\n            })\r\n        );\r\n    };\r\n\r\n\r\nconst newPagePromise = getNewPageWhenLoaded();\r\nawait page.click('my-link'); // or just do await page.evaluate(() => window.open('https://www.example.com/'));\r\nconst newPage = await newPagePromise;\r\n\r\n\r\n\r\n\r\n**What is the expected result?**\r\nAn easier and consistent way to handle new tabs\r\n\r\n\r\n**What happens instead?**\r\nThe developer has to write what looks like plumbing (internal/ low level) commands.\r\nUsage of waitForTarget might simplify this, but I've not been able to get the predicate to return the right types. Here's my non-functional code\r\n\r\n\r\nprivate async getNewPageWhenLoaded() {\r\n        const newTarget = await this._browser.waitForTarget(async (target) => {\r\n            const newPage = await target.page();\r\n            await newPage.waitForNavigation(this._optionsNavigation);\r\n            // const newPagePromise = new Promise(() => newPage.once('load', () => x(newPage)));\r\n            return await newPage.evaluate(\"true\");\r\n        });\r\n        return await newTarget.page();\r\n    }\r\n\r\n// elsewhere in the code\r\n            const newPagePromise = this.getNewPageWhenLoaded();\r\n            await resultItem.element.click();\r\n            const newPage = <Page>await newPagePromise;\r\n\r\n//I get the following error\r\nDevTools listening on ws://127.0.0.1:31984/devtools/browser/bf86648d-d52d-42d8-a392-629bf96211d4\r\n(node:5564) UnhandledPromiseRejectionWarning: Error: Navigation failed because browser has disconnected!\r\n    at CDPSession.LifecycleWatcher._eventListeners.helper.addEventListener (<path-to-my-project>\\node_modules\\puppeteer\\lib\\FrameManager.js:1181:107)\r\n    at CDPSession.emit (events.js:182:13)\r\n    at CDPSession._onClosed (<path-to-my-project>\\node_modules\\puppeteer\\lib\\Connection.js:231:10)\r\n    at Connection._onMessage (<path-to-my-project>\\node_modules\\puppeteer\\lib\\Connection.js:103:19)\r\n    at WebSocketTransport._ws.addEventListener.event (<path-to-my-project>\\node_modules\\puppeteer\\lib\\WebSocketTransport.js:41:24)\r\n    at WebSocket.onMessage (<path-to-my-project>\\node_modules\\ws\\lib\\event-target.js:120:16)\r\n    at WebSocket.emit (events.js:182:13)\r\n    at Receiver.receiverOnMessage (<path-to-my-project>\\node_modules\\ws\\lib\\websocket.js:741:20)\r\n    at Receiver.emit (events.js:182:13)\r\n    at Receiver.dataMessage (<path-to-my-project>\\node_modules\\ws\\lib\\receiver.js:417:14)\r\n  -- ASYNC --\r\n    at Frame.<anonymous> (<path-to-my-project>\\node_modules\\puppeteer\\lib\\helper.js:144:27)\r\n    at Page.waitForNavigation (<path-to-my-project>\\node_modules\\puppeteer\\lib\\Page.js:644:49)\r\n    at Page.<anonymous> (<path-to-my-project>\\node_modules\\puppeteer\\lib\\helper.js:145:23)\r\n    at newTarget._browser.waitForTarget (<path-to-my-project>\\pageObjects\\MyPage.js:104:27)\r\n    at process._tickCallback (internal/process/next_tick.js:68:7)\r\n(node:5564) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)\r\n(node:5564) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\r\n(node:5564) UnhandledPromiseRejectionWarning: TimeoutError: Navigation Timeout Exceeded: 300000ms exceeded\r\n    at Promise.then (<path-to-my-project>\\node_modules\\puppeteer\\lib\\FrameManager.js:1276:21)\r\n  -- ASYNC --\r\n    at Frame.<anonymous> (<path-to-my-project>\\node_modules\\puppeteer\\lib\\helper.js:144:27)\r\n    at Page.waitForNavigation (<path-to-my-project>\\node_modules\\puppeteer\\lib\\Page.js:644:49)\r\n    at Page.<anonymous> (<path-to-my-project>\\node_modules\\puppeteer\\lib\\helper.js:145:23)\r\n    at newTarget._browser.waitForTarget (<path-to-my-project>\\pageObjects\\MyPage.js:104:27)\r\n    at process._tickCallback (internal/process/next_tick.js:68:7)\r\n(node:5564) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 2)\r\n"}, {"classified_as": "bug", "text": "**Informations**\r\n- **Node.js version**: v10\r\n- **NPM version**: v6\r\n- **Strapi version**: v19 (also with v20/v21\r\n- **Database**: MySQL\r\n- **Operating system**: Ubuntu 18.04\r\n- **(Optional) Link to your Project**: N/A\r\n\r\n**What is the current behavior?**\r\n\r\nLink to Strapi docs and Swagger plugin are too similar: \r\n![image](https://user-images.githubusercontent.com/8593673/52257077-6db1ec00-28d6-11e9-98e7-010cf0d85a2d.png)\r\n\r\n\r\n**Steps to reproduce the problem**\r\n\r\nN/A Fresh project\r\n\r\n**What is the expected behavior?**\r\n\r\nShould rename one or the other as could cause confusion to end users\r\n\r\n**Suggested solutions**\r\n\r\nRename Documentation to something like Strapi Docs"}, {"classified_as": "bug", "text": "Updating a file record with a new image should replace the current file with the new one."}, {"classified_as": "enhancement", "text": "For example, if you navigate with a slide transition, you can see how the new page slides into view. The old page disappears immediately instead of gradually sliding out of view.\n"}, {"classified_as": "enhancement", "text": "With https://crrev.com/683391, chrome no longer throws exceptions when not executing inline script tags due to CSP.\r\n\r\nWe can fix this with probing runtime first - checking if inline scripts have any power. Alternatively, we might want to check current page CSP policy."}, {"classified_as": "bug", "text": "<!--\r\nHello \u00f0\u0178\u2018\u2039 Thank you for submitting an issue.\r\n\r\nBefore you start, please make sure your issue is understandable and reproducible.\r\nTo make your issue readable make sure you use valid Markdown syntax.\r\n\r\nhttps://guides.github.com/features/mastering-markdown/\r\n-->\r\n\r\n**Describe the bug**\r\nWhen editing content of an entry through the Admin panel, if the user **accidentally** navigates to another page without saving the change, there is no prompt to warn them that the unsaved change will be lost. \r\n\r\n**Accidentally navigating to another page can easily happen, and it would be disappointing if a user has entered a lot of content, and losing them by this simple mistake.**\r\n\r\n**Steps to reproduce the behavior**\r\n1. Assuming the content type Restaurant exists, with a field called description for rich text description\r\n2. On the Admin Panel, navigate to \"Create an Entry\" for Restaurant\r\n3. Enter text to the description field, but **without clicking on the \"Save\" button**\r\n4. Navigate to another page within the Admin Panel, such as browsing to another content type through the sidebar. \r\n5. Observe that no warning or prompt is shown, but when coming back to \"Create an (restaurant) Entry\", the previously entered description is lost. \r\n\r\n**Expected behavior**\r\nA prompt is shown, such as \"Your unsaved content will be lost.\" With option to 1) \"Discard un-saved change\" (and proceed to where the user intended to go) or 2) \"Stay on the page\".\r\n\r\n**Screenshots**\r\nN/A.\r\n\r\n**Code snippets**\r\nN/A\r\n\r\n**System**\r\nDocker for Mac, Docker version 19.03.1, build 74b1e89\r\n\r\n**Additional context**\r\nN/A\r\n"}, {"classified_as": "bug", "text": "If you attempt to require('package-name') using v13.7.0 in the repl it will fail with a 'MODULE_NOT_FOUND' error.\r\n\r\njs\r\n// index.js\r\nconsole.log('yay')\r\n// package.json\r\n{\r\n  \"name\": \"ohno\",\r\n  \"main\": \"./index.js\"\r\n}\r\n\r\nbash\r\n$ node\r\n> require('ohno')\r\n\r\n> Uncaught Error: Cannot find module 'ohno'\r\n> Require stack:\r\n> - <repl>\r\n>     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:980:15)\r\n>     at Function.Module._load (internal/modules/cjs/loader.js:862:27)\r\n>     at Module.require (internal/modules/cjs/loader.js:1040:19)\r\n>     at require (internal/modules/cjs/helpers.js:72:18) {\r\n>   code: 'MODULE_NOT_FOUND',\r\n>   requireStack: [ '<repl>' ]\r\n> }\r\n\r\nbash\r\n$ node -r ./index.js\r\nyay\r\n\r\nbash\r\n$ node -r ohno\r\n\r\n> internal/modules/cjs/loader.js:983\r\n>   throw err;\r\n>   ^\r\n> \r\n> Error: Cannot find module 'ohno'\r\n> Require stack:\r\n> - internal/preload\r\n>     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:980:15)\r\n>     at Function.Module._load (internal/modules/cjs/loader.js:862:27)\r\n>     at Module.require (internal/modules/cjs/loader.js:1040:19)\r\n>     at Module._preloadModules (internal/modules/cjs/loader.js:1296:12)\r\n>     at loadPreloadModules (internal/bootstrap/pre_execution.js:435:5)\r\n>     at prepareMainThreadExecution (internal/bootstrap/pre_execution.js:68:3)\r\n>     at internal/main/repl.js:18:1 {\r\n>   code: 'MODULE_NOT_FOUND',\r\n>   requireStack: [ 'internal/preload' ]\r\n> }"}, {"classified_as": "enhancement", "text": "Some things need to happen together or not at all (fileinfo updates, global list updates, and need index updates). This needs to happen in a transaction so that atomicness is guaranteed. Our current batches are close but no cigar."}, {"classified_as": "enhancement", "text": "If/when I add more than 5 items to my TabView component the app crashes. This is for sure a bug. According to iOS dev library, if you add more than 5 items to the Tab controller, it will automatically add a \"More\" button in the last position, so when you tap it, it will show the other items in a list. Very neat.\n\nDoes this also apply in {N}? It should. Otherwise we have to create a \"More\" Item specifically, add listView innside, populate the list with data for each menu item. Program the tap for each listViewItem, that will also cause a page-navigation away from the view with the original TabView component, etc... Too much work and hassle compared to the native way. \n\n> The More Navigation Controller\n> The tab bar has limited space for displaying your custom items. If you add six or more custom view controllers to a tab bar controller, the tab bar controller displays only the first four items plus the standard More item on the tab bar. Tapping the More item brings up a standard interface for selecting the remaining items.\n"}, {"classified_as": "bug", "text": "**Describe the bug**\r\nWhen using uuid as a primary key, it is treated as a relation instead of a simple property (uuid). Icon for uuid doesn't exist as well.\r\n\r\n**Screenshots**\r\n<img width=\"824\" alt=\"Screenshot 2019-10-23 at 16 33 27\" src=\"https://user-images.githubusercontent.com/11333362/67403913-e4049480-f5b2-11e9-836a-b5e1db4f0588.png\">\r\n\r\n**System**\r\n- Node.js version: 12.1.0\r\n- NPM version:\r\n- Strapi version: 3.0.0-beta.17.3\r\n- Database: postgres\r\n- Operating system: MacOS\r\n"}, {"classified_as": "enhancement", "text": "Another irritating bug I found was the following, regarding collapsing/expanding sections:\r\n\r\nTaking the following div example from the UI, the expand/collapse only works on all children within the <h4 class=\"opblock-tag\"> html tag, and not on the <h4 class=\"opblock-tag\"> itself. So, you have to click almost dead center inside the h4.\r\n\r\nhtml\r\n<div class=\"opblock-tag-section\">\r\n\t<h4 class=\"opblock-tag\">\r\n\t\t<span>auth</span>\r\n\t\t<small>Authorization Section</small>\r\n\t\t<button class=\"expand-operation\" title=\"Expand operation\">\r\n\t\t\t<svg class=\"arrow\" width=\"20\" height=\"20\">\r\n\t\t\t\t<use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#large-arrow\"></use>\r\n\t\t\t</svg>\r\n\t\t</button>\r\n\t</h4>\r\n\t<noscript></noscript>\r\n</div>\r\n\r\n\r\n## UPDATE: \r\nI actually found out that the click does work on the h4, but not on the padded area around the h4. You have to click in the center of the h4. If you click on the padded area around the h4 then click does not work. Strange is, it does work correctly on the Models header, although that also has a padded area around its h4.\r\n\r\n**THE NON-WORKING ONE:**\r\n\r\nimage\r\n![image](https://cloud.githubusercontent.com/assets/1152458/26056673/a2768546-3976-11e7-81bc-3abd12a9b91a.png)\r\n\r\n\r\n**THE WORKING ONE:**\r\n\r\nimage\r\n![image](https://cloud.githubusercontent.com/assets/1152458/26056680/a8c9b418-3976-11e7-896e-4b928ccc15a7.png)\r\n"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!-- =============================================================================== -->\r\n<!--  If you are not using the current Strapi release, you will be asked to update. -->\r\n<!-- Please see the wiki for guides on upgrading to the latest release. -->\r\n<!-- =============================================================================== -->\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 10.x.x -->\r\n<!-- npm 6.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**: 10.15.1\r\n- **NPM version**: 6.4.1\r\n- **Strapi version**: 3.0.0-alpha.21\r\n- **Database**: Mongo\r\n- **Operating system**: Mac osMojave 10.14.2\r\n- **(Optional) Link to your Project**: <!-- To speedup support, if you have your project on github/gitlab you can provide a link -->\r\n\r\n\r\n**What is the current behavior?**\r\nWhen a content type contains a Media field (file upload), the file size is persisted to the database as a String. If GraphQL queries with aggregation are made on the size field it will fail.\r\n\r\n\r\n**Steps to reproduce the problem**\r\nAdd a Media field to a content type, and view the UploadFile schema in the GraphQL playground or view the upload_file collection in the database. Both instances will show that size is being persisted as a String.\r\n\r\n\r\n**What is the expected behavior?**\r\nupload_file should persist size as a Double.\r\n\r\n\r\n**Suggested solutions**\r\nChange upload_file size from String to Double.\r\n"}, {"classified_as": "enhancement", "text": "when using btreemap in decl_storage:\r\n\r\n\r\ndecl_storage! {\r\n    trait Store for Module<T: Trait> as Storage {\r\n    ...\r\n    Book get(get_book): map T::AssetId => BTreeMap<T::Balance, Vec<T::Hash>>;\r\n    ...\r\n    }\r\n}\r\n\r\n\r\n\r\npolkadot-js has an error like ### **\"API/DECORATOR: Error: FATAL: Unable to initialize the API: Unhandled: Unable to create and validate type from BTreeMap<Balance,Vec<Hash>>\"**\r\nIt seems that we need to add an case for btreemap in @polkadot/metadata/Metadata/util/validateTypes.js"}, {"classified_as": "bug", "text": "**Describe the bug**\r\nIm adding content to the strapi server and its getting really slow. \r\ni do have 67 elements and the api response time is about 9-12 seconds\r\n\r\nthe content type does not have any relational content. is like this:\r\n- 1 enum\r\n- 2 booleans\r\n- image\r\n- repeatable content with 2 images. (usually 10-15 components each)\r\n\r\nIm just trying to get all the content in the api call.\r\n\r\n**Expected behavior**\r\nNot to take seconds on the api response\r\n\r\n**Screenshots**\r\nN/A\r\n**Code snippets**\r\nN/A\r\n\r\n\r\n**System**\r\n- Node.js version: 12.14.1\r\n- NPM version: 6.13.4\r\n- Strapi version: v3.0.0-beta.18.7\r\n- Database: mongodb\r\n- Operating system: ubuntu 18.04\r\n\r\nWhen the Strapi admin panel list the items its also slow, probably the same time (9-12 seconds)\r\n\r\n"}, {"classified_as": "enhancement", "text": "If you hit the close button instead of the save button, it still saves every change you made.\n"}, {"classified_as": "enhancement", "text": "Create a new {N} project.\nOn a button click add a new button\nOn a second button click, remove the button\nRun and test the app\n"}, {"classified_as": "enhancement", "text": "The documented oauth2RedirectUrl option in swaggerUI doesn't actually get used in the /auth calls to the oauth2 provider.\n"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 9.x.x -->\r\n<!-- npm 5.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**: 8\r\n- **npm version**: 5.8.0\r\n- **Strapi version**: 3.0.0-alpha.12\r\n- **Database**: mongo\r\n- **Operating system**: osx\r\n\r\n\r\n**What is the current behavior?**\r\n\r\nStrapi requires unstable versions of node.  Strapi should support the Long Term Support versions of nodejs.  Not the versions where bugs will never be fixed.  Until node 10 is LTS, you should support node 8.  \r\n\r\n**Steps to reproduce the problem**\r\n\r\nClose strapi cd admin npm i with node 8\r\n\r\n\r\n**What is the expected behavior?**\r\n\r\nLong term supported node should be supported, not experimental versions.\r\n\r\n\r\n**Suggested solutions**\r\n\r\nMake strapi accept node 8 since it is LTS. \r\n\r\n\r\n<!--  Make sure to browse the opened and closed issues before submit your issue. -->\r\n"}, {"classified_as": "bug", "text": "## TL;DR\r\nThis issue requests to deprecate the return value of BaseStorage.set_trial_param and change the behavior to \"always overwrite existing values\".\r\n\r\n## General background\r\n[BaseStorage.set_trial_param](https://github.com/optuna/optuna/blob/24300dc57661bff7961499a2d52534fcd41ad258/optuna/storages/base.py#L120) method returns True and set a new parameter when the specified parameter-name does not already have a value. Otherwise, it returns False and does not overwrite the parameter with the new value.\r\nThis behavior was necessary to prevent race-conditioning. However, the current optuna doesn't allow users to directly manipulate the storage and optuna internals do not modify parameters from multiple workers/threads, and thus, the functionality is no more required.\r\n\r\n## Proposal and motivation\r\nThis issue requests to deprecate the return value of BaseStorage.set_trial_param and change its behavior to \"always overwrite existing values\".\r\nInstead of using the return value, we'd better check whether the parameter already exists first by param_name in storage.get_trial_params(trial_id) and then perform sampling operation in [this method in trial](https://github.com/optuna/optuna/blob/24300dc57661bff7961499a2d52534fcd41ad258/optuna/trial.py#L981)\r\nThis change has two benefits.\r\n1. We can remove unnecessary computation for re-sampling when the parameter value already exists.\r\n2. The storage method becomes more consistent with other methods such as set_trial_user_attrs, which always overwrite existing values. It also simplifies some storage implemetations."}, {"classified_as": "bug", "text": "<!--\r\nThank you for reporting an issue.\r\n\r\nThis issue tracker is for bugs and issues found within Node.js core.\r\nIf you require more general support please file an issue on our help\r\nrepo. https://github.com/nodejs/help\r\n\r\n\r\nPlease fill in as much of the template below as you're able.\r\n\r\nVersion: output of node -v\r\nPlatform: output of uname -a (UNIX), or version and 32 or 64-bit (Windows)\r\nSubsystem: if known, please specify affected core module name\r\n-->\r\n\r\n* **Version**: 12.17.0\r\n* **Platform**: Linux 5.4.0-33-generic # 37-Ubuntu SMP Thu May 21 12:53:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\r\n* **Platform**: Linux 3.16.0-4.9-amd64 # 1 SMP Debian 3.16.7-ckt25-1 (2018-11-21) x86_64 GNU/Linux\r\n(it reproduces on both platforms)\r\n* **Subsystem**: ?\r\n\r\n### What steps will reproduce the bug?\r\n\r\n<!--\r\nEnter details about your bug, preferably a simple code snippet that can be\r\nrun using node directly without installing third-party dependencies.\r\n-->\r\n\r\n- open two terminals locally on machine\r\n- run node on terminal 1\r\n- new Date().getTimezoneOffset()\r\n- change timezone in terminal 2\r\n- ask for new Date().getTimezoneOffset() in node in terminal 1 again\r\n- **note that timezone change is not reflected**\r\n- exit node process in terminal 1 and enter node again (another node process)\r\n- now new Date().getTimezoneOffset() reflects the new timezone\r\n- **note that this not-reflecting-new-timezone thing affects creating new dates and any other date operations. getTimezoneOffset() is just a sample**\r\n\r\n### How often does it reproduce? Is there a required condition?\r\nalways reproduces, no required condition.\r\n\r\n### What is the expected behavior?\r\n\r\n<!--\r\nIf possible please provide textual output instead of screenshots.\r\n-->\r\nTo reflect and update timezone of node process, when timezone of system is changed.\r\n\r\n### What do you see instead?\r\n\r\n<!--\r\nIf possible please provide textual output instead of screenshots.\r\n-->\r\nI see the old timezone.\r\n\r\n### Additional information\r\n\r\n<!--\r\nTell us anything else you think we should know.\r\n-->\r\nThis bug has been created and reported previously, as I read, some people mentioned that the main bug is with V8, and linked to some bugs there. By the way, all previous reported bugs were closed. I link to everything I found here:\r\nhttps://github.com/nodejs/node/issues/4022\r\nhttps://github.com/nodejs/node/pull/20026\r\nhttps://github.com/nodejs/node/issues/19974\r\nhttps://github.com/nodejs/node/issues/3449\r\n\r\nI created this issue as some time has passed and honestly, I couldn't find out why the previous issues were closed, and V8 discussions were beyond my knowledge.\r\n\r\n### What is the matter?\r\n\r\nWe have a system, a rather big one, composed of different programming languages and technologies, all components of our system works fine when timezone changes, except nodejs. There are solutions like https://github.com/evanlucas/reset-date-cache, but suppose node queries sql queries and created date objects from timestamps in sql tables, and timezone needs  to  be kept updated. the only way to keep it updated is to reset cache on each page request, which as noted in https://github.com/evanlucas/reset-date-cache: \r\n> The underlying call being made is quite expensive so it should only be used where absolutely necessary.\r\n\r\n### Screenshot of reproduction\r\n\r\n![Screenshot from 2020-06-09 18-58-34](https://user-images.githubusercontent.com/5755214/84143307-65883480-aa67-11ea-8013-e2f28ce24671.png)\r\n"}, {"classified_as": "bug", "text": "When uploading a file, the title should be a cleaned up version of the filename, but currently it's doubling the extension:\r\n\r\n* Original: animals_hero_mountains.jpg\r\n* Current Title: Animals Hero Mountains.jpg.jpg\r\n* Ideal Title: Animals Hero Mountains"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!-- =============================================================================== -->\r\n<!--  If you are not using the current Strapi release, you will be asked to update. -->\r\n<!-- Please see the wiki for guides on upgrading to the latest release. -->\r\n<!-- =============================================================================== -->\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 10.x.x -->\r\n<!-- npm 6.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**: v10.15.1\r\n- **NPM version**: 6.4.1\r\n- **Strapi version**:3.0.0-alpha.22\r\n- **Database**: MySql\r\n- **Operating system**: Ubuntu 18.10\r\n- **(Optional) Link to your Project**: <!-- To speedup support, if you have your project on github/gitlab you can provide a link -->\r\n\r\n\r\n**What is the current behavior?**\r\nER_NOT_SUPPORTED_AUTH_MODE\r\nClient does not support authentication protocol requested by server; consider upgrading MySQL client\r\n\r\n**Steps to reproduce the problem**\r\nCreate new project with strapi using MySql as Database.\r\n\r\n\r\n**What is the expected behavior?**\r\nGenerate the new project.\r\n\r\n\r\n**Suggested solutions**\r\nNeeded Support for New Auth Mode that comes with MySql 8 (caching_sha2_password)"}, {"classified_as": "enhancement", "text": "As per https://github.com/polkadot-js/api/blob/master/packages/api/src/SubmittableExtrinsic.ts#L105"}, {"classified_as": "enhancement", "text": "Is it possible to modify the way to generate objectId for custom class instead of the auto generate 10 pseudo random 10 character string? Is it possible to have more than 10 characters objectId? thanks"}, {"classified_as": "enhancement", "text": "\r\nHello,\r\n\r\nIs there a REST endpoint for resending verification of emails?  I don't see anything in the documentation.\r\n\r\nThanks."}, {"classified_as": "enhancement", "text": "See http://rghost.ru/private/72Bww6Sdn/cc1139f4a71811b411e3e267e7e39ac5\n\nDoesn't occur, when using DX12 renderer.\n"}, {"classified_as": "enhancement", "text": "The latest published version for @polkadot/storage is 0.38.10 but for other packages are 0.38.11\r\nI am having issue that yarn cannot find @polkadot/storage 0.38.11 and have to manually pick a version as fallback.\r\n\r\nFrom version history you can also see 0.38.6 and few other versions are skipped as well. \r\n\r\nI noticed that packages/type-storage is published lastly, may have some race condition that CI process completes before the version is successfully published?\r\n\r\nhttps://www.npmjs.com/package/@polkadot/storage\r\n\r\nIt seems like yarn may fail to publish and yet still report as success https://github.com/yarnpkg/yarn/issues/5931 https://github.com/yarnpkg/yarn/issues/6200"}, {"classified_as": "bug", "text": "- Fire browser.closed event when the underlying browser process gets closed / crashes\r\n- Fire page.closed event when the page gets closed / crashes\r\n\r\nThis will help to build reliable scripts that restart browser or reopen pages when they crash.\r\n"}, {"classified_as": "bug", "text": "I'm not sure if it is actually a bug but if I want to filter over a datetime field in the list view I only get two filters ('is' and 'is not'). If I switch to a date field I get the full filter list. \r\n\r\nAs a workaround just override strapi-plugin-content-manager/admin/src/components/FilterPickerOption/utils.js and add datetime to switch-case-statement right under date.\r\n\r\n**Steps to reproduce the behavior**\r\n1. Add a datetime field to a content type.\r\n2. Add some date\r\n3. Go to the \"List view\"\r\n4. Try to filter over the newly added field\r\n\r\n**Expected behavior**\r\nGet all the filters you get for a date field. \r\n\r\n**Screenshots**\r\n<img width=\"1382\" alt=\"datetime_bug\" src=\"https://user-images.githubusercontent.com/5557208/73118497-2ee8cc00-3f55-11ea-8fce-298cea334718.png\">\r\n\r\n\r\n**System**\r\n- Node.js version: 12.10.0\r\n- NPM version: 6.10.3\r\n- Strapi version: 3.0.0-beta.18.6\r\n- Database: mongo db\r\n- Operating system: MacOS Catalina\r\n\r\n"}, {"classified_as": "bug", "text": "<!--\r\nHello \u00f0\u0178\u2018\u2039 Thank you for submitting an issue.\r\n\r\nBefore you start, please make sure your issue is understandable and reproducible.\r\nTo make your issue readable make sure you use valid Markdown syntax.\r\n\r\nhttps://guides.github.com/features/mastering-markdown/\r\n-->\r\n\r\n**Describe the bug**\r\nThere is no way to disable the aggregation feature for a specific type.\r\n\r\n**Steps to reproduce the behavior**\r\n1. Install the GraphQL extension\r\n2. Copy the snippet below into schema.graphql.js for the API type.\r\n3. Try to query {api type name}Connection\r\n4. See that it still works when it should have been disabled\r\n\r\n**Expected behavior**  \r\nFor example, considering an API for order, this should disable the ordersConnection query on GraphQL, but it doesn't:\r\njavascript\r\nmodule.exports = {\r\n  type: {\r\n    OrderConnection: false, // This shouldn't even be necessary, but it also does nothing\r\n  },\r\n  resolver: {\r\n    Query: {\r\n      ordersConnection: false,\r\n    },\r\n  },\r\n};\r\n\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/7467891/78308089-67052000-753f-11ea-9a0b-129f9c70e30e.png)\r\n\r\n**System**\r\n- Node.js version: v13.7.0\r\n- NPM version: v6.13.6\r\n- Yarn version: v1.22.4\r\n- Strapi version: v3.0.0-beta.19.5\r\n- Database: MongoDB\r\n- Operating system: Windows 10 1909 with WSL Ubuntu 18.04 LTS\r\n\r\n**Additional context**\r\nThis is relevant to me because I've limited the find and findOne controllers to only show the orders from the logged-in user. However, this aggregator returns the count of the orders from ALL users, which I don't want to be public.\r\nI'd like to disable it since I'm not using it and it's just leaking data I don't want to.\r\n"}, {"classified_as": "bug", "text": "**Describe the bug**\r\nModal UI should not close if mouseUp event outside of modal dialog\r\n\r\n**Steps to reproduce the behavior**\r\n1. Go to Configurations > Environments > Database > edit a database\r\n2. Hold/drag mouse from inside modal dialog\r\n3. Move the mouse to outside modal and release\r\n\r\nModal dialog closes.\r\n\r\n**Expected behavior**\r\nNothing happens, because it is not a click (i.e. a click means mouse is clicked outside of modal)\r\n\r\n**System**\r\n- Node.js version: 10.16.3\r\n- NPM version: 6.11.3\r\n- Strapi version: 3.0.0-beta.16.3\r\n- Database: SQLite\r\n- Operating system: Windows 10 1903\r\n\r\n"}, {"classified_as": "enhancement", "text": ""}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 9.x.x -->\r\n<!-- npm 5.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**: 10.8.0\r\n- **npm version**: 6.2.0\r\n- **Strapi version**: alpha 13.1\r\n- **Database**: pg\r\n- **Operating system**: WSL/Ubuntu\r\n\r\n\r\n**What is the current behavior?**\r\n\r\nRight now you have the following mechanisms to set a password:\r\n\r\n- Initial strapi start - creating a user (no requirements - was able to use 5 characters)\r\n- Reset password (currently failing, see #1784)\r\n- Set password via profile (6 characters required)\r\n- Create new user from admin (6 characters required)\r\n\r\n\r\n**Steps to reproduce the problem**\r\n\r\n\r\n\r\n**What is the expected behavior?**\r\n\r\nAlways have the same rules about setting a password\r\n\r\n**Suggested solutions**\r\n\r\nUse the same mechanism for setting a password in each part of the user interface\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n"}, {"classified_as": "enhancement", "text": "Demo:\r\n\r\nhttps://runkit.com/szmarczak/5d90f849ecc28e001ac8f3e1\r\n\r\nCurrent output:\r\n\r\nclient side - 4294967295\r\nclient side - 4294967295\r\nserver side - 4294967295\r\nserver side - 2\r\n\r\n\r\nExpected output:\r\n\r\nclient side - 4294967295\r\nclient side - 2\r\nserver side - 4294967295\r\nserver side - 2\r\n\r\n\r\nAs per the spec:\r\n### [6.5. SETTINGS](https://httpwg.org/specs/rfc7540.html#SETTINGS)\r\n\r\n> SETTINGS parameters are not negotiated; they describe characteristics of the sending peer, which are used by the receiving peer. Different values for the same parameter can be advertised by each peer. For example, a client might set a high initial flow-control window, whereas **a server might set a lower value to conserve resources**.\r\n\r\n> A SETTINGS frame MUST be sent by both endpoints at the start of a connection and **MAY be sent at any other time by either endpoint over the lifetime of the connection**. Implementations MUST support all of the parameters defined by this specification.\r\n\r\n> **Each parameter in a SETTINGS frame replaces any existing value for that parameter**. Parameters are processed in the order in which they appear, and **a receiver of a SETTINGS frame does not need to maintain any state other than the current value of its parameters**. Therefore, **the value of a SETTINGS parameter is the last value that is seen by a receiver**.\r\n\r\nSounds like a bug."}, {"classified_as": "bug", "text": "<!--\r\nHello \u00f0\u0178\u2018\u2039 Thank you for submitting an issue.\r\n\r\nBefore you start, please make sure your issue is understandable and reproducible.\r\nTo make your issue readable make sure you use valid Markdown syntax.\r\n\r\nhttps://guides.github.com/features/mastering-markdown/\r\n\r\nPlease ensure you have also read and understand the contributing guide.\r\n\r\nhttps://github.com/strapi/strapi/blob/master/CONTRIBUTING.md#reporting-an-issue\r\n-->\r\n\r\n**Describe the bug**\r\nWhile saving a new collection type, I faced an error. Let the user know about the error description in the tooltip provided\r\n\r\n**Steps to reproduce the behavior**\r\n\r\n1. Create a new collection type\r\n2. Create a UID field of MaxLength greater than 500\r\n3. Save the collection type\r\n4. See error tooltip without any clue of what happened in background, \r\n\r\nAs a dev, I thought it was an issue with my mongo atlas cluster, When checked the network logs, the concise error message indicating the root cause but was not shown in the tooltip\r\n\r\n{\"error\":{\"contentType.attributes.productId.maxLength\":[\"contentType.attributes.productId.maxLength must be less than or equal to 256\"]}}\r\n\r\n**Expected behavior**\r\nLet the user know in the tooltip mentioned about the error description rather than just letting user see a message \"An error occoured\"\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/42322819/84125251-e8a28e00-aa59-11ea-8de6-9a1c3b2ef586.png)\r\n\r\n\r\n\r\n**System**\r\n\r\n- Node.js version: v10.16.3\r\n- NPM version: 6.9.0\r\n- Strapi version:  \"strapi\": \"3.0.1\"\r\n- Database: mongo-atlas\r\n- Operating system: osx mojave\r\n"}, {"classified_as": "bug", "text": "Original setProgress and setMax methods from the android.widget.ProgressBar handles being invoked from another thread than the UI thread.\n\nMaterialDialogs.setProgress/setMaxProgress should do the same no ?\n"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 9.x.x -->\r\n<!-- npm 5.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**:9.0.0\r\n- **npm version**:5.5.1\r\n- **Strapi version**:3.0.0-alpha-12.7.1\r\n- **Database**:MongoDB\r\n- **Operating system**:Linux\r\n\r\n\r\n**What is the current behavior?**\r\nI see this warning in terminal for a fresh project:\r\n\r\n(node:12760) DeprecationWarning: collection.count is deprecated, and will be removed in a future version. Use collection.countDocuments or collection.estimatedDocumentCount instead\r\n\r\n\r\n\r\n**Steps to reproduce the problem**\r\n* Install Strapi version 3.0.0-alpha-12.7.1\r\n* Create new project\r\n* Run project.\r\n\r\n\r\n**What is the expected behavior?**\r\n-\r\n\r\n\r\n**Suggested solutions**\r\nIt seems Strapi core needs some update and refactor to fix this.\r\n\r\n\r\n<!--  Make sure to browse the opened and closed issues before submitting your issue. -->\r\n"}, {"classified_as": "enhancement", "text": "@polkadot/types uses @polkadot/metadata without including it in the dependencies\r\n\r\nhttps://github.com/polkadot-js/api/blob/614cf4e48409ceb53db4e806541c3e2665bf602d/packages/types/src/codec/create/registry.ts#L8\r\n\r\nhttps://github.com/polkadot-js/api/blob/614cf4e48409ceb53db4e806541c3e2665bf602d/packages/types/package.json#L28-L34"}, {"classified_as": "enhancement", "text": "I found the issue in RestWrite.js:\n\n\n// Check for username uniqueness\n    if (!this.data.username) {\n      if (!this.query) {\n        // TODO: what's correct behavior here\n        this.data.username = '';\n      }\n      return;}\n\n\nI'm not sure what the answer is though.  When using Parse.com anonymous users could be saved with data before registration took place.\n"}, {"classified_as": "enhancement", "text": "Pending folders are added/updated as we process them in the cluster config handling. Each update results in a config save. This is unnecessary as we already have a mechanism for deferred config save in the method in question. For a lot of folders this becomes a lot of config saving. This is not a purely theoretic issue:\r\n\r\n<img width=\"729\" alt=\"Screenshot 2019-07-26 at 10 50 28\" src=\"https://user-images.githubusercontent.com/125426/61939386-6d480300-af93-11e9-97b9-4539d93a22c7.png\">\r\n"}, {"classified_as": "enhancement", "text": "There is a problem in the latest database migration, where \r\n\r\n1. the block GC can run concurrently with the migration, and\r\n2. the block GC doesn't properly use a snapshot for all its operations.\r\n\r\nIf the database is large then the block GC routine will take time and read FileInfos (none of which have block hashes yet) while the migration runs. The migration creates block list entries in the meantime. Then the block GC starts iterating block lists, without a snapshot, so it sees the new entries and deletes them because the FileInfos didn't refer to them when it saw those.\r\n\r\nThe end result is erroneously deleted block lists."}, {"classified_as": "bug", "text": "### Steps to reproduce\r\n\r\n**Tell us about your environment:**\r\n\r\n* Puppeteer version: 1.6.1\r\n* Platform / OS version:  Ubuntu 14.04.1 LTS (i686)\r\n* Node.js version: 8.11.3\r\n\r\n**What steps will reproduce the problem?**\r\n\r\n1. npm i puppeteer\r\n2. \r\njs\r\nconst puppeteer = require('puppeteer');\r\nconst browser = await puppeteer.launch();\r\nconst page = await browser.newPage();\r\n\r\n\r\n**What is the expected result?**\r\n\r\nWorking chrome\r\n\r\n**What happens instead?**\r\n\r\n(node:14901) UnhandledPromiseRejectionWarning: Error: Failed to launch chrome!\r\n/var/www/spiderman/node_modules/puppeteer/.local-chromium/linux-575458/chrome-linux/chrome: 1: /var/www/spiderman/node_modules/puppeteer/.local-chromium/linux-575458/chrome-linux/chrome: Syntax error: word unexpected (expecting \")\")\r\n\r\n\r\nIf i manually run that chrome, it says cannot execute binary file: Exec format error"}, {"classified_as": "enhancement", "text": "We're not using the API key properly or something;\r\n\r\n<img width=\"1814\" alt=\"screen shot 2018-10-30 at 05 30 34\" src=\"https://user-images.githubusercontent.com/125426/47696000-0284b980-dc05-11e8-8472-3f8c4b7661dd.png\">\r\n"}, {"classified_as": "enhancement", "text": "Firefox is resized to half of 1920x1080 screen.\n\n![screenshot](https://cloud.githubusercontent.com/assets/12888718/8152406/d0021866-1346-11e5-8b66-d77024557b9a.png)\n\nI suggest change overrides.css:248\n@media (max-width: 767px) {\nto\n@media (max-width: 1000px) {\n"}, {"classified_as": "enhancement", "text": "1.3 event only fires on view load. Tapping the bar items doesn't retrigger the event.\n\nAdd it to put the groceries app to test. \n\nIMO I don't even want it to fire on bind/load\n"}, {"classified_as": "enhancement", "text": "Example:\n\n JavaScript\ndialogs.action({\n            title: \"Title\",\n            message: \"Action\",\n            cancelButtonText: \"Close\",\n            actions: [\"One\", \"Two\", \"Three\"]\n}).then(function (r) { return console.log(\"Action\\u00A0result:\\u00A0\" + r); });\n\n"}, {"classified_as": "enhancement", "text": "I found why in SH3 HD there is neither shadow nor light, sometimes it looks like the data between transform and shader stage doesn't properly map.\n\nFor instance the shader program responsible of static geometry reads a \"tc9\" input while the corresponding transform program doesn't write to tc9. Instead, it writes to dst_reg6 (mapped to clip distance data) in a non traditionnal way, and if I manually change the shader program to read dst_reg6 instead of tc9 (which maps to tc16...) I have correct light and shadow. However there are still glitches if I mimic this behavior for all shader program, it looks like tc9 is not always mapped to the same reg.\n\nOn the other hand there is the NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK  command that we don't use, that might perhaps have the info but I don't know how.\n"}, {"classified_as": "bug", "text": "**Describe the bug**\r\nThe API doesn't return the default_value field in /fields\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Request /fields/:collection\r\n2. Notice the lack of default_value\r\n3. Tear up a little\r\n\r\n**Expected behavior**\r\nI expected the API to return the default_value of the field together with the rest of the field info\r\n"}, {"classified_as": "enhancement", "text": "This should be statusCb for extrinsic submission to work, right?\r\n\r\nhttps://github.com/polkadot-js/api/blob/67f625b096e8cc3f0a091105061a5f52e01bedef/packages/api/src/promise/SubmittableExtrinsic.ts#L21"}, {"classified_as": "enhancement", "text": "Refs: #29222\r\n\r\nAs that PR shows, there are some unused imports that tools/check-imports.py doesn't catch because:\r\n\r\n1. They're used in comments.\r\n2. The tool doesn't match at word boundaries (e.g. FromJust is considered a use of Just.)"}, {"classified_as": "bug", "text": "When the request path is the storage directory it shouldn't route that request to the API endpoints but rather return a not found response.\r\n\r\nConditions:\r\n- When the file doesn't exists in storage."}, {"classified_as": "enhancement", "text": "It only raises the propertyChange event (inherited from Observable) for the length property. But is should also raise the 'change' event, since widgets such as the ListView listen for the change event in order to refresh their UI.\n"}, {"classified_as": "enhancement", "text": "var myObj = bull;\nalert(myObj);///does nothing\n\nIt should display message with empty content or \"null\".\n"}, {"classified_as": "bug", "text": "I created an api called ali-api. After starting the strapi-server I'm greated by the error below.\nThe name should be checked at creation time.\nDo you want me to  make a PR to add this check to https://github.com/wistityhq/strapi-generate-api?\n\n\nali-api $ strapi generate api ali-api\ninfo: Generated a new api ali-api at ./api.\nali-api $ strapi start\ninfo: Your server is running at http://localhost:1337\ndebug: Time: Fri Nov 20 2015 10:06:59 GMT+0100 (CET)\ndebug: Environment: development\ndebug: Process PID: 12479\ndebug: Cluster: master\ninfo: To shut down your server, press <CTRL> + C at any time\n\nError: Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"Ali-api\" does not.\n\n"}, {"classified_as": "enhancement", "text": "The child_process module allows to bypass the JavaScript validation logic and to pass a custom array into C++, which then crashes the process:\r\n\r\njs\r\nconst { spawn } = require('child_process');\r\n\r\nspawn('ls', Object.assign([], {\r\n  slice() {\r\n    return this;\r\n  },\r\n  unshift(arg) {\r\n    [].unshift.call(this, arg);\r\n    Object.defineProperty(this, '0', {\r\n      get() { throw new Error(); }\r\n    });\r\n  }\r\n}));\r\n\r\n\r\nThis should be virtually impossible to exploit, so I am not marking this as a security issue."}, {"classified_as": "enhancement", "text": "We send local discovery packets on all compatible local interfaces, and can receive announcements from the same device on multiple interfaces as well. However for each received response we construct an address list based on the addresses in that announcement packet plus and the apparent source address, and then set that as the cache entry for the device in question. This means that later announcements override earlier ones, and we'll only ever see the latest announced address (highest number interface, probably).\r\n\r\nWe should keep all received addresses, or keep a separate cache per source address, or something."}, {"classified_as": "enhancement", "text": "I am not convinced this is correct - \r\n\r\nhttps://github.com/polkadot-js/api/blob/master/packages/types/src/codec/Enum.ts#L215-L225\r\n\r\nBasically, to determine equality, surely the index should match as well?  (At the very least when comparing 2 Enums, i.e. typeof Enum - which is actually missing here, unlike others)\r\n\r\nWe should also be able to compare 2 and enum against the JSON value\r\n\r\njs\r\nconst TEST_A = { a: 'test };\r\nconst TEST_B = { b: 'test };\r\n\r\nconst testA = new Enum({ a: Text, b: Text }, TEST_A);\r\nconst testB = new Enum({ a: Text, b: Text }, TEST_B);\r\n\r\nconsole.log(testA.eq(TEST_A)) // should be true\r\nconsole.log(testB.eq(TEST_A)) // should be false\r\nconsole.log(testA.eq(testB)) // should be false\r\nconsole.log(testA.eq('test')) // probably true as per current\r\n\r\n"}, {"classified_as": "bug", "text": "**Describe the bug**\r\nIn Repeatable groups with relation field the description of the field is not aligned with non relation fields.\r\n\r\nsee below image\r\n\r\n**Steps to reproduce the behavior**\r\n1. Create Group with a number field and a relation field\r\n2. Go to Content type manage and add a description to the number field and to the relation field\r\n3. Add the group to a content type\r\n4. Go to content type page\r\n5. Click on create new content type\r\n6. Go to the section of the repeatable group\r\n\r\n**Expected behavior**\r\nDescription texts should be aligned either above the input field or below it\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/4890827/64913885-bd984180-d748-11e9-85c5-d39e21bda7e5.png)\r\n\r\n**System**\r\n- Node.js version: v12\r\n- Strapi version: beta.16.3\r\n"}, {"classified_as": "enhancement", "text": "(I did not actually verify if this is a real issue)\r\n\r\nhttps://github.com/polkadot-js/api/pull/798#discussion_r271116857\r\n\r\n> DoubleMapType only exists in v3 so this should fail if trying to convert a metadata includes double to v2.\r\nOne way to solve this (without refactor everything to make it upgrade instead of downgrade), is duplicate DoubleMapType in v2 like how I retrofit is_linked in v1\r\n\r\n"}, {"classified_as": "enhancement", "text": "On Alex -\r\n\r\n![image](https://user-images.githubusercontent.com/1424473/59966905-e088d000-9522-11e9-96a7-297ad3129d4a.png)\r\n\r\n{\"jsonrpc\":\"2.0\",\"method\":\"state_storage\",\"params\":{\"result\":{\"block\":\"0xbfb1676a357e772c854d88aaee13614a08ffe67bf4b59160481828e03982dbf7\",\"changes\":[[\"0x107e8d8b935b2cfcd4b80ed517149a49\",\"0x210100000000000000000000000000000000000000000000000000000000000000000000000000000000011b4d03dd8c01f1049143cf9c4c817e4b167f1d1b83e5c6f0f10d89ba1e7bce\"]]},\"subscription\":145305}}\r\n\r\nWith an Option<...> type the length is added by the Rust side, but not by the JS side. So, without looking at the code, it seems with Option, we just call the toHex() of the containing class when isSome. Rather what should happen is to call toU8a() of the containing class and then u8aToHex that.\r\n\r\nOr rather ... it could be our convert-to-bytes and then convert-to-whatever converter in storage. Either way, we are not doing what is expected."}, {"classified_as": "enhancement", "text": "### Issue Description\r\n\r\nRunning parse in express app, basic configuration on MacBook Air start use node app.js, starts up fine.\r\n\r\nDo Ctrl+C to stop, parse does not stop\r\n\r\n### Steps to reproduce\r\n\r\nStart Parse from command line using node app.js\r\nTry Ctrl+C.\r\n\r\n#### Expected Results\r\n\r\nParse/express to showdown\r\n\r\n#### Actual Outcome\r\n\r\nNo response, app stays running\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 2.3.8\r\n  - Operating System:     OS X 10.12.4/ Ubuntu 16.04 LTS\r\n  - Hardware:            Macbook Air/ AWS EC2\r\n  - Localhost or remote server? Both\r\n\r\n- **Database**\r\n  - MongoDB version: 3.4\r\n  - Storage engine:  Wired Tiger\r\n  - Hardware:        Macbook/ EC2\r\n  - Localhost or remote server? AWS/Local\r\n\r\n### Logs/Trace\r\n\r\nexpress:application set \"x-powered-by\" to true +0ms\r\n  express:application set \"etag\" to 'weak' +5ms\r\n  express:application set \"etag fn\" to [Function: wetag] +3ms\r\n  express:application set \"env\" to 'development' +0ms\r\n  express:application set \"query parser\" to 'extended' +0ms\r\n  express:application set \"query parser fn\" to [Function: parseExtendedQueryString] +1ms\r\n  express:application set \"subdomain offset\" to 2 +0ms\r\n  express:application set \"trust proxy\" to false +0ms\r\n  express:application set \"trust proxy fn\" to [Function: trustNone] +1ms\r\n  express:application booting in development mode +0ms\r\n  express:application set \"view\" to [Function: View] +0ms\r\n  express:application set \"views\" to '/Users/craig/Code/webApps/####/views' +1ms\r\n  express:application set \"jsonp callback name\" to 'callback' +0ms\r\n  express:router:route new '/files/:appId/:filename' +1ms\r\n  express:router:layer new '/files/:appId/:filename' +1ms\r\n  express:router:route get '/files/:appId/:filename' +2ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/files' +1ms\r\n  express:router:layer new '/files' +0ms\r\n  express:router:route post '/files' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/files/:filename' +24ms\r\n  express:router:layer new '/files/:filename' +0ms\r\n  express:router:route post '/files/:filename' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route post '/files/:filename' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route post '/files/:filename' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route post '/files/:filename' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/files/:filename' +0ms\r\n  express:router:layer new '/files/:filename' +0ms\r\n  express:router:route delete '/files/:filename' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route delete '/files/:filename' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route delete '/files/:filename' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route delete '/files/:filename' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' query +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' expressInit +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' allowCrossDomain +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' router +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/health' <anonymous> +1ms\r\n  express:router:layer new '/health' +1ms\r\n  express:router:layer new '/apps/:appId/verify_email' +4ms\r\n  express:router:layer new '/apps/choose_password' +1ms\r\n  express:router:layer new '/apps/:appId/request_password_reset' +0ms\r\n  express:router:layer new '/apps/:appId/request_password_reset' +0ms\r\n  express:router use '/apps' serveStatic +1ms\r\n  express:router:layer new '/apps' +0ms\r\n  express:router:route new '/apps/:appId/verify_email' +1ms\r\n  express:router:layer new '/apps/:appId/verify_email' +1ms\r\n  express:router:route get '/apps/:appId/verify_email' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/apps/choose_password' +0ms\r\n  express:router:layer new '/apps/choose_password' +0ms\r\n  express:router:route get '/apps/choose_password' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/apps/:appId/request_password_reset' +0ms\r\n  express:router:layer new '/apps/:appId/request_password_reset' +0ms\r\n  express:router:route post '/apps/:appId/request_password_reset' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/apps/:appId/request_password_reset' +0ms\r\n  express:router:layer new '/apps/:appId/request_password_reset' +0ms\r\n  express:router:route get '/apps/:appId/request_password_reset' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' router +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' urlencodedParser +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' router +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router use '/' jsonParser +2ms\r\n  express:router:layer new '/' +1ms\r\n  express:router use '/' allowCrossDomain +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' allowMethodOverride +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' handleParseHeaders +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:layer new '/classes/:className' +1ms\r\n  express:router:layer new '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/classes/:className' +0ms\r\n  express:router:layer new '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/users' +1ms\r\n  express:router:layer new '/users' +0ms\r\n  express:router:layer new '/users/me' +0ms\r\n  express:router:layer new '/users/:objectId' +0ms\r\n  express:router:layer new '/users/:objectId' +0ms\r\n  express:router:layer new '/users/:objectId' +0ms\r\n  express:router:layer new '/login' +1ms\r\n  express:router:layer new '/logout' +0ms\r\n  express:router:layer new '/requestPasswordReset' +0ms\r\n  express:router:layer new '/verificationEmailRequest' +0ms\r\n  express:router:layer new '/sessions/me' +0ms\r\n  express:router:layer new '/sessions' +1ms\r\n  express:router:layer new '/sessions/:objectId' +0ms\r\n  express:router:layer new '/sessions' +0ms\r\n  express:router:layer new '/sessions/:objectId' +0ms\r\n  express:router:layer new '/sessions/:objectId' +0ms\r\n  express:router:layer new '/upgradeToRevocableSession' +1ms\r\n  express:router:layer new '/roles' +1ms\r\n  express:router:layer new '/roles/:objectId' +1ms\r\n  express:router:layer new '/roles' +1ms\r\n  express:router:layer new '/roles/:objectId' +1ms\r\n  express:router:layer new '/roles/:objectId' +0ms\r\n  express:router:layer new '/events/AppOpened' +1ms\r\n  express:router:layer new '/events/:eventName' +0ms\r\n  express:router:layer new '/installations' +1ms\r\n  express:router:layer new '/installations/:objectId' +1ms\r\n  express:router:layer new '/installations' +0ms\r\n  express:router:layer new '/installations/:objectId' +0ms\r\n  express:router:layer new '/installations/:objectId' +0ms\r\n  express:router:layer new '/functions/:functionName' +1ms\r\n  express:router:layer new '/jobs/:jobName' +1ms\r\n  express:router:layer new '/jobs' +1ms\r\n  express:router:layer new '/schemas' +1ms\r\n  express:router:layer new '/schemas/:className' +0ms\r\n  express:router:layer new '/schemas' +1ms\r\n  express:router:layer new '/schemas/:className' +0ms\r\n  express:router:layer new '/schemas/:className' +0ms\r\n  express:router:layer new '/schemas/:className' +1ms\r\n  express:router:layer new '/push' +1ms\r\n  express:router:layer new '/scriptlog' +0ms\r\n  express:router:layer new '/validate_purchase' +4ms\r\n  express:router:layer new '/serverInfo' +1ms\r\n  express:router:layer new '/config' +1ms\r\n  express:router:layer new '/config' +0ms\r\n  express:router:layer new '/purge/:className' +1ms\r\n  express:router:layer new '/hooks/functions' +0ms\r\n  express:router:layer new '/hooks/triggers' +0ms\r\n  express:router:layer new '/hooks/functions/:functionName' +1ms\r\n  express:router:layer new '/hooks/triggers/:className/:triggerName' +0ms\r\n  express:router:layer new '/hooks/functions' +0ms\r\n  express:router:layer new '/hooks/triggers' +0ms\r\n  express:router:layer new '/hooks/functions/:functionName' +1ms\r\n  express:router:layer new '/hooks/triggers/:className/:triggerName' +0ms\r\n  express:router:layer new '/cloud_code/jobs' +0ms\r\n  express:router:layer new '/batch' +1ms\r\n  express:router:route new '/classes/:className' +0ms\r\n  express:router:layer new '/classes/:className' +0ms\r\n  express:router:route get '/classes/:className' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/classes/:className/:objectId' +0ms\r\n  express:router:route get '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/classes/:className' +0ms\r\n  express:router:layer new '/classes/:className' +0ms\r\n  express:router:route post '/classes/:className' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/classes/:className/:objectId' +1ms\r\n  express:router:layer new '/classes/:className/:objectId' +0ms\r\n  express:router:route put '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/classes/:className/:objectId' +0ms\r\n  express:router:route delete '/classes/:className/:objectId' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/users' +0ms\r\n  express:router:layer new '/users' +0ms\r\n  express:router:route get '/users' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/users' +0ms\r\n  express:router:layer new '/users' +1ms\r\n  express:router:route post '/users' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/users/me' +0ms\r\n  express:router:layer new '/users/me' +0ms\r\n  express:router:route get '/users/me' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/users/:objectId' +1ms\r\n  express:router:layer new '/users/:objectId' +0ms\r\n  express:router:route get '/users/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/users/:objectId' +0ms\r\n  express:router:layer new '/users/:objectId' +0ms\r\n  express:router:route put '/users/:objectId' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/users/:objectId' +0ms\r\n  express:router:layer new '/users/:objectId' +0ms\r\n  express:router:route delete '/users/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/login' +1ms\r\n  express:router:layer new '/login' +0ms\r\n  express:router:route get '/login' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/logout' +2ms\r\n  express:router:layer new '/logout' +0ms\r\n  express:router:route post '/logout' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/requestPasswordReset' +0ms\r\n  express:router:layer new '/requestPasswordReset' +0ms\r\n  express:router:route post '/requestPasswordReset' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/verificationEmailRequest' +0ms\r\n  express:router:layer new '/verificationEmailRequest' +1ms\r\n  express:router:route post '/verificationEmailRequest' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/sessions/me' +0ms\r\n  express:router:layer new '/sessions/me' +0ms\r\n  express:router:route get '/sessions/me' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/sessions' +0ms\r\n  express:router:layer new '/sessions' +16ms\r\n  express:router:route get '/sessions' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/sessions/:objectId' +0ms\r\n  express:router:layer new '/sessions/:objectId' +0ms\r\n  express:router:route get '/sessions/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/sessions' +1ms\r\n  express:router:layer new '/sessions' +0ms\r\n  express:router:route post '/sessions' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/sessions/:objectId' +1ms\r\n  express:router:layer new '/sessions/:objectId' +0ms\r\n  express:router:route put '/sessions/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/sessions/:objectId' +1ms\r\n  express:router:layer new '/sessions/:objectId' +0ms\r\n  express:router:route delete '/sessions/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/upgradeToRevocableSession' +0ms\r\n  express:router:layer new '/upgradeToRevocableSession' +0ms\r\n  express:router:route post '/upgradeToRevocableSession' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/roles' +0ms\r\n  express:router:layer new '/roles' +0ms\r\n  express:router:route get '/roles' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/roles/:objectId' +0ms\r\n  express:router:layer new '/roles/:objectId' +0ms\r\n  express:router:route get '/roles/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/roles' +1ms\r\n  express:router:layer new '/roles' +0ms\r\n  express:router:route post '/roles' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/roles/:objectId' +0ms\r\n  express:router:layer new '/roles/:objectId' +0ms\r\n  express:router:route put '/roles/:objectId' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/roles/:objectId' +0ms\r\n  express:router:layer new '/roles/:objectId' +0ms\r\n  express:router:route delete '/roles/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/events/AppOpened' +1ms\r\n  express:router:layer new '/events/AppOpened' +0ms\r\n  express:router:route post '/events/AppOpened' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/events/:eventName' +1ms\r\n  express:router:layer new '/events/:eventName' +0ms\r\n  express:router:route post '/events/:eventName' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/installations' +2ms\r\n  express:router:layer new '/installations' +1ms\r\n  express:router:route get '/installations' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/installations/:objectId' +0ms\r\n  express:router:layer new '/installations/:objectId' +1ms\r\n  express:router:route get '/installations/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/installations' +0ms\r\n  express:router:layer new '/installations' +0ms\r\n  express:router:route post '/installations' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/installations/:objectId' +0ms\r\n  express:router:layer new '/installations/:objectId' +1ms\r\n  express:router:route put '/installations/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/installations/:objectId' +0ms\r\n  express:router:layer new '/installations/:objectId' +0ms\r\n  express:router:route delete '/installations/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/functions/:functionName' +1ms\r\n  express:router:layer new '/functions/:functionName' +0ms\r\n  express:router:route post '/functions/:functionName' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/jobs/:jobName' +0ms\r\n  express:router:layer new '/jobs/:jobName' +1ms\r\n  express:router:route post '/jobs/:jobName' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/jobs' +1ms\r\n  express:router:layer new '/jobs' +0ms\r\n  express:router:route post '/jobs' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/schemas' +1ms\r\n  express:router:layer new '/schemas' +0ms\r\n  express:router:route get '/schemas' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/schemas/:className' +1ms\r\n  express:router:layer new '/schemas/:className' +0ms\r\n  express:router:route get '/schemas/:className' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/schemas' +1ms\r\n  express:router:layer new '/schemas' +0ms\r\n  express:router:route post '/schemas' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/schemas/:className' +0ms\r\n  express:router:layer new '/schemas/:className' +0ms\r\n  express:router:route post '/schemas/:className' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/schemas/:className' +1ms\r\n  express:router:layer new '/schemas/:className' +0ms\r\n  express:router:route put '/schemas/:className' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/schemas/:className' +0ms\r\n  express:router:layer new '/schemas/:className' +1ms\r\n  express:router:route delete '/schemas/:className' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/push' +0ms\r\n  express:router:layer new '/push' +1ms\r\n  express:router:route post '/push' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/scriptlog' +0ms\r\n  express:router:layer new '/scriptlog' +0ms\r\n  express:router:route get '/scriptlog' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/validate_purchase' +0ms\r\n  express:router:layer new '/validate_purchase' +0ms\r\n  express:router:route post '/validate_purchase' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/serverInfo' +0ms\r\n  express:router:layer new '/serverInfo' +0ms\r\n  express:router:route get '/serverInfo' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/config' +0ms\r\n  express:router:layer new '/config' +0ms\r\n  express:router:route get '/config' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/config' +0ms\r\n  express:router:layer new '/config' +1ms\r\n  express:router:route put '/config' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/purge/:className' +0ms\r\n  express:router:layer new '/purge/:className' +0ms\r\n  express:router:route delete '/purge/:className' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/functions' +1ms\r\n  express:router:layer new '/hooks/functions' +0ms\r\n  express:router:route get '/hooks/functions' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/triggers' +0ms\r\n  express:router:layer new '/hooks/triggers' +0ms\r\n  express:router:route get '/hooks/triggers' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/functions/:functionName' +0ms\r\n  express:router:layer new '/hooks/functions/:functionName' +0ms\r\n  express:router:route get '/hooks/functions/:functionName' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/triggers/:className/:triggerName' +0ms\r\n  express:router:layer new '/hooks/triggers/:className/:triggerName' +1ms\r\n  express:router:route get '/hooks/triggers/:className/:triggerName' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/functions' +0ms\r\n  express:router:layer new '/hooks/functions' +0ms\r\n  express:router:route post '/hooks/functions' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/triggers' +0ms\r\n  express:router:layer new '/hooks/triggers' +0ms\r\n  express:router:route post '/hooks/triggers' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/functions/:functionName' +1ms\r\n  express:router:layer new '/hooks/functions/:functionName' +0ms\r\n  express:router:route put '/hooks/functions/:functionName' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/triggers/:className/:triggerName' +1ms\r\n  express:router:layer new '/hooks/triggers/:className/:triggerName' +0ms\r\n  express:router:route put '/hooks/triggers/:className/:triggerName' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/cloud_code/jobs' +0ms\r\n  express:router:layer new '/cloud_code/jobs' +0ms\r\n  express:router:route get '/cloud_code/jobs' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/batch' +0ms\r\n  express:router:layer new '/batch' +0ms\r\n  express:router:route post '/batch' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router use '/' router +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' handleParseErrors +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:application set \"x-powered-by\" to true +1ms\r\n  express:application set \"etag\" to 'weak' +0ms\r\n  express:application set \"etag fn\" to [Function: wetag] +0ms\r\n  express:application set \"env\" to 'development' +2ms\r\n  express:application set \"query parser\" to 'extended' +1ms\r\n  express:application set \"query parser fn\" to [Function: parseExtendedQueryString] +0ms\r\n  express:application set \"subdomain offset\" to 2 +1ms\r\n  express:application set \"trust proxy\" to false +0ms\r\n  express:application set \"trust proxy fn\" to [Function: trustNone] +0ms\r\n  express:application booting in development mode +0ms\r\n  express:application set \"view\" to [Function: View] +1ms\r\n  express:application set \"views\" to '/Users/craig/Code/webApps/#####/views' +0ms\r\n  express:application set \"jsonp callback name\" to 'callback' +0ms\r\n  express:application set \"port\" to '3000' +0ms\r\n  express:router use '/' query +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router use '/' expressInit +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:application .use app under / +0ms\r\n  express:router use '/' mounted_app +0ms\r\n  express:router:layer new '/' +1ms\r\n\u2713 App is running at http://localhost:3000 in development mode\r\n  Press CTRL-C to stop\r\n\r\n^C^C^C^C^C^C^C^C^C^C^C^C^C^C"}, {"classified_as": "enhancement", "text": "Hello,\r\n\r\n- [ ] I have created an RFC on the [Strapi RFC Repo](https://github.com/strapi/rfcs)\r\n- [x] I have checked for existing RFCs before creating this discussion topic\r\n\r\n\r\n**Describe the topic**\r\nThis feature concern the strapi-plugin-upload with \"_**Multiple Medias**_\" version.\r\n\r\nWhen I DELETE \u200b/upload\u200b/files\u200b/{id} a file, the relation is not removed and an array with empty element are returned from the API.\r\n\r\nFor now : \r\n- I need to rewrite API response into Client in order to remove manually all empty data from the JSON response.\r\n- I need to \"cron\" a task that remove all relations from removed media (_madness_)\r\n\r\n**Your suggestions for this topic**\r\nWhen I want to remove a file, with the route DELETE \u200b/upload\u200b/files\u200b/{id}, this will remove the relation in upload_file_morph and the entry in upload_file.\r\n\r\n**Screenshots**\r\n_None for now._\r\n\r\n**Code snippets**\r\n_None for now._\r\n\r\n**Additional context**\r\n- Relate maybe with #4918 \r\n\r\n**Environment**\r\n- Strapi beta 18.8\r\n- Bookshelf: MySQL\r\n- Provider : test with local & Google Cloud Storage"}, {"classified_as": "bug", "text": "# Bug Report\r\n\r\nWhen a user error happens, the API still logs it to a file.\r\n\r\n## Steps to Reproduce\r\n\r\n1. Try logging in with the wrong password\r\n2. See error.log created\r\n\r\n## Expected Behavior\r\n\r\nThe API should only log unexpected \"errors\" (eg system failures instead of user errors)\r\n\r\n## Actual Behavior\r\n\r\nThe API logs all non-200 status requests"}, {"classified_as": "enhancement", "text": "Make sure the repeater creates its children only once when it is born.\n"}, {"classified_as": "bug", "text": "Currently, if CmaEsSampler is used with categorical variables, it throws this error\r\n\r\nThe parameter 'x' in trial#1 is sampled independently by using RandomSampler instead of CmaEsSampler (optimization performance may be degraded). You can suppress this warning by setting warn_independent_sampling to False in the constructor of CmaEsSampler, if this independent sampling is intended behavior.\r\n\r\nAs somebody who isn't familiar with the details of CmaEsSampler, I was not aware that it didn't work with categorical variables, and thought it was an issue with how I was setting the parameter ranges\r\n\r\nIf the CmaEsSampler is called with categorical variables, it should probably throw an error/warning upfront explaining the issue."}, {"classified_as": "enhancement", "text": ""}, {"classified_as": "bug", "text": "<!--\r\nSTEP 1: Are you in the right place?\r\n\r\n- For general technical questions or \"how to\" guidance, please search StackOverflow for questions tagged \"puppeteer\" or create a new post.\r\n\r\nhttps://stackoverflow.com/questions/tagged/puppeteer\r\n\r\n- For issues or feature requests related to the DevTools Protocol (https://chromedevtools.github.io/devtools-protocol/), file an issue there:\r\n\r\nhttps://github.com/ChromeDevTools/devtools-protocol/issues/new.\r\n\r\n- Problem in Headless Chrome? File an issue against Chromium's issue tracker:\r\n\r\nhttps://bugs.chromium.org/p/chromium/issues/entry?components=Internals%3EHeadless&blocking=705916\r\n\r\nFor issues, feature requests, or setup troubles with Puppeteer, file an issue right here!\r\n-->\r\n\r\n### Steps to reproduce\r\n\r\n**Tell us about your environment:**\r\n\r\n* Puppeteer version: 1.1.1\r\n\r\npage.goto  support disable timeout. The usage of timeout is not the same\r\nNeed:  pass 0 to disable timeout  wait forerve"}, {"classified_as": "bug", "text": "Just now when I use HttpProvider,i got a very strange exception Error: Invalid JSON RPC response: undefined, and I Google it and I got many other answers which are totally useless for my  situation. And after a lot of time, I found that because the node server is down. So I open the node and my problem is solved. Then I changed the address into a wrong address, then I got the same error information.\r\n\r\nSo I wish I can get some more detailed information for the errors instead of an information for many different kinds of errors."}, {"classified_as": "bug", "text": "**Describe the bug**  \r\nMy language is Russian.  \r\nWhen I changed the language to English to take a screenshot for the previous issue, I could not return the Russian back. He was not wearing a header.  \r\n\r\n![image](https://user-images.githubusercontent.com/16899697/63215702-d1627f00-c16d-11e9-8477-953295532a14.png)  \r\n\r\nNow I\u00e2\u20ac\u2122ll go to edit the config :)   \r\n\r\n**System**   \r\nnodejs v10.16.0\r\nNPM v6.10.3\r\nStrapi version: 3.0.0-beta.15\r\nDatabase: mongodb\r\nOperating system: WSL Windows 10 - Ubuntu 18.04\r\n"}, {"classified_as": "enhancement", "text": "The relaxing of the handling of polymorphic type in #1132 has unearthed a bug in the handling of polymorphic type unification when constraints are involved.\r\nFor example, the following code fails\r\nocaml\r\ntype 'p pair = 'a * 'b constraint 'p = < left:'a; right:'b>\r\nlet foo : \r\n  < m : 'left 'right. <left:'left; right:'right> pair > \r\n   -> < m : 'left 'right. <left:'left; right:'right> pair >\r\n= fun x -> x\r\n\r\nfor OCaml version starting from at least version 4.01 .\r\n\r\nWith the heavier reliance on explicitly polymorphic type unification, the following code fails starting with 4.11 : \r\nocaml\r\ntype 'p pair = 'a * 'b constraint 'p = < left:'a; right:'b>\r\nlet error: 'left 'right.\r\n  <left:'left; right:'right> pair -> <left:'right; right:'left> pair =\r\n  fun (x,y) -> (y,x)\r\n\r\nNote that this failure has been kind of observed in the wild, since it affects at least of my own library (and one that is not completely a toy): https://github.com/Octachron/orec/blob/master/src/namespace.ml#L307. "}, {"classified_as": "bug", "text": "## Motivation\r\n\r\nOptuna uses several modules to check library versions such as packaging  and distutils.  We'd like to rewrite them using packaging as discussed in #1560.\r\n\r\n## Description\r\n\r\nPlease update the version checking in the following files:\r\n\r\nThe following files use distutils:\r\n- [x] optuna/dashboard.py\r\n- [x] optuna/visualization/_plotly_imports.py\r\n\r\nThe following files use pkg_resources:\r\n- [x] examples/allennlp/allennlp_jsonnet.py\r\n- [x] examples/allennlp/allennlp_simple.py\r\n- [x] examples/chainer_simple.py\r\n- [x] examples/pruning/chainer_integration.py\r\n- [x] examples/pytorch_lightning_simple.py\r\n- [x] examples/tensorflow_eager_simple.py\r\n- [x] tests/integration_tests/test_tfkeras.py\r\n\r\nYou can submit a PR for each of the files."}, {"classified_as": "bug", "text": "I'm doing some unit-testing on a module, to be used in an isomorphic app process. So, I write-up server-side.js and client-side.js for Mocha to consume.  Individually, they each run pretty good - so far.  However, after starting to use TestUtils in client-side, server-side starts failing on account of:\n\n\nUncaught ReferenceError: document is not defined\n at getActiveElement (~p/node_modules/react/lib/getActiveElement.js:23:12)\n at ReactReconcileTransaction.ReactInputSelection.getSelectionInformation (~p/node_modules/react/lib/ReactInputSelection.js:40:23)\n at ReactReconcileTransaction.Mixin.initializeAll (~p/node_modules/react/lib/Transaction.js:168:30)\n at ReactReconcileTransaction.Mixin.perform (~p/node_modules/react/lib/Transaction.js:133:12)\n at ReactUpdatesFlushTransaction.Mixin.perform (~p/node_modules/react/lib/Transaction.js:134:20)\n at ReactUpdatesFlushTransaction.assign.perform (~p/node_modules/react/lib/ReactUpdates.js:95:38)\n at Object.flushBatchedUpdates (~p/node_modules/react/lib/ReactUpdates.js:175:19)\n at Object.wrapper [as flushBatchedUpdates] (~p/node_modules/react/lib/ReactPerf.js:70:21)\n at ReactDefaultBatchingStrategyTransaction.Mixin.closeAll (~p/node_modules/react/lib/Transaction.js:207:25)\n at ReactDefaultBatchingStrategyTransaction.Mixin.perform (~p/node_modules/react/lib/Transaction.js:148:16)\n at Object.ReactDefaultBatchingStrategy.batchedUpdates (~p/node_modules/react/lib/ReactDefaultBatchingStrategy.js:66:19)\n at Object.enqueueUpdate (~p/node_modules/react/lib/ReactUpdates.js:215:22)\n at enqueueUpdate (~p/node_modules/react/lib/ReactUpdateQueue.js:30:18)\n at Object.ReactUpdateQueue.enqueueSetState (~p/node_modules/react/lib/ReactUpdateQueue.js:208:5)\n at ReactComponent.setState (~p/node_modules/react/lib/ReactComponent.js:69:20)\n at cb (~p/node_modules/reflux/src/connect.js:17:85)\n at EventEmitter.eventHandler (~p/node_modules/reflux/src/PublisherMethods.js:40:22)\n at EventEmitter.emit (~p/node_modules/reflux/node_modules/eventemitter3/index.js:72:35)\n at Store.module.exports.trigger (~p/node_modules/reflux/src/PublisherMethods.js:110:26)\n at Store.Reflux.createStore.onLoadFailed (~p/test/fixtures/WikiApp.js:40:10)\n at Store.Reflux.createStore.onLoadCompleted (~p/test/fixtures/WikiApp.js:35:12)\n at EventEmitter.eventHandler (~p/node_modules/reflux/src/PublisherMethods.js:40:22)\n at EventEmitter.emit (~p/node_modules/reflux/node_modules/eventemitter3/index.js:72:35)\n at Function.module.exports.trigger (~p/node_modules/reflux/src/PublisherMethods.js:110:26)\n at null._onTimeout (~p/node_modules/reflux/src/PublisherMethods.js:120:24)\n at Timer.listOnTimeout (timers.js:110:15)\n\n\nApparently, this line has kicked React into client-mode.\n\n js\nvar node = TestUtils.renderIntoDocument(element);\n\n\nThat's not too bad, but I need way to kick React out of client-mode, so I can add it to my teardown method (aka after).\n"}, {"classified_as": "bug", "text": "<!--  If you do not respect this template your issue will be closed. -->\r\n\r\n<!--  Before writing your issue make sure you are using:-->\r\n<!-- Node 9.x.x -->\r\n<!-- npm 5.x.x -->\r\n<!-- The latest version of Strapi. -->\r\n\r\n**Informations**\r\n- **Node.js version**:\r\n9.0.0\r\n- **npm version**:\r\n6.0.1\r\n- **Strapi version**:\r\n3.0.0-alpha.12.2\r\n- **Database**:\r\nMongoDB v3.6.5\r\n- **Operating system**:\r\nMac OS X Sierra\r\n**What is the current behavior?**\r\nNothing happens when I click the icon ( I can however click anywhere else on the line )\r\n\r\n\r\n**Steps to reproduce the problem**\r\nClick the pencil icon.\r\n\r\n\r\n**What is the expected behavior?**\r\nTo edit the entry (just as when clicking anywhere on the line).\r\n\r\n\r\n**Suggested solutions**\r\nWell, erhm ... how about making it work as expected!?\r\n\r\n\r\n<!--  Make sure to browse the opened and closed issues before submit your issue. -->\r\n"}, {"classified_as": "enhancement", "text": "\r\ni created a polymorphic relationship to have 2 tables together in an endpoint but the content -Manager does not work in the admin\r\n\r\n<img width=\"733\" alt=\"Captura de pantalla 2019-08-29 a las 13 48 09\" src=\"https://user-images.githubusercontent.com/14913444/63941006-fb1f7e00-ca6a-11e9-8b61-b35843542d7d.png\">\r\n\r\nYou could also make an endpoint for the polymorphic table to obtain only the related data, it would be very useful for tables that are not related\r\n"}, {"classified_as": "enhancement", "text": "https://github.com/RPCS3/rpcs3/blob/87b510d5bfb3fe82e1acc74089cbb9d4a3078201/appveyor.yml#L130\r\n\r\nThis needs to be done only if build succeeds, otherwise a failed branch build may take up the master versioning for that commit and then future builds will fail to be renamed as there can't be duplicated versions."}]