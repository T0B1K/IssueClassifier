[{"classified_as": "api", "text": "<!-- please only use this template for submitting enhancement requests -->\r\n\r\n**what would you like to be added**:\r\nadd --list option to kubectl annotate command\r\n\r\n**why is this needed**:\r\nlike kubectl label command\u00ef\u00bc\u0153show annotations quickly"}, {"classified_as": "bug", "text": "# this is a feature proposal\r\nsupport c++ lambda!\r\n\r\n## description\r\n\r\ngiven that aws now supports c++ as exec env, will it be possible to add a c++ template to the serverless project?\r\n\r\ni would love to work on this. is there some arch diagram of the code base that i can look at, or any tips? \r\n\r\nthanks. "}, {"classified_as": "api", "text": "<!-- \r\n\r\nhalf of all issues filed here are duplicates, answered in the faq, or not appropriate for the bug tracker. even if you think you've found a *bug*, please read the faq first, especially the common \"bugs\" that aren't bugs section!\r\n\r\nplease help us by doing the following steps before logging an issue:\r\n  * search: https://github.com/microsoft/typescript/search?type=issues\r\n  * read the faq: https://github.com/microsoft/typescript/wiki/faq\r\n\r\nplease fill in the *entire* template below.\r\n-->\r\n\r\n<!--\r\nplease try to reproduce the issue with the latest published version. it may have already been fixed.\r\nfor npm: `typescript@next`\r\nthis is also the 'nightly' version in the playground: http://www.typescriptlang.org/play/?ts=nightly\r\n-->\r\n**typescript version:**  3.8.3\r\n\r\n<!-- search terms you tried before logging this (so others can find this issue more easily) -->\r\n**search terms:**\r\n\r\nvscode repository issues\r\n\r\n**code**\r\n\r\nmylib.ts\r\n```ts\r\nexport const a = 1;\r\n\r\ndeclare const exports: typeof import(\"./mylib\"); // like commonjs 'exports'\r\nconsole.log(exports.a);\r\n```\r\nglobal.d.ts\r\n```ts\r\ndeclare const mylib: typeof import(\"./mylib\");\r\n```\r\napp.ts\r\n```ts\r\nconsole.log(mylib.a);\r\n```\r\n\r\n**expected behavior:**\r\n\r\nsince it can navigate from `app.ts` to `mylib.ts` by go to defintion of `mylib.a`, `find references of mylib.a` should include the line in `app.ts`\r\n\r\nfind references should follow module ref forms like `typeof import(\"...\")`, isn't it ?\r\n\r\n**actual behavior:**\r\n\r\nnow i search all references for `mylib.a` in vscode, the result list didn't show the line in `app.ts`, but showed two lines in `mylib.ts`: \r\n```\r\nexport const a = 1;\r\nconsole.log(exports.a);\r\n```\r\n\r\n**playground link:** <!-- a link to a typescript playground \"share\" link which demonstrates this behavior -->\r\n\r\n**related issues:** <!-- did you find other bugs that looked similar? -->\r\n\r\nnot found"}, {"classified_as": "api", "text": "this is not working anymore with r59:\nhttp://threejs.org/examples/css3d_panorama.html\n"}, {"classified_as": "api", "text": "with r59 three.object3d rotation object is now of type three.euler (was three.vector before).\nnow implementations like in the webgl_interactive_cubes_gpu don't work any longer when doing:\n\n``` javascript\nvar rotation = new three.vector3();\n\nrotation.x = math.random() * 2 * math.pi;\nrotation.y = math.random() * 2 * math.pi;\nrotation.z = math.random() * 2 * math.pi;\n\nvar cube = new three.mesh( new three.cubegeometry( 1, 1, 1 ) );\n\ncube.rotation.copy( rotation ); // doesn't work any longer because copy method expects an euler object\n```\n\nquestion - is the current behavior correct and only the example should be updated to be compliant with r59 (i could help with this) or should using a vector still work?\n"}, {"classified_as": "api", "text": "### vue.js version\r\n2.0.3\r\n\r\n### reproduction link\r\n<!-- a minimal jsbin, jsfiddle, codepen, or a github repository that can reproduce the bug. -->\r\n<!-- you could start with this template: http://jsfiddle.net/df4lnuw6/ -->\r\n\r\nhttps://jsfiddle.net/crswll/5yynzyj3/\r\n\r\n### steps to reproduce\r\nfocus the input and try using w, a, s or d to trigger key up instead of up, right, down and left.\r\n\r\n### what is expected?\r\ni expected to be able to hit w or up to trigger `up2`, a or left to trigger `left2`, s or down to trigger `down2`, d or right to trigger `right2`.\r\n\r\n### what is actually happening?\r\nnothing. i thought it would work because of this line from the source but it doesn't...\r\n\r\nhttps://github.com/vuejs/vue/blob/b51b9eae4d427d0a909aff8c5f08575c450711a1/src/compiler/codegen/events.js#l15\r\n\r\nalso, kind of a side note:\r\n\r\ncan we overwrite the default keycodes? i'd rather name my custom alias `up` instead of `up2`.  \r\n\r\n"}, {"classified_as": "bug", "text": "#### describe the workflow you want to enable\r\ni want to be able to define a custom criterion for tree splitting when building decision trees / tree ensembles. \r\nmore specifically, it would be great to be able to base this criterion on features besides x & y (i.e. \"z\"), and for that i will need the indexes of the samples being considered. \r\n\r\n#### describe your proposed solution\r\nclf = decisiontreeclassifier(..., criterion=my_func)\r\nclf.fit(x, y)\r\n\r\ndef my_func(indexes):\r\n   return [purity score]\r\n\r\n#### describe alternatives you've considered, if relevant\r\ni looked at the source .pyx code, but it's not clear to me how to start modifying it...\r\nif there was a nice explanation somewhere, it would be a good start.\r\n\r\n#### additional context\r\ni want to define a criterion that takes into consideration a confounding variable."}, {"classified_as": "api", "text": "what about modernizing a bit the caret? the following style outputs something like this:\r\n![image](https://user-images.githubusercontent.com/9438102/84885058-c8468500-b092-11ea-958d-1bf9989ad058.png)\r\n\r\n```\r\n.dropdown-toggle::after {\r\n  content: \"\";\r\n  display: inline-block;\r\n  margin-left: .45em;\r\n  vertical-align: 0.2em;\r\n  border: solid $body-color;\r\n  border-width: 0 2px 2px 0;\r\n  padding: 3px;\r\n  transform: rotate(45deg);\r\n}\r\n```\r\n\r\nmaybe we could even use the [chevron down](https://icons.getbootstrap.com/icons/chevron-down/) bs icon.\r\n\r\ni swear i tried (not for a long time though) to directly make a pr for this to integrate all directional variations and variables, but i couldn't properly figure out how the project pipeline works (i managed to launch the server but changes were not taken into account)."}, {"classified_as": "api", "text": "- syncthing version: 1.7.0\r\n- browser: any\r\n- what happens:\r\n>syncthing settings --> connections tab\r\n>sync protocol listen address: default\r\n>unticked/disabled: enable nat traversal, global discovery, enable relaying\r\n>ticked/enabled: local discovery\r\nsyncthing whilst only local discovery is enabled will use upnp and commit port forwarding as if nothing was enforced (only local discovery enabed) .\r\n\r\n - what you expected to happen instead:\r\nsetting only local discovery and keeping disabled enable nat traversal, global discovery, enable relaying\r\nsyncthing was only limited within the bounds of internal network and never acted on its own and/or tried to open any outside ports (port forward).\r\n\r\nthis issue happens on all syncthing 1.7.0 flavours (linux, android etc)\r\nall devices are mass opening ports by means of upnp with outside world even though only local discovery is the only setting enabled.\r\n\r\ndisabling completely tcp in \"sync protocol listen address\" and having only quic enabled\r\nmeaning: sync protocol listen address: from default to quic://0.0.0.0:22000 or quic://10.11.10.xx \r\nthus specifying only quick mitigates issue of forced port forwarding/opening outside ports/use of upnp even though \"local discovery\" is the only setting in enabled state.\r\n\r\nwhat\u00e2\u20ac\u2122s the point of having a \"local discovery\" setting if it keeps port forwarding/opening outside ports/uses upnp.\r\n\r\n - any steps to reproduce the problem:\r\n>clean install syncthing (i did this twice)\r\n>syncthing settings --> connections tab\r\n>sync protocol listen address: default\r\n>unticked/disabled: enable nat traversal, global discovery, enable relaying\r\n>ticked/enabled: local discovery\r\n>restart if necessary syncthing and observe for any open ports"}, {"classified_as": "api", "text": "i have html page with some inline svg. clicking links (positioned in svg) supposed to show hidden panes. it worked fine in bootstrap 3 with all my browsers (firefox, edge, ie11, chrome). after upgrade to bootstrap 4 it stopped working only in ie11 (no effect on link click). [live demo](https://jsbin.com/piyacopaxa/edit?html,output). test code:\r\n```html\r\n<!doctype html>\r\n<html>\r\n<head>\r\n  <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\" />\r\n  <title>test</title>\r\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\">\r\n</head>\r\n<body>\r\n  <div class=\"container\">\r\n    <svg width=\"100%\" preserveaspectratio=\"xminymin meet\" height=\"400\">\r\n      <g class=\"nav\">\r\n        <a href=\"#nav-tab1\" data-toggle=\"pill\" class=\"nav-item nav-link\">\r\n          <text x=\"40\" y=\"40\">home</text>\r\n        </a>\r\n        <a href=\"#nav-tab2\" data-toggle=\"pill\" class=\"nav-item nav-link\">\r\n          <text x=\"180\" y=\"70\">profile</text>\r\n        </a>\r\n      </g>\r\n    </svg>\r\n    <div class=\"tab-content\">\r\n      <div class=\"tab-pane\" id=\"nav-tab1\">\r\n        <p>this is home tab...</p>\r\n      </div>\r\n      <div class=\"tab-pane\" id=\"nav-tab2\">\r\n        <p>this is profile tab...</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"></script>\r\n</body>\r\n</html>\r\n```\r\ntested in windows 7, windows 10, interned explorer 11, google chrome 78, mozilla firefox 70, microsoft edge 41."}, {"classified_as": "bug", "text": "i've also opened a related issue in the joyent/node#9279 repo about this. the \nerror message from iojs is slightly different, but just as unhelpful in this situation.\n\nfor the sake of convenience, the rest of this post is verbatim what the issue \nunder the node repo had, with the minor change in error message accounted \nfor.\n\nso this issue seems to have been around for quite some time. the problem\nprobably affects all instances where things are piped into closed streams, but a\nvery common example that comes up in practice is piping the output of a node\nprogram to something else.\n\nlet's use this as a simple (albeit contrived) example:\n\n```\n$ iojs -e \"console.log(1);console.log(2)\" | cat\n1\n2\n```\n\nwhen piping to something that won't consume the entirety of the stream, the\nprogram crashes in a very unhelpful way:\n\n```\n$ iojs -e \"console.log(1);console.log(2);\" | head -1\n1\nevents.js:141\n      throw er; // unhandled 'error' event\n            ^\nerror: write epipe\n    at object.exports._errnoexception (util.js:734:11)\n    at exports._exceptionwithhostport (util.js:757:20)\n    at writewrap.afterwrite (net.js:753:14)\n```\n\ncategorizing this as an error in the first place is a little strange. while i\ncan appreciate that trying to write to a closed stream is an error in theory,\nit seems really odd to crash like this when not paging through everything on\nstdout.\n\ntreating stdout as a special case may be a bit much to ask, but at the\nvery least, there should be some improvements to the error messaging here. the\nexample i gave was just using `iojs -e`, but even with a proper file, no useful\nstacktrace or messaging is provided. maybe add something like: \n`warning: attempting to pipe to a closed stream (foo.js:10:12)`?\n\ni discovered this as i was piping the output of a cli program i'd written to\n`less`. when paging all the way to the bottom, no errors would be logged, but\nexiting less before paging all the way through would consistently have the epipe\nerror written to stderr.\n\nright now, there are a few workarounds. \n\nusers can just redirect stderr to `/dev/null` like so:\n\n```\n$ 2>/dev/null iojs -e 'console.log(1);console.log(2)' | head -1\n1\n```\n\nor use the [epipebomb](https://github.com/mhart/epipebomb) module. \n\nneither approach is ideal.\n"}, {"classified_as": "api", "text": ".btn - > .b4-btn\n\nit's conveniently for separate code and readability.\n"}, {"classified_as": "api", "text": "database updates are tracked by sequence number. when syncthing starts after a crash there is a risk that the sequence number becomes out of sync and old sequence numbers are reused. this results in missed updates to peers and devices mysteriously out of sync."}, {"classified_as": "bug", "text": "### version\r\n2.5.2\r\n\r\n### reproduction link\r\n[https://github.com/wonderful-panda/vue-sandbox](https://github.com/wonderful-panda/vue-sandbox)\r\n\r\n### steps to reproduce\r\ncompile this code by tsc\r\n\r\n```typescript\r\nimport vue, { vnode } from \"vue\";\r\n\r\nconst ngcomponent = vue.extend({\r\n    name: \"ngcomponent\",\r\n    props: {\r\n        foo: { type: string },\r\n        bar: {}    // any types are accepted\r\n    },\r\n    render(h): vnode {\r\n        return h(\"div\", this.foo);\r\n    }\r\n});\r\n```\r\n\r\nor clone from repro link and `npm install && npm run build`\r\n\r\n\r\n### what is expected?\r\nsuccessfully compiled.\r\n\r\nand `this.foo` is treated as string, `this.bar` is treated as any.\r\n\r\n### what is actually happening?\r\nfailed to compile.\r\n\r\n```\r\nsrc/index.ts(10,30): error ts2339: property 'foo' does not exist on type 'combinedvueinstance<vue, {}, {}, {}, readonly<{}>>'.\r\n```\r\n\r\n\r\n---\r\nworkaround:\r\n\r\n```ts\r\nimport vue, { vnode } from \"vue\";\r\n\r\nvue.extend({\r\n    name: \"workaround\",\r\n    props: {\r\n        foo: { type: string },\r\n        bar: {} as (() => any)   // any types are accepted\r\n    },\r\n    render(h): vnode {\r\n        return h(\"div\", this.foo);\r\n    }\r\n});\r\n```\r\n\r\n<!-- generated by vue-issues. do not remove -->"}, {"classified_as": "api", "text": "if you use canvasrenderer and meshlambertmaterial the material will not display on the object.\n"}, {"classified_as": "bug", "text": "i have the problem that if i'm going to load a colored ctm file with the integrated three.ctmloader i see the object but it is only colored uniform. it tried out different material settings but i never got the result that is presented by the openctm viewer.\n\nthis is an excerpt of the console.log from the geometry that is delivered by the loader:\n\nvertexcolorbuffer: webglbuffer\nitemsize: 4\nnumitems: 3260612\n**proto**: webglbuffer\n\ndoes this mean that the color entries of the ctm file are parsed successfully? how can i load a colored ctm model?\n"}, {"classified_as": "bug", "text": "would be nice to have utility classes like `rounded-lg` and `rounded-sm` as you already have scss variables for `border-radius-lg` and `border-radius-sm`."}, {"classified_as": "api", "text": "as am exported the scene using `sceneexporter` and am loading the same using sceneloader, but am getting `uncaught typeerror: cannot read property 'camera' of undefined` so the model is not loaded, is it bug ?\n\nexport code:\n\n`exporter = new three.sceneexporter;\n    var obj = exporter.parse(scene);\n    var json = json.stringify(obj);\n    console.log(json);\n    localstorage.setitem(\"scene\", json.stringify(json));`\n\nloader : \n\n`var json = (localstorage.getitem('scene'));\n console.log(json);\n var sceneloader = new three.sceneloader();\n sceneloader.parse(json.parse(json), function (e) {\nconsole.log(e);\nscene = e.scene;\nscene.add(scene);\n }, '.');`\n"}, {"classified_as": "bug", "text": "- **version**: v6.7.0\n- **platform**: tested on linux and windows\n\nwhen running a script via \"node -e\", there doesn't seem to be a clean way to use `process.argv` when \"flag\" arguments are expected (or more accurately, any argument that begin with the '-' character). what happens is that the argument is silently dropped.\n\nthe following all work as expected:\n\n```\n$ node -e 'console.log(process.argv)'\n[ '/usr/bin/node' ]\n$ node -e 'console.log(process.argv)' arg1\n[ '/usr/bin/node', 'arg1' ]\n$ node -p -e 'console.log(process.argv)' arg1\n[ '/usr/bin/node', 'arg1' ]\nundefined\n$ node -e 'console.log(process.argv)' arg1 arg2\n[ '/usr/bin/node', 'arg1', 'arg2' ]\n$ node -p -e 'console.log(process.argv)' arg1 arg2\n[ '/usr/bin/node', 'arg1', 'arg2' ]\nundefined\n$ node --require fs -e 'console.log(process.argv)' -- arg1 arg2\n[ '/usr/bin/node', 'arg1', 'arg2' ]\n$ node -e 'console.log(process.argv)' arg1 -x\n[ '/usr/bin/node', 'arg1', '-x' ]\n$ node -e 'console.log(process.argv)' arg1 -x -e\n[ '/usr/bin/node', 'arg1', '-x', '-e' ]\n$ node -e 'console.log(process.argv)' -- arg1 -x -e\n[ '/usr/bin/node', 'arg1', '-x', '-e' ]\n$ node -e 'console.log(process.argv)' -- arg1 -- -x\n[ '/usr/bin/node', 'arg1', '--', '-x' ]\n```\n\nbut it seems impossible to have a '-' character at the beginning of the first argument. the following are unexpected and undesirable results:\n\n```\n$ node -e 'console.log(process.argv)' -- -x\n[ '/usr/bin/node' ]\n$ node -e 'console.log(process.argv)' -- -x arg2\n[ '/usr/bin/node', 'arg2' ]\n```\n\nnote above that \"flag-type\" arguments are successfully passed to the script as long as they are preceded by at least one \"non-flag\" argument.\n\n**the expected and desirable behavior is that all arguments after (the first encountered) \"--\" are passed into the script.**\n\nthank you\n"}, {"classified_as": "bug", "text": "presentlyu, sparsepca used `dict_learning` or `dict_learning_online` on `x.t`, and sets its `components_` to be the outputted code of these functions (which is sparse).\n\nthough it is a simple way to reuse code from `dict_learning.py`, it has for drawback that it does not allow the user to learn in the sample direction, which prevents the use of `partial_fit` and is not adapted in a setting where data is streamed.\n\na solution for this would be to use another formulation for sparse pca, found in [1] which enforces an elastic net constraint for d, and thus implies projecting d on the elastic net ball instead of the l2 ball as it is done today.\n\nefficient projection algorithms exists, as described in [1], [2].\n\n[1] mairal, j., bach, f., ponce, j., & sapiro, g. (2010). online learning for matrix factorization and sparse coding. the journal of machine learning research, 11, 19-60.\n[2] rodola, e., torsello, a., harada, t., kuniyoshi, y., & cremers, d. (2013, december). elastic net constraints for shape matching. in computer vision (iccv), 2013 ieee international conference on (pp. 1169-1176). ieee.\n"}, {"classified_as": "api", "text": "\r\n*ts template added by @mjbvz*\r\n\r\n**typescript version**: 4.0.0-dev.20200518\r\n\r\n**search terms**\r\n- completionentrydetails\r\n- jsdoc\r\n- tags\r\n\r\n---\r\n\r\n<!--  do not delete this! bug_report_template  -->\r\n<!-- please read our rules of conduct: https://opensource.microsoft.com/codeofconduct/ -->\r\n<!-- please search existing issues to avoid creating duplicates. -->\r\n<!-- also please test using the latest insiders build to make sure your issue has not already been fixed: https://code.visualstudio.com/insiders/ -->\r\n\r\n<!-- use help > report issue to prefill these. -->\r\n- vscode version: 1.45.0\r\n- os version: ubuntu 20.04\r\n\r\nsteps to reproduce:\r\n\r\n1. add jsdocs to an interface, and implement that interface in a class\r\n\r\n```ts\r\ninterface sample {\r\n  /** \r\n   * does some important work\r\n   * @param name name of employee working\r\n   * @param age age of employee\r\n   */\r\n  dowork(name: string, age: number): void;\r\n}\r\n\r\nlet s: sample;\r\n\r\n\r\nclass concrete implements sample {\r\n  dowork(name: string, age: number) {\r\n    // nothing to do\r\n  }\r\n}\r\n\r\nlet c: concrete;\r\n```\r\n2. attempt to access intellisense for the class, and notice the @param information has not been picked up from the interface.\r\n\r\n![travetto-1589679889262](https://user-images.githubusercontent.com/1264175/82133926-868a9c00-97bf-11ea-972b-9ddf6a5708e3.gif)\r\n\r\n\r\n<!-- launch with `code --disable-extensions` to check. -->\r\ndoes this issue occur when all extensions are disabled?: yes\r\n"}, {"classified_as": "api", "text": "i tried to revert some changed files in folder with enabled staggered versioning. clicked on \"versions\" button, appeared modal window with horizontal line, two empty fields with labels \"filter by name:\" and \"filter by date:\", and nothing more. \"no data\" warning is missing.\r\nbrowser console:\r\n\r\n```\r\nerror: $scope.restoreversions.tree.filternodes is not a function\r\n@http://127.0.0.1:8384/syncthing/core/syncthingcontroller.js:2023:13\r\n$watchcollectionaction@http://127.0.0.1:8384/vendor/angular/angular.js:14298:13\r\n$digest@http://127.0.0.1:8384/vendor/angular/angular.js:14431:23\r\n$evalasync/<@http://127.0.0.1:8384/vendor/angular/angular.js:14628:15\r\ncompleteoutstandingrequest@http://127.0.0.1:8384/vendor/angular/angular.js:4959:7\r\nbrowser/self.defer/timeoutid<@http://127.0.0.1:8384/vendor/angular/angular.js:5347:7\r\n logbar.js:11:13\r\n\tintercept/console[method] http://127.0.0.1:8384/syncthing/development/logbar.js:11:13\r\n\tconsolelog/< http://127.0.0.1:8384/vendor/angular/angular.js:11725:18\r\n\t$exceptionhandlerprovider/this.$get</< http://127.0.0.1:8384/vendor/angular/angular.js:8638:7\r\n\t$digest http://127.0.0.1:8384/vendor/angular/angular.js:14449:19\r\n\t$evalasync/< http://127.0.0.1:8384/vendor/angular/angular.js:14628:15\r\n\tcompleteoutstandingrequest http://127.0.0.1:8384/vendor/angular/angular.js:4959:7\r\n\tbrowser/self.defer/timeoutid< http://127.0.0.1:8384/vendor/angular/angular.js:5347:7\r\n```\r\n\r\nsyncthing version: v0.14.50, linux (64 bit)\r\nos version: gentoo\r\nbrowser version: firefox 62.0\r\n\r\n"}, {"classified_as": "api", "text": "how to reproduce: \n- open a modal that's higher than the window height\n- focus an input field\n- press \"done\" in the ios keyboard\n\nyou can no longer scroll to the bottom of the modal :(\n\njsbin: \nhttps://jsbin.com/hagiyojufu\n( https://jsbin.com/hagiyojufu/1/edit?html,css,js,output )\n"}, {"classified_as": "bug", "text": "## feature request\r\n\r\n**please allow configuring bootstrap to use a second version of jquery that is available in a global other than `$` or `jquery`, via use of `jquery.noconflict(true)`.**\r\n\r\nseveral issues have already been addressed regarding `$.noconflict()` support (in which `$` would be unavailable, but `jquery` would be). this was largely due to wordpress running jquery in no conflict mode. \r\n\r\nwordpress also runs an old version (`1.12.4`) which no longer receives patches (and is [vulnerable](https://nodesecurity.io/advisories/jquery_xss) ). many developers will \"upgrade\" jquery before wp does. however, upgrading wordpress's jquery in place via `wp_deregister_script` is typical, but [responsible developers should not replace wp's jquery](https://pippinsplugins.com/why-loading-your-own-jquery-is-irresponsible/).  [a better way is described by wp engine](https://nodesecurity.io/advisories/jquery_xss): wp developers should leave wp core's library alone as to not break what is depending on them, and register a new version with `$.noconflict(true)`.\r\n\r\nif bootstrap looked for jquery in some other global, `var twbs$ = jquery.noconflict(true)` (naming variables is hard) would allow using a modern version of jquery in bootstrap, while preserving wp core's version for itself.\r\n\r\nthere may be other use-cases of wanting to use a jquery that isn't on the `jquery` or `$` globals. "}, {"classified_as": "api", "text": "hello. can you add some variable like \"$breadcrumb-link-color\" in v4, which affects on \"a\" tags, please? designers are unstoppable and re-styling it allmost always, but now impossible to change it without changing \"breadcrumb.scss\" (or global only). thank you.\n"}, {"classified_as": "bug", "text": "hi first i should say bootstrap is the best responsive framework, and big thanks from bootstrap and twitter.\n\nbut one big problem that we have with it is:\nbootstrap is ltr and it have not rtl version support by bootstrap\nbut some iraninan pepole do it. such as http://www.webdesignermag.ir/download/473/ that you see it's 3.1.1 version, but now 3.3.4 released.\nfor solving this problem , i have an offer to crate an ability in http://getbootstrap.com/customize for download rtl version for rtl language pepole.\nwith respect hooman mirghasemi.\n"}, {"classified_as": "bug", "text": "hello, i think some responsive variations to the <code>.h-100 </code>  class would be useful. \r\nthanks!"}, {"classified_as": "api", "text": "originally reported by alexanmtz at: http://bugs.jquery.com/ticket/8556\n\n<p>\nas you can see in live example:\n<a class=\"ext-link\" href=\"http://jsfiddle.net/frbyf/6/\" rel=\"nofollow\"><span class=\"icon\">&nbsp;</span>http://jsfiddle.net/frbyf/6/</a>\n</p>\n\n<p>\nthe fadein or any opacity animation doesn't work when applied in element that his child have a position different from static.\n</p>\n\n<p>\nall browsers work as expected except ie7 and ie8.\n</p><p>issue reported for jquery 1.4.4</p>\n"}, {"classified_as": "bug", "text": "the `intersectobjects( pointer, objects )` in transformcontrols [always returns false](https://github.com/mrdoob/three.js/blob/dev/examples/js/controls/transformcontrols.js#l1012) when its testing if user is hovering the mouse over the handles or trying to click.\n\nthe handles doesn't highlight and the transform tool can't be used at all. \n\n![transformbug](https://cloud.githubusercontent.com/assets/2827554/8518021/8fbbac28-23c6-11e5-8307-8c50defdef97.png)\n_the yz-plane indicator should be highlighted on the picture_\n"}, {"classified_as": "bug", "text": "**what happened**:\r\n\r\nin kubernetes clusters with o(100k) pods, the initialization of watch cache and shared informer inside of kube-apiserver takes 30-50 seconds. before this happens, node authorizer is not able to accept any request.\r\nwhen this happens, kubelets are retrying the requests leading to a retry loop and generating a significant load on the master which in effect can significantly slow down a kube-apiserver initialization, ultimately leading to 429 errors and kube-apiserver crashloop.\r\n\r\nthe information about state of node authorizer (if it's initialized or not) is not available externally and cannot be used by e.g. load balancer to direct traffic instances that are already initialized.\r\n\r\n\r\n**what you expected to happen**:\r\n\r\nwe should have a way to determine if the kube-apiserver is ready to serve requests. currently /healthz, /livez or /readyz endpoints don't export any information that can be used to determine state of node authorizer. \r\n\r\nin multimaster environment, when one of the kube-apiserver replicas is not yet initialized, we should redirect traffic to other replicas, but currently there is no signal we can use to determine if the replica is initialized or not.\r\n\r\n**how to reproduce it (as minimally and precisely as possible)**:\r\n\r\nrun scalability load test in 3000 node scale. right before \"scaling objects\" step, restart all masters. they will fail to reboot in ~minute window, so will be killed by livenessprobe.\r\n\r\n**anything else we need to know?**:\r\n\r\nwhile in our repro we suffer from node authorizer not being initialized, this likely also affects other controllers working inside of kube-apiserver.\r\n\r\ni suggest adding a poststarthook blocking /healthz that will expose the status of all informers in the system. this way we can use that information in load balancer to direct traffic only to already initialized instances. i will send pr for this.\r\n\r\n**environment**:\r\n- kubernetes version (use `kubectl version`): tested in 1.17 and 1.18\r\n- cloud provider or hardware configuration:\r\n- os (e.g: `cat /etc/os-release`):\r\n- kernel (e.g. `uname -a`):\r\n- install tools:\r\n- network plugin and version (if this is a network-related bug):\r\n- others:\r\n\r\n/assign @wojtek-t \r\n/assign @lavalamp \r\n/cc @mm4tt "}, {"classified_as": "api", "text": "i just filed https://bugs.chromium.org/p/chromium/issues/detail?id=713159\r\nthis affects syncthing, because there is a heading inside the button. this causes chrome to think that the accessibility tree should be flattened, and therefore, the accordian no longer has sections marked with headings.\r\n\r\nit is not necessarily necessary to have a button here at all for accessibility purposes, because aria-expanded can directly be put on a heading. this will cause a screen reader to report something like \"heading level three collapsed my device 1.\" if this was a feature request in the past, or a user has requested buttons be placed on each element which is to be expanded and collapsed, it should be noted that the heading should probably be placed outside the button to prevent issues such as this. \r\nthanks"}, {"classified_as": "api", "text": "i hope it will be stronger. can customize \"active\" and \"show\" and more.\r\nexample\u00ef\u00bc\u0161\r\n`<ul class=\"nav nav-tabs\" id=\"mytab\" role=\"tablist\" tab-active-class=\"xxxxx\" >`\r\n\r\nexample2\u00ef\u00bc\u0161\r\n```\r\n<ul class=\"nav nav-tabs\" id=\"mytab\" role=\"tablist\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link active\" id=\"home-tab\" data-toggle=\"tab\" href=\"#home\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\" tab-active-class=\"xxxxx\">home</a>\r\n  </li>\r\n```"}, {"classified_as": "bug", "text": "<!--\r\nthank you for reporting an issue.\r\n\r\nthis issue tracker is for bugs and issues found within node.js core.\r\nif you require more general support please file an issue on our help\r\nrepo. https://github.com/nodejs/help\r\n\r\n\r\nplease fill in as much of the template below as you're able.\r\n\r\nversion: output of `node -v`\r\nplatform: output of `uname -a` (unix), or version and 32 or 64-bit (windows)\r\nsubsystem: if known, please specify affected core module name\r\n\r\nif possible, please provide code that demonstrates the problem, keeping it as\r\nsimple and free of external dependencies as you are able.\r\n-->\r\n\r\n* **version**: v10.0.0-nightly20180309099e621648\r\n* **platform**: win10 x64\r\n* **subsystem**: ?\r\n\r\n<!-- enter your issue details below this comment. -->\r\n```\r\nvar fs = require('fs/promises'); \r\nfs.readfile(path,\"utf8\").then((data)=>...\r\n```\r\n\r\n**data** will be of type string, when specifying the encoding in the method call, but with the latest version (**v10.0.0-nightly20180309099e621648**) i have to `data.tostring(\"utf8\")` **again**, to get the result as string.\r\n\r\nby design?"}]