[{"labels":["bug"],"text":"### Issue Description\r\nWhen logging in with `AuthData`, an error (similar to #5998) occurs if that user has one or more files associated.\r\n\r\nIf no files associated, `beforeLogin` can be executed without error.\r\n\r\n### Steps to reproduce\r\n\r\n1. Define a `beforeLogin` trigger like the following:\r\n```\r\nParse.Cloud.beforeLogin(async request => {\r\n  const { object: user }  = request;\r\n  if(user.get('isBanned')) {\r\n   throw new Error('Access denied, you have been banned.')\r\n  }\r\n});\r\n```\r\n2. Log in with an Auth provider. No matter if the user has `isBanned` set to true, the following error occurs.\r\n```\r\nUnhandledPromiseRejectionWarning: Error: Tried to encode an unsaved file.\r\n    at encode (C:\\Users\\kevin\\Documents\\GitHub\\maveregistry-parse-server\\node_modules\\parse\\lib\\node\\encode.js:73:13)\r\n    at _default (C:\\Users\\kevin\\Documents\\GitHub\\maveregistry-parse-server\\node_modules\\parse\\lib\\node\\encode.js:126:10)\r\n    at ParseUser.toJSON (C:\\Users\\kevin\\Documents\\GitHub\\maveregistry-parse-server\\node_modules\\parse\\lib\\node\\ParseObject.js:604:42)\r\n    at C:\\Users\\kevin\\Documents\\GitHub\\maveregistry-parse-server\\node_modules\\parse-server\\lib\\triggers.js:598:81\r\n    at error (C:\\Users\\kevin\\Documents\\GitHub\\maveregistry-parse-server\\node_modules\\parse-server\\lib\\triggers.js:379:9)\r\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\r\n```\r\n\r\n### Actual Outcome\r\nI spent some time investigating this problem and found that this error was triggered by this block of code:\r\nhttps://github.com/parse-community/parse-server/blob/44015c3e351fc7cf0ac3e99bc64738d35ddc3cba/src/triggers.js#L749-L764\r\n\r\nSpecifically, when encoding a file object with `toJSON()`, because the object was not expanded, it has no `url` property and hence cause [this block of code](https://github.com/parse-community/Parse-SDK-JS/blob/842c42cb7ab52f163f2566b8485004c3f0a78f35/src/encode.js#L46-L50) to throw an error:\r\n```\r\n  if (value instanceof ParseFile) {\r\n    if (!value.url()) {\r\n      throw new Error('Tried to encode an unsaved file.');\r\n    }\r\n    return value.toJSON();\r\n  }\r\n```\r\n\r\nSimilar to the fix introduced previously (#6001), all we need is to expand file objects before passing them to the trigger `runBeforeLoginTrigger` in [`RestWrite.js`](https://github.com/parse-community/parse-server/blob/master/src/RestWrite.js):\r\n```\r\n  // Cloud code gets a bit of extra data for its objects\r\n  const extraData = { className: this.className };\r\n\r\n  // PROPOSED FIX: expand file objects\r\n  this.config.filesController.expandFilesInObject(this.config, userData)\r\n  \r\n  const user = triggers.inflate(extraData, userData);\r\n\r\n  // no need to return a response\r\n  await triggers.maybeRunTrigger(\r\n    triggers.Types.beforeLogin,\r\n    this.auth,\r\n    user,\r\n    null,\r\n    this.config,\r\n    this.context\r\n  );\r\n```\r\n\r\n###  Environment\r\nServer\r\n- Parse Server version: `4.3.0`\r\n- Operating system: `Windows`\r\n- Local or remote host (AWS, Azure, Google Cloud, Heroku, Digital Ocean, etc): `local`\r\n\r\nClient\r\n- SDK (iOS, Android, JavaScript, PHP, Unity, etc): `JavaScript`\r\n- SDK version: `2.15.0`\r\n"},{"labels":["bug"],"text":"### Issue Description\r\nHi, Im trying to change the incoming query subscription with Parse.Cloud.beforeSubscribe but im still getting every column at the client. Ive tried changing the subscription query with query.equalTo too but it doesnt have any effect.\r\nI did it the same way as here: [beforeFind](https://docs.parseplatform.org/cloudcode/guide/#find-triggers)\r\nThe intention is that some parameter needed for the right subscription shouldnt be displayed in the source code.\r\n\r\n**Thats my Cloud code:**\r\n```\r\nParse.Cloud.beforeSubscribe( 'Chat', ( request ) => {\r\n\tif ( !request.user ) {\r\n        throw \"Please login before you attempt to connect.\";\r\n    }\t\r\n\tvar query = request.query;\r\n        query.select( 'message', 'username' );\r\n\treturn query;\r\n});\r\n```\r\n\r\n**Thats my Client code:**\r\n```\r\nvar chat = new Parse.Query( 'Chat' );\r\nchat.subscribe().then(subscription=>{\r\n       subscription.on( 'open', function(){\r\n             console.log( 'Subscription to Chat opened...' );\r\n       });\r\n});\r\n```\r\n\r\n\r\n###  Environment\r\n<!-- Be specific with versions, don't use \"latest\" or semver ranges like \"~x.y.z\" or \"^x.y.z\". -->\r\n\r\nServer\r\n- Parse Server version: `4.3.0`\r\n- Operating system: `CentOS 8`\r\n- Local or remote host (AWS, Azure, Google Cloud, Heroku, Digital Ocean, etc): `local`\r\n\r\nDatabase\r\n- System (MongoDB or Postgres): `MongoDB`\r\n- Database version: `4.0.19`\r\n- Local or remote host (MongoDB Atlas, mLab, AWS, Azure, Google Cloud, etc): `local`\r\n\r\nClient\r\n- SDK (iOS, Android, JavaScript, PHP, Unity, etc): `JavaScript`\r\n- SDK version: `2.15`\r\n\r\n### Logs\r\n<!-- Include relevant logs here. Turn on additional logging by configuring VERBOSE=1 in your environment. -->\r\n"},{"labels":["bug"],"text":"### New Issue Checklist\r\n<!-- Please check the following boxes [ ] -> [x] before submitting your issue. Click the \"Preview\" tab for better readability. Thanks for reporting issues back to Parse Server! -->\r\n\r\n- [ x] I am not disclosing a [vulnerability](https://github.com/parse-community/parse-server/blob/master/SECURITY.md).\r\n- [x ] I am not just asking a [question](https://github.com/parse-community/.github/blob/master/SUPPORT.md).\r\n- [x ] I have searched through [existing issues](https://github.com/parse-community/parse-server/issues?q=is%3Aissue).\r\n- [x ] I can reproduce the issue with the [latest version of Parse Server](https://github.com/parse-community/parse-server/releases). <!-- We don't investigate issues for outdated releases. -->\r\n\r\n### Issue Description\r\n<!-- What is the specific issue with Parse Server? -->\r\noAuth login with Google fails because the TOKEN_ISSUER constant expects Google clientId passed inside Parse server init to have a different domain name than whats provided by Google.\r\n\r\n```\r\nif (jwtClaims.iss !== TOKEN_ISSUER) {\r\n  throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, `id token not issued by correct provider - expected: ${TOKEN_ISSUER} | from: ${jwtClaims.iss}`);\r\n}\r\n```\r\n\r\n### Steps to reproduce\r\n<!-- How can someone else reproduce the issue? -->\r\n```\r\nnew ParseServer({\r\n   ...yourOptions,\r\n  auth: {\r\n    google: {\r\n      clientId: 'XXX-XXX.apps.googleusercontent.com',\r\n    }\r\n  }\r\n});\r\n\r\nParse.User.linkWith('google', { authData: {id, client_id, access_token } });\r\n```\r\n\r\n### Actual Outcome\r\n<!-- What outcome, for example query result, did you get? -->\r\n```\r\nverbose: RESPONSE from [POST] /parse/functions/post_sign_in: {\r\n  \"response\": {\r\n    \"result\": {\r\n      \"data\": {\r\n        \"message\": \"id token not issued by correct provider - expected: https://accounts.google.com | from: accounts.google.com\",\r\n        \"code\": 101\r\n      }\r\n    }\r\n  }\r\nerror: Parse error: id token not issued by correct provider - expected: https://accounts.google.com | from: accounts.google.com {\"code\":101,\"stack\":\"Error: id token not issued by correct provider - expected: https://accounts.google.com | from: accounts.google.com\\n    at verifyIdToken (node_modules/parse-server/lib/Adapters/Auth/google.js:91:11)\\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)\\n    at async Promise.all (index 0)\"}\r\n```\r\n\r\n\r\n### Expected Outcome\r\n<!-- What outcome, for example query result, did you expect? -->\r\nShould login the user and provide sessionToken.\r\n\r\n###  Environment\r\n<!-- Be specific with versions, don't use \"latest\" or semver ranges like \"~x.y.z\" or \"^x.y.z\". -->\r\n\r\nServer\r\n- Parse Server version: `4.3.0`\r\n- Operating system: `Mac OS`\r\n- Local or remote host (AWS, Azure, Google Cloud, Heroku, Digital Ocean, etc): `localhost`\r\n\r\nDatabase\r\n- System (MongoDB or Postgres): `Mongo`\r\n- Database version: `4.XX`\r\n- Local or remote host (MongoDB Atlas, mLab, AWS, Azure, Google Cloud, etc): `localhost`\r\n\r\nClient\r\n- SDK (iOS, Android, JavaScript, PHP, Unity, etc): `JS`\r\n- SDK version: `1.8.0`\r\n\r\n### Logs\r\n<!-- Include relevant logs here. Turn on additional logging by configuring VERBOSE=1 in your environment. -->\r\n```\r\nverbose: RESPONSE from [POST] /parse/functions/post_sign_in: {\r\n  \"response\": {\r\n    \"result\": {\r\n      \"data\": {\r\n        \"message\": \"id token not issued by correct provider - expected: https://accounts.google.com | from: accounts.google.com\",\r\n        \"code\": 101\r\n      }\r\n    }\r\n  }\r\nerror: Parse error: id token not issued by correct provider - expected: https://accounts.google.com | from: accounts.google.com {\"code\":101,\"stack\":\"Error: id token not issued by correct provider - expected: https://accounts.google.com | from: accounts.google.com\\n    at verifyIdToken (node_modules/parse-server/lib/Adapters/Auth/google.js:91:11)\\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)\\n    at async Promise.all (index 0)\"}\r\n```"},{"labels":["bug"],"text":"- [x] This isn't a vulnerability disclosure, if it is please follow our [security policy](https://github.com/parse-community/parse-server/blob/master/SECURITY.md).\r\n\r\n- [x] You're running version >=2.3.2 of Parse Server, we can't accept issues for very outdated releases, please update to a newer version.\r\n\r\n- [x] This isn't a question, if you need if you have questions about code please use Stack Overflow with the [parse-platform tag](https://stackoverflow.com/questions/tagged/parse-platform) & other questions can be posted on the [community forum](https://community.parseplatform.org).\r\n\r\n- [x] You've searched through [existing issues](https://github.com/parse-community/parse-server/issues?q=is%3Aissue), your issue may have been reported or resolved before.\r\n\r\nDiscussion started on https://community.parseplatform.org/t/how-to-add-index-on-createdat-and-updatedat-if-possible/586/5  @davimacedo and I feel this is a bug\r\n\r\nWe tried to add an index to createdAt by post to `/schemas/${className}`\r\n```\r\n    indexes: {\r\n            _createdAt_: {\r\n                createdAt: 1\r\n            },\r\n            _updatedAt_: {\r\n                updatedAt: 1\r\n            }\r\n        }\r\n```\r\nThe post worked. Looking at the MongoDB it seems the indexes are created but on MongoDB it is `_created_at` and `_updated_at`. So the index does not work.\r\n\r\n![image](https://user-images.githubusercontent.com/1072766/88445634-ae5a3980-cdd8-11ea-8516-10cca8c8145f.png)\r\n\r\nWe tried to do the following but got an error\r\n```\r\n{\r\n    indexes: {\r\n            _created_at_: {\r\n                _created_at: 1\r\n            },\r\n            _updated_at_: {\r\n                _updated_at: 1\r\n            }\r\n        }\r\n}\r\n{\r\n    “code”: 102,\r\n    “error”: “Field _created_at does not exist, cannot add index.”\r\n}\r\n```\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 2.11.0\r\n  - Operating System:     Mac\r\n  - Hardware:             Mac\r\n  - Localhost or remote server? Localhost\r\n\r\n- **Database**\r\n  - MongoDB version: 4.2.8\r\n  - Localhost or remote server? Mongo Atlas\r\n"},{"labels":["bug"],"text":"We use GitHub Issues for reporting bugs with Parse Server.\r\n\r\nMake sure these boxes are checked before submitting your issue - thanks for reporting issues back to Parse Server!\r\n\r\n- [x] This isn't a vulnerability disclosure, if it is please follow our [security policy](https://github.com/parse-community/parse-server/blob/master/SECURITY.md).\r\n\r\n- [x] You're running version >=2.3.2 of Parse Server, we can't accept issues for very outdated releases, please update to a newer version.\r\n\r\n- [x] This isn't a question, if you need if you have questions about code please use Stack Overflow with the [parse-platform tag](https://stackoverflow.com/questions/tagged/parse-platform) & other questions can be posted on the [community forum](https://community.parseplatform.org).\r\n\r\n- [x] You've searched through [existing issues](https://github.com/parse-community/parse-server/issues?q=is%3Aissue), your issue may have been reported or resolved before.\r\n\r\n### Issue Description\r\n\r\nTests for MongoDB transactions are only conducted for MongoDB version == 4.0.4:\r\n\r\nhttps://github.com/parse-community/parse-server/blob/fd0b535159877fa9bc74fb645169f56814c67c60/spec/MongoStorageAdapter.spec.js#L354-L356\r\n\r\nhttps://github.com/parse-community/parse-server/blob/85ec22ce3bca380ae262bc39ee5c67f6816dbf5b/spec/ParseServerRESTController.spec.js#L104-L106\r\n\r\nhttps://github.com/parse-community/parse-server/blob/14a8d333a3add3ed7a8967341e3d6535901eafa4/spec/batch.spec.js#L156-L158\r\n \r\nThis is not an issue in the current CI setup, because we are only not testing against MongoDB > 4.0.4, but it will break with the next MondoDB bump, and already breaks for tests that are executed locally against higher versions of MongoDB.\r\n\r\n### Expected Results\r\n\r\nThe tests should be enabled for MongoDB version >= 4.0.4.\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 4.3.0"},{"labels":["bug"],"text":"### Issue Description\r\n- customObjectId does not work with `beforeSave` triggers.\r\n\r\n### Steps to reproduce\r\n- Turn on flag `allowCustomObjectId` on ParseServer\r\n- Try to create a `GameScore` object with customObjectId `objectId1` (from Android or iOS)\r\n- Back to ParseServer, add `beforeSave` trigger for `GameScore` with empty body / function.\r\n- Try to create the second `GameScore` object with customObjectId `objectId2` (from Android or iOS)\r\n\r\n### Expected Results\r\n- Received 2: `GameScore` objects with customObjectId: `objectId1`, `objectId2`.\r\n\r\n### Actual Outcome\r\n- The first object has `objectId` is `objectId1` while the second object has random id like this `sMTH8Sq6jl`\r\n\r\n### Environment Setup\r\n- **Server**\r\n  - parse-server version: 4.2.0\r\n  - Operating System: N/A\r\n  - Hardware: N/A\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): The problem happens on both localhost and Heroku\r\n\r\n- **Database**\r\n  - MongoDB version: 4.2.7\r\n  - Storage engine:  N/A\r\n  - Hardware:  N/A\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): The problem happens on both localhost and mLab\r\n"},{"labels":[null,"bug"],"text":"<!--- \r\n\r\n**We use GitHub Issues for reporting bugs with parse-server.**\r\n\r\nIf you have a *question*, you should join the [Parse Community's Discourse forum](https://community.parseplatform.org/c/parse-server).\r\n\r\nIf you have a vulnerability disclosure, please follow our policy available here https://github.com/parse-community/parse-server/blob/master/SECURITY.md\r\n\r\nYou may also search through existing issues before opening a new one: https://github.com/parse-community/parse-server/issues?utf8=%E2%9C%93&q=is%3Aissue \r\n\r\n--- Please use this template. If you don't use this template, your issue may be closed without comment. ---\r\n--->\r\n### Issue Description\r\nI need to count the new data every day\r\n```\r\ngroup: {\r\n    objectId: { day: { $dayOfMonth: \"$createdAt\" }, month: { $month: \"$createdAt\" }, year: { $year: \"$createdAt\" } },\r\n    count: { $sum: 1 },\r\n},\r\n```\r\nResult:\r\n![image](https://user-images.githubusercontent.com/9586337/83875406-9b78a080-a769-11ea-81c7-0edcab7fc40f.png)\r\n\r\n\r\n<!--- Describe your issue in as much detail as possible. -->\r\n \r\n### Expected Results\r\nCount the same date together\r\n\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 3.0.8&4.2.0\r\n  - Operating System:    ubuntu\r\n\r\n- **Database**\r\nPostgresql 10\r\n"},{"labels":["bug",null],"text":"### Issue Description\r\n\r\nSince the old Instagram API will stop working on June 29 (See https://www.instagram.com/developer/), the url in https://github.com/parse-community/parse-server/blob/d0a9c709fea4cbdba540420353a36a0e89601ffb/src/Adapters/Auth/instagram.js#L9 needs to be changed to match the new \"instagram_graph_user_profile\" API. (See https://developers.facebook.com/docs/instagram-basic-display-api/guides/getting-profiles-and-media).\r\nThe new default URL should be something like this:\r\nhttps://graph.instagram.com/me?fields=id&access_token=ACCESS_TOKEN\r\n\r\n### Steps to reproduce\r\n\r\n1. Get the authentication_code from authorization window\r\n`https://www.instagram.com/oauth/authorize?client_id=CLIENT_ID&redirect_uri=REDIRECT_URI&scope=user_profile,user_media&response_type=code`\r\n2. Get a short-lived token\r\n```\r\ncurl --location --request POST 'https://api.instagram.com/oauth/access_token' \\\r\n--form 'client_id=CLIENT_ID' \\\r\n--form 'client_secret=CLIENT_SECRET' \\\r\n--form 'grant_type=authorization_code' \\\r\n--form 'redirect_uri=REDIRECT_URI' \\\r\n--form 'code=AUTHORIZATION_CODE'\r\n```\r\n3. Trying to register new user via ParseServer will perform following call:\r\n```json\r\ncurl --location --request GET 'https://api.instagram.com/v1/users/self?access_token=SHORT_LIVED_ACCESS_TOKEN'\r\n```\r\n \r\n### Expected Results\r\n\r\nUser is being verified successfully and user can be registered via Instagram.\r\n\r\n### Actual Outcome\r\n\r\nParseServer receives following:\r\n```json\r\n{\r\n    \"meta\": {\r\n        \"code\": 400,\r\n        \"error_type\": \"OAuthAccessTokenException\",\r\n        \"error_message\": \"The access_token provided is invalid.\"\r\n    }\r\n}\r\n```\r\nand returns \r\n```json\r\n{\r\n    \"code\": 101,\r\n    \"error\": \"Instagram auth is invalid for this user.\"\r\n}\r\n```\r\nto developer.\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 3.9.0\r\n  - Operating System:     Back4App\r\n  - Hardware:             Back4App\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): Back4App\r\n\r\n- **Database**\r\n  - MongoDB version: Back4App\r\n  - Storage engine:  Back4App\r\n  - Hardware:        Back4App\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): Back4App\r\n\r\n### Logs/Trace\r\n\r\nNo logs\r\n"},{"labels":["bug"],"text":"### Issue Description\r\n\r\nStep to reproduce:\r\n- Login with a user and custom auth\r\n- then with master key execute this GraphQL Query \r\n\r\n```graphql\r\nquery findUsers {\r\n  users {\r\n    edges {\r\n      node {\r\n        id\r\n        username\r\n        authData\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nResponse: \r\n```json\r\n{\r\n  \"data\": {\r\n    \"users\": {\r\n      \"edges\": [\r\n        {\r\n          \"node\": {\r\n            \"id\": \"X1VzZXI6Q1BJV09nSnAzMQ==\",\r\n            \"username\": \"1vNRLdDtk3p69k6y0OE2RKZxT\",\r\n            \"authData\": null\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nDebug:\r\n- Keys selected by GraphQL seems ok: `objectId,username,authData`\r\n- But rest API return: \r\n\r\n```\r\n[\r\n  {\r\n    objectId: 'CPIWOgJp31',\r\n    username: '1vNRLdDtk3p69k6y0OE2RKZxT',\r\n    createdAt: '2020-04-21T10:58:07.147Z',\r\n    updatedAt: '2020-04-21T10:58:07.373Z',\r\n    ACL: { '*': [Object], CPIWOgJp31: [Object] }\r\n  }\r\n]\r\n```\r\n\r\nWhen i disable key selection on parse server graphQL, it seems that authData is correctly returned by internal API.\r\n\r\nSelect on object type seems to be ignored"},{"labels":["bug",null,null],"text":"I'm trying to create a custom object from a Cloud Code using GraphQL, but I'm having trouble converting the fields from/to it.\r\n\r\nFor example, when creating an object that has a relation, we have the options to `link` and to `createAndLink` a new child object. How could I achive the same, but from inside a cloud code function, receiving the params in GraphQL and sending the response as GraphlQL too? I'm doing it field-by-field manually but it seems wrong.\r\n\r\n```javascript\r\nParse.Cloud.define('initOrder', async (req, res) => {\r\n  /// Inputs\r\n  ///   - address: AddressPointerInput!\r\n  ///   - products: [CreateOrderItemFieldsInput!]!\r\n\r\n  console.log(req.params.products)\r\n\r\n  // Create order\r\n  let order = new Parse.Object('Order')\r\n  let orderItemsRelation = order.relation('products')\r\n\r\n  // Setting required fields\r\n  let user = new Parse.Object('_User')\r\n  user.id = 'Lkwpbo84eg' // from session\r\n\r\n  let store = new Parse.Object('Store')\r\n  store.id = 'qmKKCBVqXG' // would be another param\r\n\r\n  let paymentMethod = new Parse.Object('PaymentMethod')\r\n  paymentMethod.id = 'UOZrC98GJE' // another param\r\n\r\n  order.set('orderStatus', 'draft')\r\n  order.set('buyer', user)\r\n  order.set('store', store)\r\n  order.set('paymentMethod', paymentMethod)\r\n\r\n  /// Get Address from input\r\n  let address\r\n  if ('link' in req.params.address) {\r\n    address = new Parse.Object('Address')\r\n    address.id = req.params.address.link\r\n  } else if ('createAndLink' in req.params.address) {\r\n    // Create and link to order\r\n\r\n    // Do I need to manually set all those address fields? What is the best way\r\n    // to create an object directly from params when using graphql?\r\n  }\r\n\r\n  order.set('address', address)\r\n\r\n  // Create orderItems\r\n  req.params.products.forEach(async (product) => {\r\n    let newOrderItem = new Parse.Object('OrderItem')\r\n    let newProduct = new Parse.Object('Gallon')\r\n\r\n    newProduct.id = product.product.link\r\n\r\n    newOrderItem.set('amount', 10)\r\n    newOrderItem.set('product', newProduct)\r\n\r\n    let savedOrderitem = await newOrderItem.save()\r\n\r\n    // For some reason the orderItems aren't being added to the relation.\r\n    orderItemsRelation.add(savedOrderitem)\r\n  })\r\n\r\n  const saved = await order.save()\r\n  console.log(saved.toJSON())\r\n\r\n  /// When creating an object of a generated class with graphql, the return type\r\n  // is actually CreateOrderPayload. How can I return such thing?\r\n  return saved\r\n})\r\n```\r\n\r\nAre there any examples on how to do something similar? I found [this](https://github.com/parse-community/parse-server/issues/5900#issuecomment-520087233), but the examples are so simple it does not help me much.\r\n\r\n[Full project code here](https://github.com/Setti7/refresco-server)"},{"labels":["bug"],"text":"### Issue Description\r\nTry POST a file to the /file endpoint without providing `x-parse-application-id` will get a 500 internal server error. Here is the verbose log\r\n```\r\nerror: Uncaught internal server error.Unexpected token � in JSON at position 0 {\"stack\":\"SyntaxError: Unexpected token � in JSON at position 0\\n    at JSON.parse (<anonymous>)\\n    at handleParseHeaders (/Users/gordon/workspace/pipe17/parse/node_modules/parse-server/lib/middlewares.js:81:23)\\n    at Layer.handle [as handle_request] (/Users/gordon/workspace/pipe17/parse/node_modules/express/lib/router/layer.js:95:5)\\n    at next (/Users/gordon/workspace/pipe17/parse/node_modules/express/lib/router/route.js:137:13)\\n    at /Users/gordon/workspace/pipe17/parse/node_modules/body-parser/lib/read.js:130:5\\n    at invokeCallback (/Users/gordon/workspace/pipe17/parse/node_modules/raw-body/index.js:224:16)\\n    at done (/Users/gordon/workspace/pipe17/parse/node_modules/raw-body/index.js:213:7)\\n    at IncomingMessage.onEnd (/Users/gordon/workspace/pipe17/parse/node_modules/raw-body/index.js:273:7)\\n    at IncomingMessage.emit (events.js:228:7)\\n    at IncomingMessage.EventEmitter.emit (domain.js:475:20)\"}\r\nSyntaxError: Unexpected token � in JSON at position 0\r\n    at JSON.parse (<anonymous>)\r\n    at handleParseHeaders (/Users/gordon/workspace/pipe17/parse/node_modules/parse-server/lib/middlewares.js:81:23)\r\n    at Layer.handle [as handle_request] (/Users/gordon/workspace/pipe17/parse/node_modules/express/lib/router/layer.js:95:5)\r\n    at next (/Users/gordon/workspace/pipe17/parse/node_modules/express/lib/router/route.js:137:13)\r\n    at /Users/gordon/workspace/pipe17/parse/node_modules/body-parser/lib/read.js:130:5\r\n    at invokeCallback (/Users/gordon/workspace/pipe17/parse/node_modules/raw-body/index.js:224:16)\r\n    at done (/Users/gordon/workspace/pipe17/parse/node_modules/raw-body/index.js:213:7)\r\n    at IncomingMessage.onEnd (/Users/gordon/workspace/pipe17/parse/node_modules/raw-body/index.js:273:7)\r\n    at IncomingMessage.emit (events.js:228:7)\r\n    at IncomingMessage.EventEmitter.emit (domain.js:475:20)\r\n```\r\n\r\n### Steps to reproduce\r\nSetup a Parse server and config it to be able to take file upload. Then make the same file upload request without the `x-parse-application-id` header and you will get a 500\r\n \r\n### Expected Results\r\nShould be a 401 or 403 with a message saying that you are missing the header. This cost us several hours to debug. I wish we can remove the application id completely. It provides no value and just causing trouble\r\n\r\n### Actual Outcome\r\n500 error\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version 3.10.0\r\n  - Operating System:     docker node:lts\r\n  - Hardware:             aws ec2\r\n  - Localhost or remote server? aws ec2\r\n\r\n- **Database**\r\n  - MongoDB version: 4.2.5\r\n  - Storage engine:  not sure\r\n  - Hardware:        not sure\r\n  - Localhost or remote server?  hosted by MongoDB Atlas \r\n\r\n### Logs/Trace\r\nSee above\r\n"},{"labels":["bug",null],"text":"Hello\r\n\r\nI am getting error 206 after new Facebook user is saved and reason seems to be nil sessionToken. \r\nI am facing this for Apple sign in also randomly. This is probably getting fixed by https://github.com/parse-community/parse-server/pull/6416. Don't know whether Facebook issue will also be fixed.\r\n\r\nI have one old account created on Heroku Parse server which works fine ie i am able to save attributes after login.\r\n\r\nI was running server v3.9.0. tried upgrading till 4.0.2 but still failing.\r\n\r\nI am updating PFUser object post login locally in iOS client using Swift. Not using cloud code for this. \r\n\r\nAlso failing on back4app v3.9.0. Sign in with Apple also failing on back4app but works randomly.\r\n\r\nWorks on local setup consistently. Local server installed using bootstrap.sh script.\r\n\r\nI have seen some issued dated 2016 fixing this error but server code seems to have changed lot so cannot view the same code referred in https://github.com/parse-community/parse-server/pull/952\r\n\r\nusing FBSDKCoreKit 5.15.1, FBSDKLoginKit 5.15.1\r\n\r\n### Steps to reproduce\r\n\r\non iOS, Try login using a facebook account that is not yet created on Parse.\r\nRunning iOS 13.3.1\r\n \r\n### Expected Results\r\n\r\nAfter successful login, should be able to save other attributes in PFUser.current() object\r\n\r\n### Actual Outcome\r\n\r\nThe login is successful but saving any attributes fails with error 206 \"cannot modify user xxxxx\"\r\nFails on back4app also. v3.9.0\r\nBoth Apple and Facebook new user registration and update work fine in local environment. \r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 3.9.0 to 4.0.2 (Local 3.10.0)\r\n  - Operating System:    heroku-18 (Local MacOS 10.15.3)\r\n  - Hardware:             heroku-18 (Local MacOS 10.15.3)\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): Both as mentioned above\r\n\r\n- **Database**\r\n  - MongoDB version: mLab 3.6.12 (Local 4.2.3)\r\n  - Storage engine:  mLab\r\n  - Hardware:        mLab\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): both\r\n\r\n### Logs/Trace\r\n\r\n`Mar 15 02:51:40 yovl app/web.1 error: Parse error: Cannot modify user kc30Xbk1wA. {\"code\":206,\"stack\":\"Error: Cannot modify user kc30Xbk1wA.\\n    at RestWrite.runDatabaseOperation (/app/node_modules/parse-server/lib/RestWrite.js:1170:11)\\n    at /app/node_modules/parse-server/lib/RestWrite.js:127:17\\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\"}\r\n`\r\n\r\npackage.json used for deployment to Heroku\r\n\r\n```\r\n{\r\n  \"name\": \"parse-server-example\",\r\n  \"version\": \"1.4.0\",\r\n  \"description\": \"Based on example Parse API server using the parse-server module\",\r\n  \"main\": \"index.js\",\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/ashish-naik/parse-server.git\"\r\n  },\r\n  \"license\": \"MIT\",\r\n  \"dependencies\": {\r\n    \"express\": \"4.17.1\",\r\n    \"parse-server\": \"4.1.0\",\r\n    \"underscore\":\"*\",\r\n    \"parse\": \"2.11.0\"\r\n  },\r\n  \"scripts\": {\r\n    \"start\": \"node index.js\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">= 8\",\r\n    \"npm\": \">= 5.7.1\"\r\n  }\r\n}\r\n```\r\nauth section in index.js\r\n```\r\nauth: {\r\n    facebook: {\r\n      appIds: process.env.FACEBOOK_APP_ID\r\n    },\r\n    apple: {\r\n      \r\n      client_id: process.env.IOS_BUNDLE_ID \r\n    }\r\n  },\r\n\r\n```"},{"labels":["bug",null],"text":"<!--- \r\n\r\n**We use GitHub Issues for reporting bugs with parse-server.**\r\n\r\nIf you have a *question*, you should join the [Parse Community's Discourse forum](https://community.parseplatform.org/c/parse-server).\r\n\r\nIf you have a vulnerability disclosure, please follow our policy available here https://github.com/parse-community/parse-server/blob/master/SECURITY.md\r\n\r\nYou may also search through existing issues before opening a new one: https://github.com/parse-community/parse-server/issues?utf8=%E2%9C%93&q=is%3Aissue \r\n\r\n--- Please use this template. If you don't use this template, your issue may be closed without comment. ---\r\n--->\r\n### Issue Description\r\nI write my own custom Authentication Module due to some features that are not available here and I did throw some Parse.Error in the custom Authentication Module and I expect that I did receive the ParseError in my client instead of Internal server error code.\r\n\r\n### Steps to reproduce\r\n1. Create a Latest Parse-Server using Parse-Express-Example(I tried those version before: 4.1.0, 3.10.0, 3.8.0, 3.6.0)\r\n2. import my npm package with command : npm install parse-server-auth-google\r\n3. in the index.js, replace the default google auth module with my auth module:\r\n`\"google\":{module:\"parse-server-auth-google\"}`\r\n4. start the parse-server\r\n5. call the post request as below to trigger the function:\r\n   url: https://<<your parse-server-url>>/parse/users\r\n   method: POST\r\n   Body: {\"authData\":{\"google\":{\"id\":\"111\"}}}\r\n   Headers: (Normal Headers as usual to call parse-server, for eg. X-Parse-Application-Id, Content-Type)\r\n \r\n### Expected Results\r\n\r\n<!--- What you expected to happen. --->\r\nReceive a response with HTTP-Status: 404 with Body as below:\r\n```\r\n{\r\n    \"code\": 101,\r\n    \"error\": \"Facebook auth is invalid for this user.\"\r\n}\r\n```\r\n\r\n### Actual Outcome\r\n\r\n<!--- What is happening instead. --->\r\nReceive a response with HTTP-Status: 500 with Body as below:\r\n```\r\n{\r\n    \"code\": 1,\r\n    \"message\": \"Internal server error.\"\r\n}\r\n```\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : [3.6.0,3.8.0,3.10.0,4.1.0]\r\n  - Operating System:     [Ubuntu Server 16.04.6]\r\n  - Hardware:             [AWS r4.large]\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): [AWS]\r\n\r\n- **Database**\r\n  - MongoDB version: [4.0.13]\r\n  - Storage engine:  [WiredTiger]\r\n  - Hardware:        [2 Replica Set]\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): [AWS EC2]\r\n\r\n### Logs/Trace\r\n\r\n<!--- Include all relevant logs. You can turn on additional logging by configuring VERBOSE=1 in your environment. --->\r\n\r\nBelow are the logs that shown in my pm2. I found that during my own module file, the error i throw is still a Parse.Error type, but when it comes to middlewares.js, the function handleParseErrors will not treated it as a Parse.Error type.\r\n```\r\n48|appxplo | {\"method\":\"POST\",\"url\":\"/parse/users\",\"headers\":{\"x-parse-application-id\":\"SICXfgOJNhYtBZUiM6Ua5IP1Pxwo4qJfgn8rJ7yS\",\"x-parse-rest-api-key\":\"57y6F7BZwyaqn9YWYdKJgLeGTItAKukIrpOYYipL\",\"content-type\":\"application/json\",\"x-parse-installation-id\":\"c8cf2c87-3341-41c1-b386-25ab1b11839f\",\"user-agent\":\"PostmanRuntime/7.22.0\",\"accept\":\"*/*\",\"cache-control\":\"no-cache\",\"postman-token\":\"84f5dc58-bed3-4e94-99a8-89facb2e83d2\",\"host\":\"xxxx.xxxx.xxxx.xxxx:xxxx\",\"accept-encoding\":\"gzip, deflate, br\",\"content-length\":\"36\",\"connection\":\"keep-alive\"},\"body\":{\"authData\":{\"google\":{\"id\":\"111\"}}},\"level\":\"verbose\",\"message\":\"REQUEST for [POST] /parse/users: {\\n  \\\"authData\\\": {\\n    \\\"google\\\": {\\n      \\\"id\\\": \\\"111\\\"\\n    }\\n  }\\n}\"}\r\n48|appxplo | google error:  { ParseError: 101 Google auth is invalid for this user.\r\n48|appxplo |     at Object.validateAuthData (/mnt/data/parse/appxplore-testapp/node_modules/parse-server-auth-google/index.js:45:17)\r\n48|appxplo |     at /mnt/data/parse/appxplore-testapp/node_modules/parse-server/lib/Adapters/Auth/index.js:93:20\r\n48|appxplo |     at Object.keys.map.provider (/mnt/data/parse/appxplore-testapp/node_modules/parse-server/lib/RestWrite.js:361:12)\r\n48|appxplo |     at Array.map (<anonymous>)\r\n48|appxplo |     at RestWrite.handleAuthDataValidation (/mnt/data/parse/appxplore-testapp/node_modules/parse-server/lib/RestWrite.js:350:45)\r\n48|appxplo |     at findUsersWithAuthData.then (/mnt/data/parse/appxplore-testapp/node_modules/parse-server/lib/RestWrite.js:496:17)\r\n48|appxplo |     at <anonymous>\r\n48|appxplo |     at process._tickDomainCallback (internal/process/next_tick.js:228:7) message: 'Google auth is invalid for this user.', code: 101 }\r\n48|appxplo | is error instanceof Parse.Error:  true\r\n48|appxplo | [handleParseErrors], error:  { ParseError: 101 Google auth is invalid for this user.\r\n48|appxplo |     at Object.validateAuthData (/mnt/data/parse/appxplore-testapp/node_modules/parse-server-auth-google/index.js:45:17)\r\n48|appxplo |     at /mnt/data/parse/appxplore-testapp/node_modules/parse-server/lib/Adapters/Auth/index.js:93:20\r\n48|appxplo |     at Object.keys.map.provider (/mnt/data/parse/appxplore-testapp/node_modules/parse-server/lib/RestWrite.js:361:12)\r\n48|appxplo |     at Array.map (<anonymous>)\r\n48|appxplo |     at RestWrite.handleAuthDataValidation (/mnt/data/parse/appxplore-testapp/node_modules/parse-server/lib/RestWrite.js:350:45)\r\n48|appxplo |     at findUsersWithAuthData.then (/mnt/data/parse/appxplore-testapp/node_modules/parse-server/lib/RestWrite.js:496:17)\r\n48|appxplo |     at <anonymous>\r\n48|appxplo |     at process._tickDomainCallback (internal/process/next_tick.js:228:7) message: 'Google auth is invalid for this user.', code: 101 }\r\n48|appxplo | [handleParseErrors], err instanceof _node.default.Error:  false\r\n48|appxplo | {\"message\":\"Uncaught internal server error.Google auth is invalid for this user.\",\"code\":101,\"level\":\"error\",\"stack\":\"ParseError: 101 Google auth is invalid for this user.\\n    at Object.validateAuthData (/mnt/data/parse/appxplore-testapp/node_modules/parse-server-auth-google/index.js:45:17)\\n    at /mnt/data/parse/appxplore-testapp/node_modules/parse-server/lib/Adapters/Auth/index.js:93:20\\n    at Object.keys.map.provider (/mnt/data/parse/appxplore-testapp/node_modules/parse-server/lib/RestWrite.js:361:12)\\n    at Array.map (<anonymous>)\\n    at RestWrite.handleAuthDataValidation (/mnt/data/parse/appxplore-testapp/node_modules/parse-server/lib/RestWrite.js:350:45)\\n    at findUsersWithAuthData.then (/mnt/data/parse/appxplore-testapp/node_modules/parse-server/lib/RestWrite.js:496:17)\\n    at <anonymous>\\n    at process._tickDomainCallback (internal/process/next_tick.js:228:7)\"}\r\n```\r\n\r\nPlease let me know if I'm doing it wrong. thank you."},{"labels":["bug",null],"text":"### Issue Description\r\n\r\n3 Issues, maybe related:\r\n\r\na) Cannot set value for key in nested object deeper than 1 level.\r\nFor example for this object:\r\n```\r\n{\r\n    \"_id\": \"abc123\",\r\n    \"a\": {\r\n        \"b\": {\r\n            \"c\": true\r\n        }\r\n    }\r\n}\r\n```\r\nChanging key `object.set(\"a.b.c\", false);` results in:\r\n```\r\n{\r\n    \"_id\": \"abc123\",\r\n    \"a\": {\r\n        \"b\": false\r\n    }\r\n}\r\n```\r\nChanging key `object.set(\"a.b\", false);` works as expected, so the bug only affects keys deeper than 1 level.\r\n\r\nb) Cannot set value for key in nested object without affecting the whole field.\r\nFor example for this object:\r\n```\r\n{\r\n    \"_id\": \"abc123\",\r\n    \"a\": {\r\n        \"b\": true,\r\n        \"x\": true\r\n    }\r\n}\r\n```\r\nSetting `object.set(\"a.b\", false)` and then saving the object updates the whole object `a`, not only the nested key `b`. If value for `x` changed between fetching and saving the object, the value will be overwritten. I assume the whole field of the Parse object is flagged as dirty, therefore the whole field is updated, so there may not be much we can do about this.\r\n\r\nMongoDB allows to update only a nested key with the [`$set`](https://docs.mongodb.com/manual/reference/operator/update/set/#set-fields-in-embedded-documents) command without affecting other fields.\r\n\r\nc) Cannot set value for excluded key.\r\nFor example for this object:\r\n```\r\n{\r\n    \"_id\": \"abc123\",\r\n    \"a\": {\r\n        \"b\": true\r\n    }\r\n}\r\n```\r\nWhen fetching the object without field `a` no updates to that field can be saved:\r\n```\r\nconst query = new Parse.Query(\"myClass\");\r\nquery.equalTo(\"a.b\", true);\r\nquery.select([]);\r\nconst object = await query.first();\r\n\r\nobject.set(\"a.b\", false);\r\nobject.save();\r\n```\r\nResults in no changes to the object.\r\n\r\n### Steps to reproduce\r\nSee above.\r\n \r\n### Expected Results\r\na)  Value for key in nested object deeper than 1 level should be set.\r\nb) It should be possible to update only one key of a nested object without affecting other keys.\r\nc) It should be possible to update a field value even if it was excluded.\r\n\r\n### Actual Outcome\r\nSee description.\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : \"3.10.0\"\r\n  - parse JS SDK: cloud code, according to parse server \"3.10.0\"\r\n  - Operating System:     -\r\n  - Hardware:             -\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): -\r\n\r\n- **Database**\r\n  - MongoDB version: 4.2.3\r\n  - Storage engine:  WT\r\n  - Hardware:        -\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): AWS\r\n\r\n### Logs/Trace\r\n-\r\n"},{"labels":["bug"],"text":"Hello guys,\r\n\r\nI test my app with config :\r\n--appId xxx --masterKey xxx --databaseURI mongodb://xxx  --maxLogFiles  20\r\nIt's right.\r\n\r\nbut,if I write this like :\r\n--appId xxx --masterKey xxx --databaseURI mongodb://xxx  --maxLogFiles  20d\r\nIt's wrong.\r\n\r\nundefined:1\r\n20d\r\n  ^\r\nSyntaxError: Unexpected token d in JSON at position 2\r\n\r\nI find the code in follow file.\r\n\r\n./lib/Options/parsers.js\r\n\r\nfunction objectParser(opt) {\r\n  if (typeof opt == 'object') {\r\n    return opt;\r\n  }\r\n  return JSON.parse(opt);\r\n}\r\n\r\nI hope can  fix it,Thank you.\r\n"},{"labels":["bug"],"text":"### Issue Description\r\nI set up a Postgres instance with Parse and GraphQL. If I run a GraphQL query against my db that contains a relation, the relation is being resolved as a column instead of a relation causing a crash.\r\n\r\n### Steps to reproduce\r\n\r\n1. Setup a parse server + parse dashboard\r\n2. Enable GraphQL\r\n3. Connect to a Postgres instance\r\n4. Open the GraphQL playground inside the dashboard\r\n5. Execute the following query;\r\n\r\n```\r\nquery Roles {\r\n  roles(first: 1) {\r\n    edges {\r\n      node {\r\n        users {\r\n          edges {\r\n            node {\r\n              username\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n \r\n### Expected Results\r\nI would expect to get an empty set of data since we have a clean Database.\r\n\r\n### Actual Outcome\r\nInstead users is being resolved as a column and not a relation causing the following error;\r\n\r\n```\r\n\"message\": \"error: column \\\"users\\\" does not exist\",\r\n```\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 3.10.0\r\n  - Operating System: Ubuntu 18.04.3 LTS\r\n  - Hardware: 1 vCPUs, 1GB / 25GB Disk\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): Digital Ocean\r\n\r\n- **Database**\r\n  - Postgres version: 10.10\r\n  - Storage engine: Digital Ocean Spaces\r\n  - Hardware: 1 vCPUs, 1GB / 25GB Disk\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): Digital Ocean\r\n\r\n### Logs/Trace\r\nWith Verbose on this is all I get;\r\n\r\n```\r\nParse error: error: column \"users\" does not exist {\"code\":1,\"stack\":\"Error: error: column \\\"users\\\" does not exist\\n    at /home/wouter/app/node_modules/parse-server/lib/Controllers/DatabaseController.js:1179:21\\n    at runMicrotasks (<anonymous>)\\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\\n    at async Object.findObjects (/home/wouter/app/node_modules/parse-server/lib/GraphQL/helpers/objectsQueries.js:149:24)\\n    at async resolve (/home/wouter/app/node_modules/parse-server/lib/GraphQL/loaders/parseClassQueries.js:139:18)\"}\r\n```\r\n\r\n### Aditional\r\n\r\nIt does work if I create the user column myself through PGAdmin. Then it correctly resolves the relation instead of the column. So it's either inside the schema or the resolver.\r\n"},{"labels":["bug"],"text":"#6177 # Issue Description\r\n\r\n`.notEqualsTo`  Parse.Query-function not behaving correctly on postgres (for nested objects)\r\n\r\n### Steps to reproduce\r\n\r\n\r\n``` \r\n        var q1 = new Parse.Query(\"MyClass\").equalTo(\"state.status\",\"open\")\r\n        var q2 = new Parse.Query(\"MyClass\").equalTo(\"state.foo\",6)\r\n        await Parse.Query.and(q1,q2).find()\r\n\r\n        => [s] // correct\r\n```\r\njust changing `.equalTo` to `.notEqualTo` does not seem to differ at all.\r\n```\r\n        var q1 = new Parse.Query(\"MyClass\").equalTo(\"state.status\",\"open\")\r\n+++     var q2 = new Parse.Query(\"MyClass\").notEqualTo(\"state.foo\",6)\r\n        await Parse.Query.and(q1,q2).find()\r\n\r\n?       => [s]       // should be []\r\n```\r\n\r\nanother simplified version:\r\n\r\n```\r\n        await new Parse.Query(\"MyClass\")\r\n        .equalTo(\"state.status\",\"open\")\r\n        .equalTo(\"state.foo\",6).find()\r\n\r\n        => [s]      \r\n\r\n        await new Parse.Query(\"MyClass\")\r\n        .equalTo(\"state.status\",\"open\")\r\n+++     .notEqualTo(\"state.foo\",6).find()\r\n\r\n?       => [s]       // should be []\r\n ```\r\n\r\n### Environment Setup\r\n\r\n- parse-server version: 3.9.0\r\n- Operating System:     alpine linux 3\r\n- Localhost or remote server? localhost\r\n- Postgres version: 11.5\r\n- Storage engine:  Postgres\r\n"},{"labels":["bug"],"text":"It seems that we have some CI fails\r\nhttps://github.com/parse-community/parse-server/pull/6371\r\nhttps://github.com/parse-community/parse-server/pull/6360\r\nhttps://github.com/parse-community/parse-server/pull/6363\r\n\r\nSometimes Postgres error:\r\n```sh\r\nERROR:  could not access file \"$libdir/postgis-2.4\": No such file or directory\r\nThe command \"psql -c 'CREATE EXTENSION postgis;' -U postgres -d parse_server_postgres_adapter_test_database\" failed and exited with 1 during .\r\n```\r\n\r\nSometimes Push error:\r\n```sh\r\nPushController properly creates _PushStatus\r\n  Message:\r\n    Expected 'pending' to be 'running'.\r\n  Stack:\r\n    Error: Expected 'pending' to be 'running'.\r\n        at <Jasmine>\r\n        at reconfigureServer.then.then.then.then.then.catch.then (/home/travis/build/parse-community/parse-server/spec/PushController.spec.js:647:48)\r\n        at process._tickCallback (internal/process/next_tick.js:68:7)\r\nPending:\r\n```\r\n\r\nDo you have any idea where the failures come from?"},{"labels":["bug",null],"text":"The httpRequest class no longer seems to be able to do a GET with a request body anymore.  It looks like the library used to do the http request has been completely changed in Parse Server 3.x.  \r\n\r\nThe parse server classes api allows specification of a where condition for the GET http method.  This no longer seems to work in Parse Server 3.10.0.\r\n\r\nThis curl is a simulation for what the GET request should do:\r\n```\r\ncurl -X GET  -H \"Content-Type: application/json\" https://postman-echo.com/get -d \"{\\\"where\\\": {\\\"testField01\\\": \\\"testValue01\\\"}}\"\r\n```\r\nResult: \r\n```\r\n{\"args\":{\"where\":{\"testField01\":\"testValue01\"}},\"headers\":{\"x-forwarded-proto\":\"https\",\"host\":\"postman-echo.com\",\"content-length\":\"41\",\"accept\":\"*/*\",\"content-type\":\"application/json\",\"user-agent\":\"curl/7.55.1\",\"x-forwarded-port\":\"443\"},\"url\":\"https://postman-echo.com/get\"}\r\n```\r\nBut the equivalent Parse.Cloud.httpRequest call would not have anything in the \"args\" field.  \r\n\r\n\r\nThanks"},{"labels":["bug",null],"text":"<!--- \r\n\r\n**We use GitHub Issues for reporting bugs with parse-server.**\r\n\r\nIf you have a *question*, you should join the [Parse Community's Discourse forum](https://community.parseplatform.org/c/parse-server).\r\n\r\nIf you have a vulnerability disclosure, please follow our policy available here https://github.com/parse-community/parse-server/blob/master/SECURITY.md\r\n\r\nYou may also search through existing issues before opening a new one: https://github.com/parse-community/parse-server/issues?utf8=%E2%9C%93&q=is%3Aissue \r\n\r\n--- Please use this template. If you don't use this template, your issue may be closed without comment. ---\r\n--->\r\n### Issue Description\r\n\r\nvar t=new Parse.Object('test')\r\nt.set('test',{name:1,age:2})\r\nt.save()\r\n\r\nt.increment('test.name',1)\r\nt.save()\r\n\r\nwhen i creat a cloudFunction liks this,\r\n Parse.Cloud.beforeSave('test',function(req){\r\n     // console.log(req.triggerName)\r\n     // console.log(req.object.toJSON())\r\n   \r\n })\r\n\r\nt.increment('test.name',1)  is not work,\r\n\r\n\r\n<!--- Describe your issue in as much detail as possible. -->\r\n\r\n### Steps to reproduce\r\n\r\n<!--- Please include a detailed list of steps that reproduce the issue. Include curl commands when applicable.  --->\r\n \r\n### Expected Results\r\n\r\n<!--- What you expected to happen. --->\r\n\r\n### Actual Outcome\r\n\r\n<!--- What is happening instead. --->\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : [FILL THIS OUT]  3.10\r\n  - Operating System:     [FILL THIS OUT] windows\r\n  - Hardware:             [FILL THIS OUT] \r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): [FILL THIS OUT]  Localhost \r\n\r\n- **Database**\r\n  - MongoDB version: [FILL THIS OUT] 3.4?\r\n  - Storage engine:  [FILL THIS OUT] \r\n  - Hardware:        [FILL THIS OUT]  4C8G\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): [FILL THIS OUT]  remote server\r\n\r\n### Logs/Trace\r\n![QQ截图20200122174829](https://user-images.githubusercontent.com/52989321/72883537-70079300-3d3f-11ea-9507-503ffa325097.png)\r\n\r\n<!--- Include all relevant logs. You can turn on additional logging by configuring VERBOSE=1 in your environment. --->\r\n"},{"labels":["bug",null],"text":"<!--- \r\n\r\n**We use GitHub Issues for reporting bugs with parse-server.**\r\n\r\nIf you have a *question*, you should join the [Parse Community's Discourse forum](https://community.parseplatform.org/c/parse-server).\r\n\r\nIf you have a vulnerability disclosure, please follow our policy available here https://github.com/parse-community/parse-server/blob/master/SECURITY.md\r\n\r\nYou may also search through existing issues before opening a new one: https://github.com/parse-community/parse-server/issues?utf8=%E2%9C%93&q=is%3Aissue \r\n\r\n--- Please use this template. If you don't use this template, your issue may be closed without comment. ---\r\n--->\r\n### Issue Description\r\n\r\n<!--- Describe your issue in as much detail as possible. -->\r\nThe ParseObject returned by LiveQuery events gives Date in String format, instead of Date format. Problem seem to specifically pertain to \"Update\" events. Strangely, some Date fields are returned in Date format while some are returned in String format.\r\n\r\nI have tried several Parse-Server versions and with the exception of version 3.1.1, all other versions 3.7.2, 3.8.0, and 3.9.0 seem to have this problem.\r\n\r\nP.S. I am aware that special fields like updatedAt and createdAt return String values. I was referring to custom Date fields created by me.\r\n\r\nNote: I am using Back4App, which is a backend-as-a-service built on Parse.\r\n\r\n### Steps to reproduce\r\nCodes in Android client\r\n```\r\nParseQuery<ParseObject> liveQuery = ParseQuery.getQuery(\"QueueGP\");\r\nliveQuery.whereEqualTo(\"clinic\", clinicId);\r\n\r\nSubscriptionHandling<ParseObject> subscription = parseLiveQueryClient.subscribe(liveQuery);\r\nsubscription.handleEvents(new SubscriptionHandling.HandleEventsCallback<ParseObject>() {\r\n    @Override\r\n    public void onEvents(ParseQuery<ParseObject> query, SubscriptionHandling.Event event, ParseObject parseObject) {\r\n        if(event == SubscriptionHandling.Event.UPDATE){\r\n            Date registeredAt = parseObject.getDate(\"registeredAt\");\r\n        } ...\r\n    }\r\n});\r\n```\r\n\r\n<!--- Please include a detailed list of steps that reproduce the issue. Include curl commands when applicable.  --->\r\n \r\n### Expected Results\r\n\r\n<!--- What you expected to happen. --->\r\nonEvent from ParseLiveQueryClient (seen in verbose in my logs)\r\n> ... Socket onMessage {\"op\":\"update\", ... \"registeredAt\":{\"__type\":\"**Date**\",\"**iso**\":\"2020-01-15T12:19:07.175Z\"}}\r\n\r\nExpected to see \"Date\" and \"iso\", and `parseObject.getDate(\"registeredAt\");` should contain date value\r\n\r\n### Actual Outcome\r\n\r\n<!--- What is happening instead. --->\r\nNo \"Date\" or \"iso\" seen. \r\n> \"registeredAt\":\"2020-01-15T12:19:19.759Z\"\r\n\r\nIn actual, `parseObject.getDate(\"registeredAt\")` gives null value, while `parseObject.get(\"registeredAt\");` gives value of String type\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : [3.72 / 3.8.0/ 3.9.0]\r\n  - Operating System:     [Handled by back4app]\r\n  - Hardware:             [Handled by back4app]\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): [Handled by back4app]\r\n\r\n- **Database**\r\n  - MongoDB version: [Handled by back4app]\r\n  - Storage engine:  [Handled by back4app]\r\n  - Hardware:        [Handled by back4app]\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): [Handled by back4app]\r\n\r\n### Logs/Trace\r\n\r\n<!--- Include all relevant logs. You can turn on additional logging by configuring VERBOSE=1 in your environment. --->\r\n"},{"labels":["bug",null],"text":"Sourcefile: https://github.com/parse-community/parse-server/blob/master/src/Adapters/Storage/Mongo/MongoStorageAdapter.js\r\n\r\nFunction name: _parseAggregateArgs()\r\n\r\nThe purpose of the function is to  \r\n\r\n> recursively traverse the pipeline and convert any Pointer or Date columns\r\n\r\nBut it can only recognize existing fields defined in the collection schema. If we create a new Data field in project stage, it can not recognize it and the query won't work.\r\n\r\nExamples: any match on startTime will work, but not on endTime, which is generated in project stage.\r\n\r\n`var pipeline = [`\r\n`    {match: {_p_user: \"_User$\"+userId},},`\r\n`    {`\r\n`      project: {`\r\n`                _p_user: 1,`\r\n`                startTime: 1,`\r\n`                \"endTime\": {$add: [\"$startTime\", {$multiply: [\"$duration\",60000]}]}`\r\n`                }`\r\n`    },`\r\n`    // startTime can be recognized as Date() type, thus the query will work`\r\n`    {match: {\"startTime\": {$gt: new Date()}}},`\r\n`    // endTime can not be recognized as Date type, any query on endTime will fail`\r\n`    //  {match: {\"endTime\": {$gt: new Date()}}},  `\r\n`    {limit: 10},`\r\n`  ];`"},{"labels":["bug",null],"text":"### Issue Description\r\n\r\nThe problem still persist when doing aggregate with `customFieldDate` as pointed out by this [scenario](https://github.com/parse-community/parse-server/issues/4678#issuecomment-551075100).\r\n\r\nThis is my scenario of aggregation. I have tried this one using MongoDB Compass to simulate the results and that works.\r\n\r\n```js\r\n[\r\n  {\r\n    group: {\r\n      _id: \"$shiftId\",\r\n      openedAt: {\r\n        $first: \"$shift._created_at\"\r\n      }\r\n    }\r\n  },\r\n  {\r\n    match: {\r\n      openedAt: {\r\n        $gte: new Date()\r\n      }\r\n    }\r\n  }\r\n]\r\n```\r\n\r\n### Steps to reproduce\r\n\r\nCreate an aggregation similar to above sample.\r\n \r\n### Expected Results\r\n\r\nEmpty array\r\n\r\n### Actual Outcome\r\n\r\nResults filtered by `openedAt`\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 3.10.0\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): localhost\r\n\r\n- **Database**\r\n  - MongoDB version: 3.4\r\n  - Storage engine:  WiredTiger\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): localhost"},{"labels":["bug",null],"text":"Im trying to integrate the default winston logger with the Google Cloud stack driver adapter but cant figure out how to integrate it\r\n\r\nDo you guys have any pointers on this library ?\r\nhttps://github.com/googleapis/nodejs-logging-winston\r\n\r\ntrying this at the moment but its not working\r\n\r\n```\r\nvar WinstonLoggerAdapter = require('parse-server/lib/Adapters/Logger/WinstonLoggerAdapter');\r\n\r\nconst {LoggingWinston} = require('@google-cloud/logging-winston');\r\n\r\nconst loggingWinston = new LoggingWinston();\r\n....\r\n    loggerAdapter: {\r\n        module: WinstonLoggerAdapter,\r\n        options: {\r\n          level: 'info',\r\n          jsonLogs: true,\r\n          transports: [\r\n            // Add Stackdriver Logging\r\n            loggingWinston,\r\n          ],          \r\n        },          \r\n    },\r\n\r\n```\r\n\r\n\r\nSimilar issues:\r\nhttps://github.com/parse-community/parse-server/issues/2501\r\nhttps://github.com/parse-community/parse-server/pull/2550\r\nhttps://github.com/parse-community/parse-server/issues/1904"},{"labels":["bug",null],"text":"<!--- \r\n\r\n**We use GitHub Issues for reporting bugs with parse-server.**\r\n\r\nIf you have a *question*, you should join the [Parse Community's Discourse forum](https://community.parseplatform.org/c/parse-server).\r\n\r\nIf you have a vulnerability disclosure, please follow our policy available here https://github.com/parse-community/parse-server/blob/master/SECURITY.md\r\n\r\nYou may also search through existing issues before opening a new one: https://github.com/parse-community/parse-server/issues?utf8=%E2%9C%93&q=is%3Aissue \r\n\r\n--- Please use this template. If you don't use this template, your issue may be closed without comment. ---\r\n--->\r\n### Issue Description\r\n\r\nIf I try to reset password on a user with email : \"email+123@example.com\", the redirect 302 link location is not encoded. Then in Express when I try to retrieve parameter from URL  in success page I have \"console.log(query.username) \"email 123@example.com.\"\r\n\r\n### Steps to reproduce\r\n\r\nCreate new User with following email `email+123@example.com`\r\nCall `http://localhost:1337/api/requestPasswordReset` with json body {\r\n```\r\n{\r\n  \"email\" : \"email+123@example.com\"\r\n }\r\n```\r\nClick on the reset link in email\r\nFill the form\r\n \r\n### Expected Results\r\n\r\nAfter the new password filled, I should be redirected to \r\nhttp://localhost:1337/password/updated?username=email%2B23@example.com\r\n\r\n### Actual Outcome\r\n\r\nI am redirect to \r\nhttp://localhost:1337/password/updated?username=email+123@example.com\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 3.9.0\r\n  - Operating System:     MacOs 10.14.6\r\n  - Hardware:             MacBook Pro\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): Localhost\r\n\r\n- **Database**\r\n  - MongoDB version: 3.6\r\n  - Storage engine:  WiredTiger\r\n  - Hardware:  MacBrook Pro\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): localhost\r\n\r\n### Logs/Trace\r\n\r\n<!--- Include all relevant logs. You can turn on additional logging by configuring VERBOSE=1 in your environment. --->\r\n"},{"labels":["bug",null],"text":"<!--- \r\n\r\n**We use GitHub Issues for reporting bugs with parse-server.**\r\n\r\nIf you have a *question*, you should join the [Parse Community's Discourse forum](https://community.parseplatform.org/c/parse-server).\r\n\r\nIf you have a vulnerability disclosure, please follow our policy available here https://github.com/parse-community/parse-server/blob/master/SECURITY.md\r\n\r\nYou may also search through existing issues before opening a new one: https://github.com/parse-community/parse-server/issues?utf8=%E2%9C%93&q=is%3Aissue \r\n\r\n--- Please use this template. If you don't use this template, your issue may be closed without comment. ---\r\n--->\r\n### Issue Description\r\n\r\n<!--- Describe your issue in as much detail as possible. -->\r\nWhen querying the objects in a relation property and setting both a limit and ordering by createdAt, not all expected objects are returned.\r\n\r\nRemoving the limit or changing the order by to another property seems to resolve the issue.\r\n\r\nWith 14 objects in the relation, the following incorrect number of objects are returned depending on the specified limit\r\n\r\n| limit | numResults |\r\n|-------|------------|\r\n| 1     | 1          |  \r\n| 2     | 1          | \r\n| 3     | 1          | \r\n| 4     | 1          | \r\n| 5     | 1          | \r\n| 6     | 2          | \r\n| 7     | 3          | \r\n| 8     | 4          | \r\n| 9     | 5          | \r\n| 10     | 6          | \r\n| 11     | 7          | \r\n| 12     | 8          | \r\n| 13     | 9          | \r\n| 14     | 10          | \r\n| 15     | 11         |\r\n| 16     | 12          |\r\n| 17     | 13          |\r\n| 18     | 14         |\r\n| 19     | 14          |\r\n\r\nI have reproduced this issue with Parse Server 3.1.3 and 3.9.0 running from the appropriate official docker images running on a linux and windows host machine running the docker image inside its linux container\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 3.9.0\r\n  - Operating System:     Docker Container - Alpine Linux v3.9\r\n  - Hardware:             Windows PC Host (Intel i7 8700k) - Docker For Windows \r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): Docker container running on Localhost\r\n\r\n- **Database**\r\n  - MongoDB version: 3.4.4\r\n  - Storage engine:  Docker volume \r\n  - Hardware:        Same as Server above in Mongo docker container\r\n  - Localhost or remote server? Same as server above\r\n\r\n"},{"labels":["bug",null],"text":"MongoDB driver 3.3.2 is unable to connect to mongodb replicaSet if one of member machine is down.\r\n\r\nNote: Same issue is described in https://jira.mongodb.org/browse/NODE-2231\r\n\r\n### Steps to reproduce\r\n1. Create mongodb replicaSet with 3 member.\r\n2. connect parse-server with mongodb providing all 3 member host name in uri.\r\n3. stop PRIMARY mongodb server\r\n4. MongoDB is able to select new PRIMARY from the available 2 member but parser-server is unable to connect to new PRIMARY mongodb node. \r\n\r\nNote: Even we restart parse-server when one of the 3 member replicaSet mongodb is down and in mongo connection URI we have provided hostname for all the 3 member. It is not able to connect mongodb.\r\n \r\n### Expected Results\r\nWhen one mongoDB replicaSet member goes down. It should automatically connect to new primary mongodb server.\r\n\r\n### Actual Outcome\r\n\r\nError: connect ECONNREFUSED x.x.x.x:port\r\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1128:14) {\r\n  name: 'MongoNetworkError',\r\n  errorLabels: [ 'TransientTransactionError' ],\r\n  [Symbol(mongoErrorContextSymbol)]: {}\r\n}\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server : 3.9.0\r\n  - Operating System:  Ubuntu 18.04\r\n  - Hardware:  R4.2x.large\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): AWS\r\n\r\n- **Database**\r\n  - MongoDB version: 4.2 (also tested on 4.0.9)\r\n  - Storage engine:  WireTigger\r\n  - Hardware:  R4.2x.large\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): AWS\r\n"},{"labels":["bug"],"text":"### Issue Description\r\n\r\nWe have a `type` `File` and not `Upload` on `createAndAdd` nested mutation\r\n\r\n### Steps to reproduce\r\n\r\n![Capture d’écran 2019-11-19 à 15 01 55](https://user-images.githubusercontent.com/27959372/69153137-f1436f00-0add-11ea-9587-45b2e56e4e92.png)\r\n \r\n### Expected Results\r\n\r\nTo have an `Upload` type\r\n\r\n### Actual Outcome\r\n\r\nWe have a `File` scalar type\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : master\r\n"},{"labels":["bug",null],"text":"### Issue Description\r\n\r\nWhen `customPages` are placed in the `public` directory of parse server, the user is not redirected to the custom html sites.\r\n\r\n### Steps to reproduce\r\n\r\n1. Configure parse server for `api.example.com/parse`.\r\n1. Configure `customPages` like `https://api.example.com/parse/public/change_password.html`\r\n1. Add custom html pages into the `public` folder of parse server.\r\n1. Request password reset link and tap link.\r\n1. => the default page is opened instead of the custom html page\r\n1. Opening the expired link again and the correct custom html page is displayed for invalid link\r\n\r\n### Expected Results\r\n\r\nThe custom html page should be displayed:\r\n`https://api.example.com/parse/public/change_password.html?token=...&id=...&username=...&app=...`\r\n\r\n### Actual Outcome\r\n\r\nThe internal default page is displayed:\r\n`https://api.example.com/parse/apps/choose_password?token=...&id=...&username=...&app=...`\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version 3.9\r\n\r\n- **Database**\r\n\r\n### Logs/Trace\r\n- "},{"labels":["bug",null],"text":"### Issue Description\r\n\r\nUsers report that they have trouble logging in and we see these entries in the NodeJS logs quite frequently since some hours:\r\n\r\n```\r\nerror: Uncaught internal server error.Cannot read property 'facebook' of null\r\n{\r\n    \"stack\": \"TypeError: Cannot read property 'facebook' of null\\n    at Object.keys.forEach.provider (/var/app/current/node_modules/parse-server/lib/RestWrite.js:402:49)\\n    at Array.forEach (<anonymous>)\\n    at findUsersWithAuthData.then (/var/app/current/node_modules/parse-server/lib/RestWrite.js:400:29)\\n    at process._tickCallback (internal/process/next_tick.js:68:7)\"\r\n}\r\n```\r\n\r\nWe also see a few:\r\n`(node:3200) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 connect listeners added. Use emitter.setMaxListeners() to increase limit`\r\n\r\nMaybe related to https://github.com/parse-community/parse-server/issues/2189.\r\n\r\n### Steps to reproduce\r\n\r\nHaven't been able to reproduce yet.\r\n \r\n### Expected Results\r\n\r\nUser should be able to log in.\r\n\r\n### Actual Outcome\r\n\r\nUsers cannot log in.\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 3.9.0\r\n  - Operating System:     AWS Linux\r\n  - Hardware:             AWS\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): AWS\r\n\r\n- **Database**\r\n  - MongoDB version: 3.6.12\r\n  - Storage engine:  WiredTiger\r\n  - Hardware:        mLab\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): mLab\r\n\r\n### Logs/Trace\r\n\r\n-\r\n"},{"labels":["bug",null],"text":"<!--- \r\n\r\n**We use GitHub Issues for reporting bugs with parse-server.**\r\n\r\nIf you have a *question*, you should join the [Parse Community's Discourse forum](https://community.parseplatform.org/c/parse-server).\r\n\r\nIf you have a vulnerability disclosure, please follow our policy available here https://github.com/parse-community/parse-server/blob/master/SECURITY.md\r\n\r\nYou may also search through existing issues before opening a new one: https://github.com/parse-community/parse-server/issues?utf8=%E2%9C%93&q=is%3Aissue \r\n\r\n--- Please use this template. If you don't use this template, your issue may be closed without comment. ---\r\n--->\r\n### Issue Description\r\nParse aggregation pipeline is throwing error on multiple group by. If the first group stage is based on a pointer field and second group stage is based on the number field then it is throwing error.\r\n\r\n### Steps to reproduce\r\n\r\n`var pipeline = [\r\n        {\r\n            group: {\r\n                objectId: '$user',\r\n                totalScore: {\r\n                    $sum: '$score'\r\n                }\r\n            }\r\n        },\r\n        {\r\n            group: {\r\n                objectId: '$totalScore',\r\n                users: {\r\n                    $push: {\r\n                        userId: \"$_id\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        { sort: {objectId: -1}}\r\n    ];`\r\n \r\n### Expected Results\r\n\r\n`[\r\n  {\r\n    \"users\": [\r\n      {\r\n        \"userId\": \"_User$odInwXlX1B\"\r\n      }\r\n    ],\r\n    \"objectId\": 50\r\n  },\r\n  {\r\n    \"users\": [\r\n      {\r\n        \"userId\": \"_User$bnhHc22tfl\"\r\n      }\r\n    ],\r\n    \"objectId\": 10\r\n  }\r\n]`\r\n\r\n<!--- What you expected to happen. --->\r\n\r\n### Actual Outcome\r\nUncaught internal server error.result._id.split is not a function on line /node_modules/parse-server/lib/Adapters/Storage/Mongo/MongoStorageAdapter.js:596:15\r\n\r\n<!--- What is happening instead. --->\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version : 3.1.3\r\n  - Operating System:     Ubuntu 18.04\r\n  - Hardware: Intel 4th Gen (2.2 Ghz) Dual Core, 16 GB Ram.\r\n  - Localhost or remote server? : localhost\r\n\r\n- **Database**\r\n  - MongoDB version: 3.6\r\n  - Storage engine:  WiredTiger\r\n  - Hardware:  Same as the previous\r\n  - Localhost or remote server? : localhost\r\n\r\n### My Observation\r\nOn the second group stage, result._id is a number but storage adapter is trying to split it. And the reason it is trying to split it because isPointerField is being set as true due to the first group stage."},{"labels":["bug",null],"text":"\r\n\r\n### Issue Description\r\nHi,\r\nWhen upgrading from parse-server ‘~2.x’ to ‘~3.x’\r\nI started getting memory leaks issues.\r\nI searched the web and tried many ways to fix this, the only solution that worked was to set enableSingleSchemaCache: true,\r\nBut I do not what to use this solution for production .(I don't want to take any risks)\r\nIs there any other solution for this?\r\n\r\nattached is a screenshot : comparison of two heap dumps taken 2 minutes apart\r\n![image](https://user-images.githubusercontent.com/55482152/65130269-c49fa800-da05-11e9-9203-f964c2962812.png)\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) :'~3.x'\r\n  - Operating System:     [FILL THIS OUT]\r\n  - Hardware:             [FILL THIS OUT]\r\n  - Localhost or remote server?  AWS\r\n\r\n- **Database**\r\n  - MongoDB version: 4.0.3\r\n  - Storage engine:  [FILL THIS OUT]\r\n  - Hardware:        [FILL THIS OUT]\r\n  - Localhost or remote server? AWS\r\n### Logs/Trace\r\nNo errors or strange messages reported, everything working as usual, just memory increasing.\r\n\r\n"},{"labels":["bug",null],"text":"### Issue Description\r\n\r\nSaving a `User` pointer in an array saves the whole object.\r\nPossibly related to https://github.com/parse-community/parse-server/issues/691.\r\n\r\n### Steps to reproduce\r\n\r\n1. Open Parse Dashboard.\r\n1. Add a class with a column of type array.\r\n2. Add a pointer value of an existing user to the array, e.g. \r\n```\r\n[{\r\n    \"__type\": \"Pointer\",\r\n    \"className\": \"_User\",\r\n    \"objectId\": \"EXISTING_OBJECT_ID\"\r\n}]\r\n```\r\n3. Pointer is saved correctly (check directly in DB, not via parse dashboard)\r\n3. Click on refresh in parse dashboard data browser.\r\n4. Item in array is not displayed as `Pointer` but as `Object` containing all fields, e.g.\r\n```\r\n[{\r\n    \"__type\": \"Object\",\r\n    \"className\": \"_User\",\r\n    \"objectId\": \"EXISTING_OBJECT_ID\",\r\n     (+ all other fields of the object)\r\n}]\r\n```\r\n3. Pointer is still saved correctly in DB (check directly in DB, not via parse dashboard)\r\n4. Double click on array field in parse dashboard and exit editing mode\r\n5. `Pointer` has been replaced by `Object` in DB\r\n\r\nNotes:\r\n- This does not happen right after starting the server. It seems that the user needs to be cached or something. For me it happens when I do it in a class that contains a relation field where the user is added and I first add the user to an array there. The issue then occurs in every other class as well. I haven't quite nailed down the pattern yet.\r\n\r\n- The class where it occurs has no beforeSave / afterSave hook.\r\n\r\n- This actually seems to be a Parse Dashboard issue rather than a Parse Server issue.\r\n \r\n### Expected Results\r\n\r\nPointer value should be added to array as is.\r\n\r\n### Actual Outcome\r\n\r\nThe whole object is added to the array.\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 3.4.4, 3.9.0\r\n  - parse-dashboard version (Be specific! Don't say 'latest'.) : 2.0.2\r\n  - Operating System:     -\r\n  - Hardware:             -\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): -\r\n\r\n- **Database**\r\n  - MongoDB version: 3.6.12\r\n  - Storage engine:  MongoDB\r\n  - Hardware:        -\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): -\r\n\r\n### Logs/Trace\r\n(none)\r\n"},{"labels":["bug",null],"text":"### Issue Description\r\n\r\nI'm implementing a check to make sure the user can sign in to the app, but an error occurs while trying to log in to the app.\r\n\r\nFor the error to occur, the class User must have a column with file and the record must have some file, if null works normally\r\n\r\n### Steps to reproduce\r\n\r\n\r\nCloud implementation code snippet\r\n```ts\r\nParse.Cloud.beforeLogin(async request => {\r\n    const { object: user }  = request;\r\n    if(user.get('deletedAt')) {\r\n        throw 'Access denied, you have been banned.';\r\n    }\r\n    \r\n});\r\n```\r\n\r\n`3|AP | Error: Tried to encode an unsaved file.\r\n3|AP |     at encode (/home/user/api/parse-api/node_modules/parse/lib/node/encode.js:73:13)\r\n3|AP |     at _default (/home/user/api/parse-api/node_modules/parse/lib/node/encode.js:126:10)\r\n3| AP |     at ParseUser.toJSON (/home/user/api/parse-api/node_modules/parse/lib/node/ParseObject.js:578:42)\r\n3| AP |     at object (/home/user/api/parse-api/node_modules/parse-server/src/triggers.js:540:23)\r\n3| AP |     at success (/home/user/api/parse-api/node_modules/parse-server/src/triggers.js:273:14)\r\n3|AP |     at <anonymous>\r\n`\r\n\r\nI was checking and an error is occurring on the user who has a file and when doing the code he can't pass this point\r\n\r\n![Captura de Tela 2019-08-29 às 15 28 12](https://user-images.githubusercontent.com/2415473/63966447-b1866180-ca71-11e9-91f9-2fd09390d7c4.png)\r\n\r\n"},{"labels":["bug",null],"text":"### Issue Description\r\n\r\nI am trying to use group pipeline to aggregate result based on a number field 'genderType'. But the objectId is returning as null instead of number.\r\n\r\nobjectId should not be null here. \r\n\r\n### Steps to reproduce\r\n\r\n```\r\nvar pipeline = [\r\n  { group: { objectId: '$genderType' } }\r\n];\r\nvar query = new Parse.Query(\"UserInfo\");\r\nquery.aggregate(pipeline)\r\n  .then(function(results) {\r\n    console.log(results)\r\n})\r\n```\r\n\r\noutput: \r\n```\r\n[{\r\n 'objectId': null\r\n},\r\n{\r\n 'objectId': null\r\n}]\r\n```\r\n \r\n### Expected Results\r\n\r\n```\r\n[{\r\n 'objectId': 1\r\n},\r\n{\r\n 'objectId': 2\r\n}]\r\n```\r\n\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version: 3.1.3\r\n  - Operating System:  Ubuntu 18.04\r\n  - Hardware:  core i3 - 4th Gen (2.2 Ghz) Dual Core, 16 GB Ram. \r\n  - Localhost\r\n\r\n- **Database**\r\n  - MongoDB version: 3.6\r\n  - Storage engine:  WiredTiger\r\n  - Hardware: Same machine as previously mentioned\r\n  - Localhost\r\n\r\n### My Observation: \r\n\r\nIn MongoDB storage adapter, the checking of empty _id is done in this way: \r\n[https://github.com/parse-community/parse-server/blob/master/src/Adapters/Storage/Mongo/MongoStorageAdapter.js](https://github.com/parse-community/parse-server/blob/master/src/Adapters/Storage/Mongo/MongoStorageAdapter.js)\r\nSee Line 802.\r\n```\r\nif (result._id == null || _.isEmpty(result._id)) {\r\n   result._id = null;\r\n}\r\n```\r\nLodash's isEmpty() method is returning true for a valid number (result._id) which is resulting the null value. \r\n"},{"labels":["bug",null],"text":"<!--- \r\n\r\n**We use GitHub Issues for reporting bugs with parse-server.**\r\n\r\nIf you have a *question*, you should join the [Parse Community's Discourse forum](https://community.parseplatform.org/c/parse-server).\r\n\r\nIf you have a vulnerability disclosure, please follow our policy available here https://github.com/parse-community/parse-server/blob/master/SECURITY.md\r\n\r\nYou may also search through existing issues before opening a new one: https://github.com/parse-community/parse-server/issues?utf8=%E2%9C%93&q=is%3Aissue \r\n\r\n--- Please use this template. If you don't use this template, your issue may be closed without comment. ---\r\n--->\r\n### Issue Description\r\n\r\n<!--- Describe your issue in as much detail as possible. -->\r\n\r\nOn parse-server > 3.0.0, when querying a Class with a Geopoint filtered with $nearSphere and a count operator, mongodb returns an errors which is returned as an `internal server error` by parse-server.\r\n\r\n#### Queries\r\n\r\n> Queries does not return the same message depending on the parse-server version  \r\n\r\n- parse-server >= 3.3.0 with `count=1&where={...$nearSphere...` error is `MongoError: radius must be a non-negative number` ([example query](https://docs.parseplatform.org/rest/guide/#geo-queries))\r\n\r\n- parse-server >= 3.3.0 with `count=1&where={...$nearSphere...` error is `error: Uncaught internal server error.can't parse extra field: $maxDistance: 0.002525890376357666` ([example query](https://docs.parseplatform.org/rest/guide/#geo-queries))\r\n\r\n- parse-server > 3.0.0 & < 3.3.0 With count=1&where={...$nearSphere... error is `$nearSphere is not allowed inside of a $match aggregation expression` ([example query](https://docs.parseplatform.org/rest/guide/#geo-queries))\r\n\r\n- Works with 3.0.0\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n<!--- Please include a detailed list of steps that reproduce the issue. Include curl commands when applicable.  --->\r\nNote: This ([example query](https://docs.parseplatform.org/rest/guide/#geo-queries)) with a `count=1` in front of the `where=...`\r\n\r\n```curl\r\ncurl -X GET \\\r\n  -H \"X-Parse-Application-Id: ${APPLICATION_ID}\" \\\r\n  -H \"X-Parse-REST-API-Key: ${REST_API_KEY}\" \\\r\n  -G \\\r\n  --data-urlencode 'count=1&where={\r\n        \"location\": {\r\n          \"$nearSphere\": {\r\n            \"__type\": \"GeoPoint\",\r\n            \"latitude\": 30.0,\r\n            \"longitude\": -20.0\r\n          },\r\n          \"$maxDistanceInMiles\": 10.0\r\n        }\r\n      }' \\\r\n  https://YOUR.PARSE-SERVER.HERE/parse/classes/PlaceObject\r\n```\r\n### Expected Results\r\n\r\n<!--- What you expected to happen. --->\r\nWhat's in the doc: https://docs.parseplatform.org/rest/guide/#counting-objects\r\n\r\n```json\r\n{\r\n  \"results\": [],\r\n  \"count\": 1337\r\n}\r\n```\r\n### Actual Outcome\r\n\r\n<!--- What is happening instead. --->\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version 3.7.2 (KO with any version > 3.0.0)\r\n  - Operating System:     Debian9\r\n  - Hardware:            bare-metal\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): local\r\n\r\n- **Database**\r\n  - MongoDB version: Percona Server for MongoDB shell version v3.4.18-2.16\r\n  - Storage engine:   engine: rocksdb\r\n  - Hardware:       bare-metal\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): local\r\n\r\n### Logs/Trace\r\n\r\n<!--- Include all relevant logs. You can turn on additional logging by configuring VERBOSE=1 in your environment. --->\r\n\r\n```logs\r\n0|parse-se | 2019-08-23 12:18 +02:00: verbose: REQUEST for [GET] /v1/classes/Place?count=1&where={%20%20%20%20%20%20%20%20%22location%22:%20{%20%20%20%20%20%20%20%20%20%20%22$nearSphere%22:%20{%20%20%20%20%20%20%20%20%20%20%20%20%22__type%22:%20%22GeoPoint%22,%20%20%20%20%20%20%20%20%20%20%20%20%22latitude%22:%2030.0,%20%20%20%20%20%20%20%20%20%20%20%20%22longitude%22:%2020.0%20%20%20%20%20%20%20%20%20%20}%20%20%20%20%20%20%20%20}%20%20%20%20%20%20}: {} {\"method\":\"GET\",\"url\":\"/v1/classes/Place?count=1&where={        \\\"location\\\": {          \\\"$nearSphere\\\": {            \\\"__type\\\": \\\"GeoPoint\\\",            \\\"latitude\\\": 30.0,            \\\"longitude\\\": 20.0          }        }      }\",\"headers\":{\"x-real-ip\":\"10.67.3.84\",\"x-forwarded-for\":\"10.67.3.84\",\"x-nginx-proxy\":\"true\",\"host\":\"cobox-dev\",\"connection\":\"close\",\"sec-fetch-mode\":\"cors\",\"x-parse-master-key\":\"REDACTED\",\"x-parse-application-id\":\"OCPCoBox\",\"user-agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36\",\"accept\":\"*/*\",\"sec-fetch-site\":\"same-origin\",\"referer\":\"https://cobox-dev/board/apps/OCPCoBox/api_console\",\"accept-encoding\":\"gzip, deflate, br\",\"accept-language\":\"en-US,en;q=0.9,fr-FR;q=0.8,fr;q=0.7\",\"cookie\":\"session=eyJjc3JmU2VjcmV0IjoiTWg4MTRVNHpFZTRudGpOendmOU9YemhCIiwiZmxhc2giOnt9LCJwYXNzcG9ydCI6eyJ1c2VyIjoib2NwZGV2In19; session.sig=msvh6QgaSsSwAsLMt622KFguiKc\"},\"body\":{}}\r\n0|parse-se | 2019-08-23 12:18 +02:00: error: Uncaught internal server error.radius must be a non-negative number {\"ok\":0,\"errmsg\":\"radius must be a non-negative number\",\"code\":2,\"codeName\":\"BadValue\",\"name\":\"MongoError\",\"stack\":\"MongoError: radius must be a non-negative number\\n    at Connection.<anonymous> (/opt/ocp/cube-parse-server/node_modules/mongodb-core/lib/connection/pool.js:443:61)\\n    at Connection.emit (events.js:180:13)\\n    at Connection.emit (domain.js:422:20)\\n    at processMessage (/opt/ocp/cube-parse-server/node_modules/mongodb-core/lib/connection/connection.js:364:10)\\n    at TLSSocket.<anonymous> (/opt/ocp/cube-parse-server/node_modules/mongodb-core/lib/connection/connection.js:533:15)\\n    at TLSSocket.emit (events.js:180:13)\\n    at TLSSocket.emit (domain.js:422:20)\\n    at addChunk (_stream_readable.js:274:12)\\n    at readableAddChunk (_stream_readable.js:261:11)\\n    at TLSSocket.Readable.push (_stream_readable.js:218:10)\\n    at TLSWrap.onread (net.js:581:20)\"}\r\n0|parse-se | 2019-08-23 12:18 +02:00: MongoError: radius must be a non-negative number\r\n0|parse-se |     at Connection.<anonymous> (/opt/ocp/cube-parse-server/node_modules/mongodb-core/lib/connection/pool.js:443:61)\r\n0|parse-se |     at Connection.emit (events.js:180:13)\r\n0|parse-se |     at Connection.emit (domain.js:422:20)\r\n0|parse-se |     at processMessage (/opt/ocp/cube-parse-server/node_modules/mongodb-core/lib/connection/connection.js:364:10)\r\n0|parse-se |     at TLSSocket.<anonymous> (/opt/ocp/cube-parse-server/node_modules/mongodb-core/lib/connection/connection.js:533:15)\r\n0|parse-se |     at TLSSocket.emit (events.js:180:13)\r\n0|parse-se |     at TLSSocket.emit (domain.js:422:20)\r\n0|parse-se |     at addChunk (_stream_readable.js:274:12)\r\n0|parse-se |     at readableAddChunk (_stream_readable.js:261:11)\r\n0|parse-se |     at TLSSocket.Readable.push (_stream_readable.js:218:10)\r\n0|parse-se |     at TLSWrap.onread (net.js:581:20)\r\n```\r\n\r\n### Additonal notes:\r\n\r\nRelated to #5285?"},{"labels":["bug"],"text":"### Issue Description\r\n\r\nI'm trying to upload a file from React to parse server using GraphQL but i'm getting the below response back.\r\n\r\n```json\r\n{\r\n  \"errors\": [\r\n    {\r\n      \"message\": \"Invalid file upload.\",\r\n      \"locations\": [\r\n        {\r\n          \"line\": 3,\r\n          \"column\": 5\r\n        }\r\n      ],\r\n      \"path\": [\r\n        \"files\",\r\n        \"create\"\r\n      ],\r\n      \"extensions\": {\r\n        \"code\": 130,\r\n        \"exception\": {\r\n          \"stacktrace\": [\r\n            \"Error: Invalid file upload.\",\r\n            \"    at toGraphQLError (/usr/src/app/node_modules/parse-server/lib/GraphQL/parseGraphQLUtils.js:25:10)\",\r\n            \"    at ParseGraphQLSchema.handleError (/usr/src/app/node_modules/parse-server/lib/GraphQL/ParseGraphQLSchema.js:173:49)\",\r\n            \"    at resolve (/usr/src/app/node_modules/parse-server/lib/GraphQL/loaders/filesMutations.js:77:28)\",\r\n            \"    at processTicksAndRejections (internal/process/task_queues.js:89:5)\",\r\n            \"    at async Promise.all (index 0)\"\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  \"data\": {\r\n    \"files\": null\r\n  }\r\n}\r\n```\r\n\r\nHere is my React code\r\n\r\n```javascript\r\nimport React from 'react';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { createUploadLink } from 'apollo-upload-client';\r\nimport { Mutation } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\n\r\nconst uploadLink = createUploadLink({\r\n  uri: 'https://parseapi.back4app.com/graphql',\r\n  headers: {\r\n    'X-Parse-Application-Id': '####',\r\n    'X-Parse-Client-Key': '###',\r\n  },\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: uploadLink,\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport const UPLOAD_FILE = gql`\r\n  mutation uploadFile($file: Upload!) {\r\n    files {\r\n      create(file: $file) {\r\n        name\r\n        url\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Mutation mutation={UPLOAD_FILE}>\r\n        {uploadFile => (\r\n          <input\r\n            type=\"file\"\r\n            required\r\n            onChange={({ target: { validity, files: [file] } }) =>\r\n              validity.valid && uploadFile({ variables: { file } })\r\n            }\r\n          />\r\n        )}\r\n      </Mutation>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n```\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version : 3.7.2\r\n  - Hosted on Back4App\r\n"},{"labels":["bug",null,null],"text":"### Issue Description\r\n\r\nWhen using `protectedFields` on a custom class and adding a userId to the object ACL (read) in the custom class, the ACL is ignored and the protected fields are not returned when the specified user is logged in and requests the document. Using roles works with ACL and `protectedFields`.\r\n\r\nThe problem can be traced back to the `addProtectedFields` function in [DatabaseController.js](https://github.com/parse-community/parse-server/blob/master/src/Controllers/DatabaseController.js):\r\n\r\nThe following check in the function: \r\n`    if (\r\n      Object.keys(query).length === 0 &&\r\n      auth &&\r\n      auth.user &&\r\n      aclGroup.indexOf(auth.user.id) > -1\r\n    )\r\n      return null;`\r\n\r\ndoes support the behavior of white-listing users for the `protectedFields` but since `Object.keys(query).length === 0 ` almost always is larger than 0 for queries the condition is almost never true, besides the user having permission to read the `protectedFields`.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a custom class\r\n2. Add protected fields\r\n3. Create an object in the custom class\r\n4. Add a user to the object ACL with read permission\r\n5. Request the object as the user added to the ACL\r\n6. Protected fields are not returned \r\n \r\n### Expected Results\r\n\r\nThe protected fields are returned since the user has the read ACL permission.\r\n\r\n### Actual Outcome\r\n\r\nThe protected fields are not returned.\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version: 3.7.2\r\n  - Operating System: Arch Linux\r\n  - Hardware: [FILL THIS OUT]\r\n  - Localhost or remote server?: localhost\r\n\r\n- **Database**\r\n  - MongoDB version: 4.0.11\r\n  - Storage engine:  [FILL THIS OUT]\r\n  - Hardware:        [FILL THIS OUT]\r\n  - Localhost or remote server?: mongoDB Atlas\r\n\r\n### Logs/Trace\r\n\r\n<!--- Include all relevant logs. You can turn on additional logging by configuring VERBOSE=1 in your environment. --->\r\n"},{"labels":["bug",null],"text":"### Issue Description\r\n\r\nOur application needs the ability to only allow 1 session per device type. For Example: they can only have 1 session if they log into a mobile device. So if they login using their iPhone, it will log them out of their iPad. But it they login via the website, the session on their iPhone will not be deleted. If they log into the website with a different browser, it will delete only their other website session.\r\n\r\nI accomplish this by using a cloud function called \"loginUser\" which takes 3 parameters (username, password, source). The cloud function will call the Parse.User.login function and then update the session that is returned with the source and delete the remaining sessions that match the same source. This has worked for awhile and then we started getting reports of only 1 session being allowed no matter what. I finally got time to track down what was causing it and traced it back to issue #3451. The fix for this issue deletes duplicate sessions based on installation id. Since our login function is being called from the server, and not the client, the installation id being passed to the login function is the same no matter who's logging in. (I am able to update the installation id later from the client after a successful login so it wasn't an issue before) Now that sessions are being deleted automatically (#3451) based on installation id, it is not allowing our users to be logged into more than 1 device.\r\n\r\n### Steps to reproduce\r\n\r\ncreate a function like below:\r\n`\r\nParse.Cloud.define('loginUser', async (req) => {\r\n  const { username, password } = req.params;\r\n  const user = await Parse.User.logIn(username, password);\r\n  return user;\r\n});\r\n`\r\nCall said cloud function from 2 different devices and pass in username and password\r\n\r\n### Expected Results\r\n\r\n2 separate session tokens should be created.\r\n\r\n### Actual Outcome\r\n\r\n1st session token will be deleted\r\n\r\n### Proposed Solution\r\n\r\nIf I could override the installation id being generated in the Parse.User.login function then everything would work as expected. For now I guess the only work around would be to use the REST api and call the function without the Parse.User.login function?\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version: 3.7.2\r\n  - Operating System: OSX\r\n  - Hardware: iMac\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): Localhost and AWS"},{"labels":["bug",null,null],"text":"### Issue Description\r\n\r\n_linkWith on an existing user returns user with no sessionToken\r\n\r\n### Steps to reproduce\r\n1.- have an user in db\r\n2.- fetch it with a query \r\n3.- call _linkWith on it\r\n### Expected Results\r\n\r\nfor the user object to have a sessionToken prop just like new users.\r\n\r\n### Actual Outcome\r\n\r\n_linkWith returns no sessionToken\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 3.4.4\r\n  - Operating System:     windows\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): everywhere\r\n\r\n- **Database**\r\n  - MongoDB version: mongo atlas db\r\nOUT]\r\n\r\n### Logs/Trace\r\n![Screen Shot 2019-07-09 at 15 20 26](https://user-images.githubusercontent.com/15863852/60920966-0de1b780-a25f-11e9-9ff6-943fba90f4c4.png)\r\n\r\n"},{"labels":["bug"],"text":"### Issue Description\r\nget error when using live query with query.fields\r\nbut this work on 2.8.4\r\n\r\n<!--- Describe your issue in as much detail as possible. -->\r\n\r\n### Steps to reproduce\r\n\r\n<!--- Please include a detailed list of steps that reproduce the issue. Include curl commands when applicable.  --->\r\nthis is OK\r\n\r\n```\r\n{\r\n  \"op\": \"subscribe\",\r\n  \"requestId\": 1,\r\n  \"query\": {\r\n      \"className\": \"Player\",\r\n      \"where\": {\"name\": \"test\"}\r\n  },\r\n  \"sessionToken\": \"\" // Optional\r\n}\r\n```\r\nthis get error\r\n\r\n```\r\n{\r\n  \"op\": \"subscribe\",\r\n  \"requestId\": 1,\r\n  \"query\": {\r\n      \"className\": \"Player\",\r\n      \"where\": {\"name\": \"test\"},\r\n      \"fields\": [\"name\"] // Optional\r\n  },\r\n  \"sessionToken\": \"\" // Optional\r\n}\r\n```\r\n\r\n\r\n### Expected Results\r\n{\"op\":\"create\",\"clientId\":\"xxx\",\"requestId\":10,\"object\":xxxxxxx,\"original\":null}\r\n<!--- What you expected to happen. --->\r\n\r\n### Actual Outcome\r\n\r\n```\r\n(node:1468) UnhandledPromiseRejectionWarning: TypeError: Cannot read property 'className' of null\r\n\r\n    at Client._toJSONWithFields (/rbd/pnpm-volume/3de49c66-6120-4e8e-822d-0dc5af59b3dd/node_modules/.registry.npmjs.org/parse-server/3.5.0/node_modules/parse-server/lib/LiveQuery/Client.js:95:50)\r\n\r\n    at Client.pushCreate (/rbd/pnpm-volume/3de49c66-6120-4e8e-822d-0dc5af59b3dd/node_modules/.registry.npmjs.org/parse-server/3.5.0/node_modules/parse-server/lib/LiveQuery/Client.js:79:39)\r\n\r\n    at _matchesCLP.then.then (/rbd/pnpm-volume/3de49c66-6120-4e8e-822d-0dc5af59b3dd/node_modules/.registry.npmjs.org/parse-server/3.5.0/node_modules/parse-server/lib/LiveQuery/ParseLiveQueryServer.js:293:33)\r\n\r\n    at process._tickCallback (internal/process/next_tick.js:68:7)\r\n\r\n(node:1468) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 3)\r\n```\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 3.0.0-3.5.0\r\n  - Operating System:     [FILL THIS OUT]\r\n  - Hardware:             [FILL THIS OUT]\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): [FILL THIS OUT]\r\n\r\n- **Database**\r\n  - MongoDB version: [FILL THIS OUT]\r\n  - Storage engine:  [FILL THIS OUT]\r\n  - Hardware:        [FILL THIS OUT]\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): [FILL THIS OUT]\r\n\r\n### Logs/Trace\r\n\r\n<!--- Include all relevant logs. You can turn on additional logging by configuring VERBOSE=1 in your environment. --->\r\n"},{"labels":["bug",null,null],"text":"<!--- \r\n\r\n**We use GitHub Issues for reporting bugs with parse-server.**\r\n\r\nIf you have a *question*, you should join the [Parse Community's Discourse forum](https://community.parseplatform.org/c/parse-server).\r\n\r\nIf you have a vulnerability disclosure, please follow our policy available here https://github.com/parse-community/parse-server/blob/master/SECURITY.md\r\n\r\nYou may also search through existing issues before opening a new one: https://github.com/parse-community/parse-server/issues?utf8=%E2%9C%93&q=is%3Aissue \r\n\r\n--- Please use this template. If you don't use this template, your issue may be closed without comment. ---\r\n--->\r\n### Issue Description\r\n\r\n<!--- Describe your issue in as much detail as possible. -->\r\nThere's a problem in the current way parse handles email changes for users. The problem is that when an user changes his email, parse sends a verification email, but changes the user email in the database, this can lead to a malicious access block from an user to another.\r\n\r\nIf a user changes his email to one not being used yet (which he can know by trying to change the email and not receiving the 'Email address already in use') then, without needing to verify the new one, the email address is changed, preventing the person that really owns that address from registering because would get the 'Email address already in use' error.\r\n\r\nThis error is prevented easily by making the email address change along with the verification accept. At the same time the `emailVerified` value is set to true so will be for the new email address. If the person that changed the email, owns the new address, then the verification can be performed successfully, if not, then the email wont be changed and the user owning the email address can register without problem. \r\n\r\n### Steps to reproduce\r\n\r\nWith a registered account perform an user email change to an email that's not registered yet. Then, try to register with that email.\r\n \r\n### Expected Results\r\n\r\nThat the registration succeeds as the other email change is not verified. \r\n\r\n### Actual Outcome\r\n\r\nThe registration fails with 'Email address already in use'\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 3.1.3\r\n  - Operating System:     Linux Ubuntu 18.10\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): both\r\n\r\n- **Database**\r\n  - MongoDB version: 3.4.4\r\n  - Storage engine:  default\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): both\r\n"},{"labels":["bug"],"text":"I'm running my code on cloud parse-server latest version 3.3.0 full text search and it seems it does not work for me. I got the following message...\r\n\r\n<img width=\"561\" alt=\"Screen Shot 2019-04-26 at 3 42 07 PM\" src=\"https://user-images.githubusercontent.com/8943566/56840069-68f83680-683a-11e9-8557-c4f208ca66d2.png\">\r\n\r\n\r\nHere's my code:\r\n\r\n![Screen Shot 2019-04-26 at 2 09 10 PM](https://user-images.githubusercontent.com/8943566/56840080-757c8f00-683a-11e9-9cd0-c9cbeccfc213.png)\r\n\r\n\r\nI'm using mlab/mongodb for storing parse data\r\n\r\nAny help is much appreciated."},{"labels":["bug",null],"text":"### Issue Description\r\n\r\nWhen running a simple query on a class from cloud code, the result is an array of **pointers** to class objects instead of an array of **actual objects**. When the same query is run on the client it works ok.\r\n\r\nThis only happens on a specific class (`Profile` in my case), the same query on any other class returns the expected output.\r\n\r\n<!--- Describe your issue in as much detail as possible. -->\r\n\r\n### Steps to reproduce\r\n\r\nCall this cloud function function for a certain class (in this case `Profile`):\r\n```\r\nParse.Cloud.define('department:getMembers', request => {\r\n  return new Parse.Query(Profile).find({useMasterKey: true});\r\n});\r\n```\r\n\r\n<!--- Please include a detailed list of steps that reproduce the issue. Include curl commands when applicable.  --->\r\n \r\n### Expected Results\r\n\r\nIf I run the same query from the client: `new Parse.Query(Profile).find();`, what I get is a list of **Parse Objects** as expected:\r\n\r\n```\r\n{\r\n\t\"results\": [\r\n\t\t{\r\n\t\t\t\"objectId\": \"SmAkS6KX9F\",\r\n\t\t\t\"accreditations\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"code\": 5,\r\n\t\t\t\t\t\"year\": 2013\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"awards\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"gdsf\",\r\n\t\t\t\t\t\"awardedBy\": \"dsgf\",\r\n\t\t\t\t\t\"year\": 2004,\r\n\t\t\t\t\t\"details\": \"hfgdfdhgdfhg\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t// more properties...\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"objectId\": \"MhOASa4bBa\",\r\n\t\t\t\"accreditations\": [],\r\n\t\t\t\"awards\": [],\r\n\t\t\t// more properties...\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"objectId\": \"yIIEz9UIGp\",\r\n\t\t\t\"accreditations\": [],\r\n\t\t\t\"awards\": [],\r\n\t\t\t// more properties...\r\n\t\t}\r\n\t]\r\n}\r\n```\r\n\r\n<!--- What you expected to happen. --->\r\n\r\n### Actual Outcome\r\n... but when run from cloud code I'm getting just pointers instead of actual objects!:\r\n\r\n```\r\n{\r\n    \"result\": [\r\n        {\r\n            \"__type\": \"Pointer\",\r\n            \"className\": \"Profile\",\r\n            \"objectId\": \"SmAkS6KX9F\"\r\n        },\r\n        {\r\n            \"__type\": \"Pointer\",\r\n            \"className\": \"Profile\",\r\n            \"objectId\": \"MhOASa4bBa\"\r\n        },\r\n        {\r\n            \"__type\": \"Pointer\",\r\n            \"className\": \"Profile\",\r\n            \"objectId\": \"yIIEz9UIGp\"\r\n        }\r\n    ]\r\n}\r\n```\r\n<!--- What is happening instead. --->\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 3.1.1\r\n  - Operating System:     Win10\r\n  - Hardware:             Intel Core i5-6200U; RAM 12GB\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): Local\r\n\r\n- **Database**\r\n  - MongoDB version: v4.0.1\r\n  - Storage engine:  WiredTiger\r\n  - Hardware:        (same as server) Intel Core i5-6200U; RAM 12GB\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): Local\r\n\r\n### Logs/Trace\r\n\r\n```\r\ninfo: Ran cloud function department:getMembers for user rhLnSgyBQv with:\r\n  Input: {\"department\":{\"__type\":\"Pointer\",\"className\":\"Department\",\"objectId\":\"nBcxb3juBx\"}}\r\n  Result: [{\"__type\":\"Pointer\",\"className\":\"Profile\",\"objectId\":\"SmAkS6KX9F\"},{\"__type\":\"Pointer\",\"className\":\"Profile\",\"objectId\":\"MhOASa4bBa\"},{\"__type\":\"Pointer\",\"className\":\"Profile\",\"objectId\":\"yIIEz9UIGp\"}] functionName=department:getMembers, __type=Pointer, className=Department, objectId=nBcxb3juBx, user=rhLnSgyBQv\r\nverbose: RESPONSE from [POST] /scope/functions/department:getMembers: {\r\n  \"response\": {\r\n    \"result\": [\r\n      {\r\n        \"__type\": \"Pointer\",\r\n        \"className\": \"Profile\",\r\n        \"objectId\": \"SmAkS6KX9F\"\r\n      },\r\n      {\r\n        \"__type\": \"Pointer\",\r\n        \"className\": \"Profile\",\r\n        \"objectId\": \"MhOASa4bBa\"\r\n      },\r\n      {\r\n        \"__type\": \"Pointer\",\r\n        \"className\": \"Profile\",\r\n        \"objectId\": \"yIIEz9UIGp\"\r\n      }\r\n    ]\r\n  }\r\n} result=[__type=Pointer, className=Profile, objectId=SmAkS6KX9F, __type=Pointer, className=Profile, objectId=MhOASa4bBa, __type=Pointer, className=Profile, objectId=yIIEz9UIGp]\r\n```\r\n<!--- Include all relevant logs. You can turn on additional logging by configuring VERBOSE=1 in your environment. --->\r\n\r\n### Some more code\r\n\r\nFor what it's worth, this is the code for the class `Profile.ts`.\r\n\r\n```\r\nimport Parse from '@parse';\r\nimport { User } from '@library/user/user';\r\n// some more imports...\r\n\r\nexport class Profile extends Parse.Object {\r\n\r\n\tconstructor(attributes?: IProfile) {\r\n\t\tsuper('Profile', attributes);\r\n\r\n\t\tthis.accreditations = attributes && attributes.accreditations || [];\r\n\t\tthis.awards = attributes && attributes.awards || [];\r\n\t\tthis.seniority = attributes && attributes.seniority || [];\r\n\t\tthis.degrees = attributes && attributes.degrees || [];\r\n\t}\r\n\r\n\tget user(): User { return this.get('user'); }\r\n\tset user(val: User) { this.set('user', val); }\r\n\r\n         // some more setters and functions...\r\n\r\n\ttoJSON(): IProfile {\r\n\t\tconst json = super.toJSON();\r\n\t\tjson.photoUrl = this.photoUrl;\r\n\t\treturn json;\r\n\t}\r\n}\r\n\r\n// IMPORTANT: Register as Parse subclass\r\nParse.Object.registerSubclass('Profile', Profile);\r\n```\r\n"},{"labels":["bug"],"text":"<!--- \r\n\r\n**We use GitHub Issues for reporting bugs with parse-server.**\r\n\r\nIf you have a *question*, you should join the [Parse Community's Discourse forum](https://community.parseplatform.org/c/parse-server).\r\n\r\nIf you have a vulnerability disclosure, please follow our policy available here https://github.com/parse-community/parse-server/blob/master/SECURITY.md\r\n\r\nYou may also search through existing issues before opening a new one: https://github.com/parse-community/parse-server/issues?utf8=%E2%9C%93&q=is%3Aissue \r\n\r\n--- Please use this template. If you don't use this template, your issue may be closed without comment. ---\r\n--->\r\n### Issue Description\r\nGeo queries cause internal server error: type \"geometry\" does not exist. See log for more details. Note that I'm using a Psql database, not MongoDB. I get the same error if I try query.withinMiles(), query.withinKilometers(), or query.near().\r\n\r\n\r\n### Steps to reproduce\r\n\r\nClass Location contains key \"latlon\" that is of type GeoPoint.\r\n![image](https://user-images.githubusercontent.com/27454024/53689255-46e0ad00-3cfe-11e9-9c3c-b589f120cd7e.png)\r\n\r\nclient-side JS code:\r\n\tvar coords = {\r\n\t\tlatitude: 59.045,\r\n\t\tlongitude: -135.554\r\n\t};\r\n\tloc = new Parse.GeoPoint(coords);\r\n\tconst LO = Parse.Object.extend(\"Location\");\r\n\tconst query = new Parse.Query(LO);\r\n\tquery.withinMiles(\"latlon\", loc, 5);\r\n\tconst results = await query.find();\r\n \r\n### Expected Results\r\n\r\nShould return 5 Location objects (all are within 5 miles of coords.)\r\n\r\n### Actual Outcome\r\n\r\n5 internal server errors! One for each location that should be returned. \r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 3.1.1\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): Heroku\r\n\r\n- **Database**\r\nHeroku PostgresSQL\r\n\r\n### Logs/Trace\r\n\r\n![image](https://user-images.githubusercontent.com/27454024/53689237-b904c200-3cfd-11e9-86f3-0ae48726aade.png)\r\n"},{"labels":["bug",null],"text":"### Issue Description\r\n\r\nThere is quite an issue introduced in here: 631b1684\r\nYou can't save more than 100 elements in an array type field anymore when using PostgreSQL.\r\nThe error appears when calling `json_build_array()`.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a field of type 'Array'.\r\n2. Try to save more than 100 elements into it.\r\n \r\n### Expected Results\r\n\r\nThe array is saved successfully.\r\n\r\n### Actual Outcome\r\n\r\nThe following error occurs:\r\n\r\n```\r\nerror: Uncaught internal server error. { error: cannot pass more than 100 arguments to a function\r\n    at Connection.parseE (/parse-server/node_modules/pg/lib/connection.js:555:11)\r\n    at Connection.parseMessage (/parse-server/node_modules/pg/lib/connection.js:380:19)\r\n    at Socket.<anonymous> (/parse-server/node_modules/pg/lib/connection.js:120:22)\r\n    at Socket.emit (events.js:189:13)\r\n    at Socket.EventEmitter.emit (domain.js:441:20)\r\n    at addChunk (_stream_readable.js:284:12)\r\n    at readableAddChunk (_stream_readable.js:265:11)\r\n    at Socket.Readable.push (_stream_readable.js:220:10)\r\n    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)\r\n  name: 'error',\r\n  length: 119,\r\n  severity: 'ERROR',\r\n  code: '54023',\r\n  detail: undefined,\r\n  hint: undefined,\r\n  position: '34',\r\n  internalPosition: undefined,\r\n  internalQuery: undefined,\r\n  where: undefined,\r\n  schema: undefined,\r\n  table: undefined,\r\n  column: undefined,\r\n  dataType: undefined,\r\n  constraint: undefined,\r\n  file: 'parse_func.c',\r\n  line: '119',\r\n  routine: 'ParseFuncOrColumn' } error: cannot pass more than 100 arguments to a function\r\n    at Connection.parseE (/parse-server/node_modules/pg/lib/connection.js:555:11)\r\n    at Connection.parseMessage (/parse-server/node_modules/pg/lib/connection.js:380:19)\r\n    at Socket.<anonymous> (/parse-server/node_modules/pg/lib/connection.js:120:22)\r\n    at Socket.emit (events.js:189:13)\r\n    at Socket.EventEmitter.emit (domain.js:441:20)\r\n    at addChunk (_stream_readable.js:284:12)\r\n    at readableAddChunk (_stream_readable.js:265:11)\r\n    at Socket.Readable.push (_stream_readable.js:220:10)\r\n    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)\r\nerror: cannot pass more than 100 arguments to a function\r\n    at Connection.parseE (/parse-server/node_modules/pg/lib/connection.js:555:11)\r\n    at Connection.parseMessage (/parse-server/node_modules/pg/lib/connection.js:380:19)\r\n    at Socket.<anonymous> (/parse-server/node_modules/pg/lib/connection.js:120:22)\r\n    at Socket.emit (events.js:189:13)\r\n    at Socket.EventEmitter.emit (domain.js:441:20)\r\n    at addChunk (_stream_readable.js:284:12)\r\n    at readableAddChunk (_stream_readable.js:265:11)\r\n    at Socket.Readable.push (_stream_readable.js:220:10)\r\n    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)\r\n```\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version: master on 4d07f0274a813a56532b52bfaf4e8dfa25e906e8\r\n\r\n- **Database**\r\n  - PostgreSQL version: 9.6.10"},{"labels":["bug",null],"text":"### Issue Description\r\n\r\nWhen I try to make a count on a query with a GeoConstraint, I have an `internal server error`. It seems to be tied to an issue with Mongo: `MongoError: $nearSphere is not allowed inside of a $match aggregation expression`.\r\n\r\n### Steps to reproduce\r\n\r\nI built a minimal parse instance (just a copy paste of documentation): \r\n```js\r\nvar express = require('express');\r\nvar ParseServer = require('parse-server').ParseServer;\r\nvar app = express();\r\n\r\nvar api = new ParseServer({\r\n  databaseURI: 'mongodb://localhost:27017/minimal_parse', // Connection string for your MongoDB database\r\n  appId: 'myAppId',\r\n  masterKey: 'myMasterKey',\r\n  serverURL: 'http://localhost:1337/parse',\r\n});\r\n\r\n// Serve the Parse API on the /parse URL prefix\r\napp.use('/parse', api);\r\n\r\napp.listen(1337, function() {\r\n  console.log('parse-server-example running on port 1337.');\r\n});\r\n```\r\n\r\nOn client side: \r\n```js\r\nvar Parse = require('parse/node');\r\n\r\nconst parseAppId = 'myAppId';\r\nconst parseMasterKey = \"myMasterKey\";\r\nconst parseServerURL = 'http://localhost:1337/parse';\r\n\r\nParse.serverURL = parseServerURL;\r\nParse.initialize(parseAppId, undefined, parseMasterKey);\r\n\r\nlet run = async () => {\r\n  let t = new Parse.Object(\"Contact\");\r\n  t.set(\"geocode\", new Parse.GeoPoint(0,0))\r\n  t.set(\"tel\", \"33663192122\")\r\n  t.set(\"name\", \"test\")\r\n  await t.save({}, {useMasterKey:true})\r\n\r\n\r\n  let query = new Parse.Query('Contact').withinKilometers(\"geocode\", new Parse.GeoPoint(0, 0), 20)\r\n\r\n  let items = await query.find()\r\n  // \"Got 1 items with find()\"\r\n  console.log(\"Got \"+ items.length+\" items with find().\");  \r\n\r\n  let itemsCount = await query.count()\r\n\r\n  // Expecting \"Got 1 items with find()\", but got an error \r\n  console.log(\"Got \"+ itemsCount+\" items with count().\");  \r\n}\r\n\r\nrun()\r\n```\r\n \r\n### Expected Results\r\nI'm expecting `query.count()` to return a count.\r\n\r\n### Actual Outcome\r\n\r\nInstead, the client got an `internal server error`. On server, I got this trance: \r\n\r\nThe request (so far, so good): \r\n\r\n```\r\nverbose: REQUEST for [GET] /parse/classes/Transporter: {\r\n  \"where\": {\r\n    \"geocode\": {\r\n      \"$nearSphere\": {\r\n        \"__type\": \"GeoPoint\",\r\n        \"latitude\": 0,\r\n        \"longitude\": 0\r\n      },\r\n      \"$maxDistance\": 0.0031392246115209545\r\n    }\r\n  },\r\n  \"limit\": 0,\r\n  \"count\": 1\r\n} method=GET, url=/parse/classes/Transporter, user-agent=node-XMLHttpRequest, Parse/js2.1.0 (NodeJS 11.1.0), accept=*/*, content-type=text/plain, host=localhost:1337, content-length=270, connection=close, __type=GeoPoint, latitude=0, longitude=0, $maxDistance=0.0031392246115209545, limit=0, count=1\r\n```\r\n\r\nThe error: \r\n```\r\nerror: Uncaught internal server error. { MongoError: $nearSphere is not allowed inside of a $match aggregation expression\r\n    at queryCallback (/Users/onejjy/Documents/Code/tmp/minimal_parse/node_modules/mongodb-core/lib/cursor.js:248:25)\r\n    at /Users/onejjy/Documents/Code/tmp/minimal_parse/node_modules/mongodb-core/lib/connection/pool.js:532:18\r\n    at process.internalTickCallback (internal/process/next_tick.js:70:11)\r\n  ok: 0,\r\n  errmsg:\r\n   '$nearSphere is not allowed inside of a $match aggregation expression',\r\n  code: 16426,\r\n  name: 'MongoError',\r\n  [Symbol(mongoErrorContextSymbol)]: {} } MongoError: $nearSphere is not allowed inside of a $match aggregation expression\r\n    at queryCallback (/Users/onejjy/Documents/Code/tmp/minimal_parse/node_modules/mongodb-core/lib/cursor.js:248:25)\r\n    at /Users/onejjy/Documents/Code/tmp/minimal_parse/node_modules/mongodb-core/lib/connection/pool.js:532:18\r\n    at process.internalTickCallback (internal/process/next_tick.js:70:11)\r\nMongoError: $nearSphere is not allowed inside of a $match aggregation expression\r\n    at queryCallback (/Users/onejjy/Documents/Code/tmp/minimal_parse/node_modules/mongodb-core/lib/cursor.js:248:25)\r\n    at /Users/onejjy/Documents/Code/tmp/minimal_parse/node_modules/mongodb-core/lib/connection/pool.js:532:18\r\n    at process.internalTickCallback (internal/process/next_tick.js:70:11)\r\n```\r\n\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version: 3.1.3\r\n  - Operating System:  Tested on Mac OS and Ubuntu\r\n  - Hardware:  personal computer and production server\r\n  - Localhost or remote server?: local and remote\r\n\r\n- **Database**\r\n  - MongoDB version: 3.2.1\r\n  - Storage engine:  [FILL THIS OUT]\r\n  - Hardware: personal computer and production server\r\n  - Localhost or remote server? local and remote"},{"labels":["bug"],"text":"\r\n### Issue Description\r\n\r\nOn Parse using Aurora Postgres: \r\nWhen saving an array with either a 0 or some decimal value (ex. 1.1) to a field of type Array, those number values are automatically converted to strings somehow. Any other integer is fine. For example, the array becomes [\"0\", \"1.1\", 2, 3, 4, 5] when expecting [0, 1.1, 2, 3, 4, 5]. I have tried a lot of weird and random things to try to force the value to an int (like using parseInt(0)), but nothing seems to work. The save is done using .set (for example: record.set('array', [0, 1.1, 2, 3, 4, 5])).\r\n\r\n### Steps to reproduce\r\n\r\n1. Create an array with 0s or decimals inside. e.g. [0, 1.1, 2, 3, 4, 5]\r\n2. Set an object with that array. e.g. record.set('array', [0, 1.1, 2, 3, 4, 5]);\r\n3. Save the object e.g. record.save()\r\n\r\n### Expected Results\r\n\r\nrecord of Table/Class to have [0, 1.1, 2, 3, 4, 5] set in 'array' field\r\n\r\n### Actual Outcome\r\n\r\n[\"0\", \"1.1\", 2, 3, 4, 5]\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 2.8.2\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): AWS/Localhost\r\n\r\n- **Database**\r\n  - MongoDB version:  N/A, Aurora PostgreSQL 10.4 \r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): [AWS]\r\n\r\n### Logs/Trace\r\nN/A"},{"labels":["bug",null],"text":"<!--- \r\n\r\n**We use GitHub Issues for reporting bugs with parse-server.**\r\n\r\nIf you have a *question*, you should join the gitter chat where a community of more than 200 parse users gather.\r\n\r\n- https://gitter.im/ParsePlatform/Chat\r\n\r\nIf you have a non-bug question, ask on Stack Overflow or Server Fault: \r\n- https://stackoverflow.com/questions/tagged/parse.com \r\n- https://serverfault.com/tags/parse\r\n\r\nIf you have a vulnerability disclosure, please follow our policy available here https://github.com/parse-community/parse-server/blob/master/SECURITY.md\r\n\r\nYou may also search through existing issues before opening a new one: https://github.com/parse-community/parse-server/issues?utf8=%E2%9C%93&q=is%3Aissue \r\n\r\n--- Please use this template. If you don't use this template, your issue may be closed without comment. ---\r\n--->\r\n### Issue Description\r\n\r\nWhen installing Parse Server with PostgreSQL 10, adding Config entries to ParseDashboard will result in deletion of the old Config entries, i.e. Config can only put one entry. After checking the database, it is found that each new Config entry objectId is 1.\r\n\r\n### Steps to reproduce\r\n\r\nBefore adding new entries:\r\n![before_add_secend_config](https://user-images.githubusercontent.com/5876087/48597516-2e3fc780-e999-11e8-998c-13c8e7ed7beb.png)\r\n\r\nthen add new one:\r\n![add_new_config](https://user-images.githubusercontent.com/5876087/48597528-3ac42000-e999-11e8-988e-db4ece1a97d1.png)\r\n\r\nadd success and refresh page:\r\n![after_refresh](https://user-images.githubusercontent.com/5876087/48597540-47487880-e999-11e8-86f6-9c9c9c6e3aee.png)\r\n\r\nthe db record:\r\n![db_record](https://user-images.githubusercontent.com/5876087/48597549-50394a00-e999-11e8-81f9-0dc0a1ea85df.png)\r\n \r\n### Expected Results\r\n\r\nThere was originally a configuration item,after adding an entry, there should be two configuration items.\r\n\r\n### Actual Outcome\r\n\r\nIn fact, only new configuration items are added after the old ones are replaced.\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 3.0.0\r\n  - Operating System:     unknown , like heroku PaaS platform,sina cloud SAE service\r\n  - Hardware:             unknown\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): remote, sina SAE\r\n\r\n- **Database**\r\n  - PostgreSQL version: 10.0\r\n  - Storage engine:  S3\r\n  - Hardware:       unknown\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc):remote ,Aliyun RDS\r\n\r\n### Logs/Trace\r\n\r\n<!--- Include all relevant logs. You can turn on additional logging by configuring VERBOSE=1 in your environment. --->\r\n"},{"labels":["bug"],"text":"### Issue Description\r\n\r\nrequest:\r\n\r\n> users:  RELATION <_USER> and this relation has no rows\r\n\r\n```\r\nwhere: {users: {$exists: false, $ne: {__type: \"Pointer\", className: \"_User\", objectId: \"hXqhAUjRz2\"}}}\r\n```\r\nresponse:\r\n\r\n```\r\n{\"code\":119,\"error\":\"Postgres doesn't support this query type yet {\\\"$nin\\\":[]}\"}\r\n```"},{"labels":["bug"],"text":"### Issue Description\r\n\r\nWhen using the new aggregate options with a match pipeline on a Date value, it silently fails with empty result.\r\nBy the way, to match a `createdAt` or a `updatedAt` field, we have to use the db form `_created_at` / `_updated_at`, and I'm not sure it's on purpose. Either way, we can't query them with the standard `$lt` or `$gt` operator.\r\n\r\n### Steps to reproduce\r\n\r\n`query.aggregate([{match: {_created_at:{$lt:new Date()}}}])` always returns `[]`\r\nwhereas\r\n`query.aggregate([{match: {_created_at:{$exists:true}}}])` works perfectly.\r\n\r\n#### Expected Results\r\n\r\nBoth results should be the same\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 2.7.4\r\n  - Localhost or remote server? Localhost\r\n\r\n- **Database**\r\n  - MongoDB version: 3.4\r\n  - Storage engine: WiredTiger\r\n  - Localhost or remote server? Mongo Atlas\r\n\r\n"},{"labels":["bug"],"text":"### Issue Description\r\n\r\nRunning purge on a schema with no data rows fails\r\n\r\n### Steps to reproduce\r\n\r\nRun the following code for some schema. If there are no rows in the database it will fail\r\n\r\n```\r\nconst schema = new Parse.Schema('Machine');\r\nschema.purge();\r\n```\r\n\r\n#### Expected Results\r\n\r\nIf the table has no rows then nothing should happen\r\n\r\n#### Actual Outcome\r\n\r\nWhere my script that runs the code above gives an unhandledPromiseRejectionWarning.\r\n\r\nMy server gives the following error:\r\n\r\n```\r\n[1] error: Error generating response. ParseError { code: 101, message: 'Object not found.' } code=101, message=Object not found.\r\n[1] error: Object not found. code=101, message=Object not found.\r\n```\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 1.11.1\r\n  - Operating System:     Windows 10\r\n  - Localhost\r\n\r\n- **Database**\r\n  - postgreSQL 9.6.5\r\n\r\n### Logs/Trace\r\n\r\nSee above\r\n"},{"labels":["bug"],"text":"when query.greaterThan(\"key\", 0); it would cause this error\r\n\r\nversion:2.7.4\r\npostgresql:9.5"},{"labels":["bug"],"text":"### Issue Description\r\n\r\nUsing aggregate works without afterFind set on class. When afterFind is set, internal server error. Even trying to pass response.success(request.objects); straight away still breaks.\r\n\r\n### Steps to reproduce\r\n\r\nPerform an aggregate such as .distinct on a class with Parse.Cloud.afterFind trigger.\r\n\r\n#### Expected Results\r\n\r\nAggregate to ignore after find as objects are not parse.objects; or values to be passed in request.objects.\r\n\r\n#### Actual Outcome\r\n\r\nInternal server error. Cannot create property 'className' on string.\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version: 2.7.2\r\n  - Localhost or remote server: localhost\r\n\r\n- **Database**\r\n  - MongoDB version: 3.2\r\n  - Localhost or remote server: localhost"},{"labels":["bug"],"text":"### Issue Description\r\n\r\nParse-Server responds with a HTTP 500 when using a `distinct query` on the _User table using a field which is set to `null` on one or more objects.\r\n\r\n### Steps to reproduce\r\n\r\nSetup a new parse-server instance and add a field of the type `String` to the table. Create a new user and set the newly created field to `null` for the new user. Use the new [`distinct query`](http://docs.parseplatform.org/rest/guide/#distinct-queries) feature on that field.\r\n\r\n#### Expected Results\r\n\r\nThe server should return an array with all distinct strings \r\n\r\n#### Actual Outcome\r\n\r\nThe server responds with a HTTP 500\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version: 2.7.2\r\n  - Operating System: Amazon Linux 2017.09 v4.4.4\r\n  - Hardware: EC2 t2.micro\r\n  - Localhost or remote server: AWS\r\n\r\n- **Database**\r\n  - MongoDB version: 3.2.13\r\n  - Storage engine: wiredTiger\r\n  - Hardware: EC2 t2.micro\r\n  - Localhost or remote server: AWS\r\n\r\n### Logs/Trace\r\n\r\n```\r\nUncaught internal server error. TypeError: Cannot convert undefined or null to object\r\n    at cleanResultOfSensitiveUserInfo (/var/app/current/node_modules/parse-server/lib/RestQuery.js:422:10)\r\n    at config.database.find.then.results (/var/app/current/node_modules/parse-server/lib/RestQuery.js:499:9)\r\n    at process._tickDomainCallback (internal/process/next_tick.js:135:7) TypeError: Cannot convert undefined or null to object\r\n    at cleanResultOfSensitiveUserInfo (/var/app/current/node_modules/parse-server/lib/RestQuery.js:422:10)\r\n    at config.database.find.then.results (/var/app/current/node_modules/parse-server/lib/RestQuery.js:499:9)\r\n    at process._tickDomainCallback (internal/process/next_tick.js:135:7)\r\n```\r\n"},{"labels":["bug",null,null,null],"text":"### Issue Description\r\n\r\nIn SchemaCache, there is the function setOneSchema for setting individual schemas of classes in the cache. this function is never utilized and there is never individual schemas accumulating in the cache.\r\nhowever, getOneSchema is being used and it always results in one miss before the MAIN_SCHEMA is looked up for that class, because the schema for that class would never have been set before.\r\n\r\n### Steps to reproduce\r\n\r\n- set enableSingleSchemaCache to true (same could happen without this option set to true, but my setup is like this)\r\n- use Redis adapter for easier investigation, or console.log()'s for the LRU cache might work as well. if used redis, use redis-cli with monitor option to check real-time logs\r\n- send some requests from the client quickly (because there are ttl's for keys :) ) to make schema caching and lookup work, and produce some logs.\r\n- check redis-cli or default console.log()'s for caching logs.\r\n\r\n#### Expected Results\r\n\r\nAfter a lookup for one class misses, schema info related to that class would be inserted to the cache so that consecutive lookups won't miss.\r\n\r\n#### Actual Outcome\r\n\r\nno inserts regarding single class schemas are done, however lookups are still being done, resulting in many misses and useless round trips.\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 2.6.5\r\n  - Operating System:     Amazon Linux\r\n  - Hardware:             t2.nano (512 MB RAM, 1 CPU, EBS Storage)\r\n  - Localhost or remote server? : AWS\r\n\r\n### Logs/Trace\r\n\r\nFollowing is some logs from redis-cli, I traced these logs for minutes and no sets (psetex) are done for individual schemas\r\n\r\n1517286114.528181 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.529996 [] \"get\" \"xxbackend:__SCHEMAPhoto\"\r\n1517286114.530845 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.790274 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.791514 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.794785 [] \"get\" \"xxbackend:__SCHEMAPost\"\r\n1517286114.795592 [] \"get\" \"xxbackend:__SCHEMALike\"\r\n1517286114.796424 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.797531 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.801867 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.803162 [] \"get\" \"xxbackend:__SCHEMAPost\"\r\n1517286114.804042 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.806571 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.808008 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.809425 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.811327 [] \"get\" \"xxbackend:__SCHEMAPost\"\r\n1517286114.812166 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.817408 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.818600 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.819734 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.820944 [] \"get\" \"xxbackend:__SCHEMAPost\"\r\n1517286114.821744 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.822866 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.824021 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.825780 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.826933 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.828031 [] \"get\" \"xxbackend:__SCHEMAView\"\r\n1517286114.828851 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.829946 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n1517286114.831018 [] \"get\" \"xxbackend:__SCHEMAPost\"\r\n1517286114.831819 [] \"get\" \"xxbackend:__SCHEMA__MAIN_SCHEMA\"\r\n\r\n### Suggested solution\r\n\r\nEither SchemaCache should not do lookups for individual classes and directly request main schema, or after missed lookups of individual class schemas, inserts should be done.\r\n\r\n"},{"labels":["bug",null],"text":"### Issue Description\r\n\r\nMy collection has an advanced CLP rule that prevents the client from creating a field. And some legacy clients are still sending unused fields that I want to ignore and removed them from the collection.\r\n\r\nEven calling `req.object.unset('undesiredField')` I still receive the CLP error \r\n```\r\n{\r\n\t\"code\": 119,\r\n\t\"error\": \"Permission denied for action addField on class Invoice.\"\r\n}\r\n```\r\nI disable the CLP for this test and the field is *not* created anyway.\r\n\r\n### Steps to reproduce\r\n\r\n- Remove the `add field` permission at the advanced class level permission from the collection\r\n![parse_dashboard](https://user-images.githubusercontent.com/8147068/35360430-841ff816-0112-11e8-8824-2840f9cc3cb1.png)\r\n- Create the field `desired` as string\r\n- Create this `beforeSave` hook:\r\n```js\r\nParse.Cloud.beforeSave('MyCollection', (request, response) => {\r\n  if (request.object.get('undesiredField')) {\r\n    request.object.unset('undesiredField')\r\n  }\r\n  response.success()\r\n})\r\n```\r\n- Post a new object *without masterkey* with the following json:\r\n```json\r\n{\r\n    \"desired\": \"This value should be kept\",\r\n    \"undesiredField\": \"This value should be IGNORED\"\r\n}\r\n``` \r\n\r\n#### Expected Results\r\n\r\nThe object is expected to be created without the `undesiredField`\r\n\r\n#### Actual Outcome\r\n\r\nIt returns the error `{\r\n\t\"code\": 119,\r\n\t\"error\": \"Permission denied for action addField on class Invoice.\"\r\n}`\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version: 2.2.25 (I tested with 2.3.x, 2.4.x, 2.5.x and 2.6.x)\r\n  - Operating System:     MacOS Sierra AND Heroku dyno\r\n  - Hardware:             MBP 15\" 2017 AND Heroku dyno\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): Tested on Heroku and localhost\r\n\r\n- **Database**\r\n  - MongoDB version: 3.2.17\r\n  - Storage engine:  WiredTiger\r\n  - Hardware:        Shared cluster on mlab (AWS)\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): mlab\r\n"},{"labels":["bug",null,null,null],"text":"### Issue Description\r\n\r\nWhen a user has verified their email, and then change it, the field emailVerified is still true.\r\n\r\n### Steps to reproduce\r\n\r\nOne user set their email. `user.email = aaa@aaa.aa;`\r\nThey clicks on the link to verify the email. `user.emailVerified = true;`\r\nThey changes their email. `user.email = bbb@bbb.bb; user.emailVerified = true;`\r\n\r\n#### Expected Results\r\n\r\nI was expected emailVerified to become false again.\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version 2.7.1\r\n\r\n### How to handle it\r\n\r\nIt might not be required by everyone, so I wanted to solve that issue inside the `beforeSave` of `Parse.User`, something like:\r\n\r\n```\r\nif (request.object.dirty('email') && !(request.original && request.original.get('email') === request.object.get('email'))) {\r\n    request.object.set('emailVerified', false)\r\n}\r\n```\r\n\r\nUnfortunately, the `user.emailVerified` field is protected, you need the masterKey to update that field. Maybe I have to call `user.save({ emailVerified: false }, { useMasterKey: true })` inside user beforeSave but I don't like the idea (infinite loop). Maybe we could only require masterKey for setting emailVerified to true?\r\n\r\nThanks!"},{"labels":["bug",null,null],"text":"We have deployed a [Parse Server on Azure](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/Microsoft.ParseServer)\r\n\r\n**Problem:** \r\nAdding User that is not assigned an email returns \"Account already exists for this email address.\" error.\r\n\r\n**How this occurred:**\r\nThis occurred when adding a new user to Parse.  We tried adding users through the parse dashboard, through an android application (given username and password) and though a Facebook login.  Each time no email is entered and is left as undefined.  We are given this error: \"Account already exists for this email address.\" in the parse dashboard log and in the Azure server output.\r\n\r\nWhen using back4app, adding users through the dashboard was no problem if the duplicate email was undefined.  I have also checked the server code for back4app and the parse-server code that was deployed on Azure.  There seem to be no differences that would cause this error."},{"labels":["bug",null],"text":"### Issue Description\r\n\r\nUnder Windows, when running the test suite for parse-server, many of the tests will fail with the following error message:\r\n```\r\nFailed: There were open connections to the server left after the test finished\r\n```\r\n\r\nHowever, running the exact same test suite under Linux (in my case, I tried it on Debian amd64), the tests pass fine.\r\n\r\nWhen running all of the tests, about 60% of them will fail with this error message. I'll explain my theory why below but this is not a small issue by any means.\r\n\r\n### Steps to reproduce\r\n\r\n1. Clone parse-server repository.\r\n2. Run `npm install` in the directory.\r\n3. Run `npm run test:win` for Windows and the errors should appear.\r\n4. If you are testing on Linux, you do `npm run test` or `npm test`/\r\n\r\n#### Expected Results\r\n\r\nThis error message occurs with many files so I just picked one test file where this occurred and debugged that. The first test file ran is `AccountLockoutPolicy.spec.js` and the very first test `account should not be locked even after failed login attempts if account lockout policy is not set` fails on Windows.\r\n\r\nFor either Linux or Windows, the expectation is for the tests to pass. Here is the output for Linux when testing just the `AccountLockoutPolicy.spec.js` test file. Note that I stop it halfway through because I am focusing on that first test.\r\n```\r\nJasmine started\r\n1\r\n2\r\n3\r\nOpen connection127.0.0.1:45278\r\nClose connection127.0.0.1:45278\r\n4\r\nOpen connection127.0.0.1:45280\r\nClose connection127.0.0.1:45280\r\n5\r\nOpen connection127.0.0.1:45284\r\nClose connection127.0.0.1:45284\r\n6\r\nOpen connection127.0.0.1:45286\r\nClose connection127.0.0.1:45286\r\n6.1\r\n6.2\r\nOpen connection127.0.0.1:45288\r\nClose connection127.0.0.1:45288\r\n\r\n  Account Lockout Policy:\r\n    ✓ account should not be locked even after failed login attempts if account lockout policy is not set\r\n    ✓ throw error if duration is set to an invalid number\r\n    ✓ throw error if threshold is set to an invalid number\r\n    ✓ throw error if threshold is < 1\r\n    ✓ throw error if threshold is > 999\r\n    ✓ throw error if duration is <= 0\r\n    ✓ throw error if duration is > 99999\r\nOpen connection127.0.0.1:45290\r\nClose connection127.0.0.1:45290\r\nOpen connection127.0.0.1:45296\r\nClose connection127.0.0.1:45296\r\nOpen connection127.0.0.1:45298\r\nClose connection127.0.0.1:45298\r\nOpen connection127.0.0.1:45300\r\nClose connection127.0.0.1:45300\r\nOpen connection127.0.0.1:45302\r\nClose connection127.0.0.1:45302\r\n    ✓ lock account if failed login attempts are above threshold\r\nOpen connection127.0.0.1:45304\r\nClose connection127.0.0.1:45304\r\nOpen connection127.0.0.1:45306\r\n^C\r\n```\r\n\r\nOn Windows, here is the result running the tests on the same file:\r\n```\r\nJasmine started\r\n1\r\n2\r\n3\r\nOpen connection127.0.0.1:5331\r\n4\r\nClose connection127.0.0.1:5331\r\nOpen connection127.0.0.1:5332\r\n5\r\nClose connection127.0.0.1:5332\r\nOpen connection127.0.0.1:5333\r\n6\r\nClose connection127.0.0.1:5333\r\nOpen connection127.0.0.1:5334\r\n6.1\r\n6.2\r\nClose connection127.0.0.1:5334\r\nOpen connection127.0.0.1:5335\r\n\r\n  Account Lockout Policy:\r\n    × account should not be locked even after failed login attempts if account lockout policy is not set\r\n      - Failed: There were open connections to the server left after the test finished\r\nClose connection127.0.0.1:5335\r\nTerminate batch job (Y/N)? Y\r\n```\r\n\r\n### What I think the issue is\r\nWhen digging into the code to diagnose this issue, I started with the error message and what it indicates. In `spec/helper.js`, lines 198-201 are the following:\r\n```\r\n  const afterLogOut = () => {\r\n    console.log(\"afterLogOut: 1\");\r\n    if (Object.keys(openConnections).length > 0) {\r\n      fail('There were open connections to the server left after the test finished');\r\n    }\r\n```\r\n\r\nSo there is an array of open connections and if that is not empty at the end of the test, then something is still running or having issues. So, the next step was I found where openConnections was changed. Lines 143-150 in the same helper file are:\r\n```\r\n      server = parseServer.server;\r\n      server.on('connection', connection => {\r\n        const key = `${connection.remoteAddress}:${connection.remotePort}`;\r\n        openConnections[key] = connection;\r\n        console.log(\"Open connection\" + key);\r\n        console.trace(); \r\n        connection.on('close', () => { console.log(\"Close connection\" + key); console.trace(); delete openConnections[key]; });\r\n      });\r\n```\r\n\r\nIf you take a look at the logs given above, for Linux the connection is opened and closed almost immediately which is what you expect for HTTP requests. However, Windows has a bit of a lag and this is what causes the error. When the open connections are checked, there is still an open connection because it has not been closed yet.\r\n\r\n### Sample test case\r\nI was not sure if the error was related to Parse or a bug in XMLHttpRequest so I created a test script to determine if the same thing occurs with XMLHttpRequest.\r\n\r\nHere is my test script where the same issue still occurs:\r\n```\r\nvar XMLHttpRequest = require('xmlhttprequest').XMLHttpRequest,\r\n\texpress = require('express'),\r\n\thttp = require('http'),\r\n\tUrl = require(\"url\");\r\n\r\nfunction makeRequest (method, url) {\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\tvar handled = false;\r\n\r\n\t\txhr.onreadystatechange = function() {\r\n\t\t\tif (xhr.readyState !== 4 || handled) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\thandled = true;\r\n\t\t\tconsole.log(\"ajax: 1\", xhr.readyState);\r\n\t\t\tresolve(xhr.responseText, xhr.status, xhr);\r\n\t\t\tconsole.log(\"ajax: 2\", xhr.readyState);\r\n\t\t};\r\n\r\n\t\txhr.open(method, url, true);\r\n\t\txhr.send();\r\n\t});\r\n}\r\n\r\nvar app = express();\r\nvar sockets = {};\r\nvar server = app.listen(1337, 'localhost', () => console.log('Example app listening on port 1337!'));\r\n\r\napp.get('/', (req, res) => res.send('Hello World!'));\r\n\r\nserver.on('connection', (socket) => {\r\n\tconst socketId = socket.remoteAddress + ':' + socket.remotePort;\r\n\tsockets[socketId] = socket;\r\n\tconsole.log(\"Open socket\", socketId);\r\n\tsocket.on('close', () => {\r\n\t\tconsole.log(\"Close socket\", socketId);\r\n\t\tdelete sockets[socketId];\r\n\t});\r\n});\r\n\r\n// Example:\r\nmakeRequest('GET', 'http://localhost:1337').then(function (response, status, hdr) {\r\n\tconsole.log(\"If the connection is not closed here, there is probably an issue...\");\r\n\tconsole.log(response, status, hdr);\r\n}).catch(function (e) {\r\n\tconsole.error('Augh, there was an error!', e);\r\n}).then(function() {\r\n\treturn new Promise((resolve) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tconsole.log(\"\\nFinished. Closing server\");\r\n\t\t\tserver.close();\r\n\t\t\tresolve();\r\n\t\t}, 3000);\r\n\t});\r\n});\r\n```\r\n\r\nOn Linux, the connection is opened and closed almost instantly but there is a lag once again in Windows. \r\n\r\n### Solution\r\nWhat would be the best way to solve this? We could put a delay in checking the open connections for Windows? Or is there another solution I am missing?\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 2.6.5\r\n  - Operating System:     Windows 10 x64\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): Localhost"},{"labels":["bug",null,null],"text":"\r\nHello,\r\n\r\nIs there a REST endpoint for resending verification of emails?  I don't see anything in the documentation.\r\n\r\nThanks."},{"labels":["bug"],"text":"Is it possible to modify the way to generate objectId for custom class instead of the auto generate 10 pseudo random 10 character string? Is it possible to have more than 10 characters objectId? thanks"},{"labels":["bug"],"text":"### Issue Description\r\n\r\nWhen upgrading parse-server it's possible to have a situation where, if the default Schemas have been changed in parse-server, and the database is **postgres**, the underlying database is not updated.\r\n\r\n### Steps to reproduce\r\n\r\nReproducing with a change in `expiration_interval` for `_PushStatus`.\r\n\r\n1. Start parse-server **2.6.4** using a fresh db in postgres **9.5**. A garbage push configuration will do just fine for testing.\r\n```\r\npush: {\r\n    android: {\r\n      senderId: \"blank-sender-id\",\r\n      apiKey: \"not-a-real-api-key\"\r\n    }\r\n}\r\n```\r\n2. Attempt to send a push using your preferred method. Can use cloud code to do this as well.\r\n```js\r\nParse.Push.send({\r\n  where: {\r\n    deviceType: 'ios'\r\n  },\r\n  data: {\r\n    badge: 'Increment',\r\n  \talert: 'Hello world!'\r\n  }\r\n});\r\n```\r\n3. Push should complete, logs should indicate nothing afoot.\r\n4. Stop parse-server and upgrade to **2.6.5**.\r\n5. Restart parse-server, connecting to the still running **postgres** instance.\r\n6. Attempt to send a push again as stated in step 2.\r\n7. Observe the following in the log entries (response to push may hang as well)\r\n>...\"message\":\"_PushStatus undefined: error while sending push\",\"stack\":\"error: column \\\"expiration_interval\\\" of relation \\\"_PushStatus\\\" does not exist...\r\n\r\n#### Expected Results\r\n\r\nFollowing observed behavior when using mongodb the underlying schema should be updated when new default fields are available but not present.\r\n\r\n#### Actual Outcome\r\n\r\nThe underlying schema is not updated when new default fields are available for parse-server's reserved classes.\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version: **2.6.4** & **2.6.5**\r\n  - Operating System: OSX\r\n  - localhost\r\n\r\n- **Database**\r\n  - MongoDB version:  **3.4.4**\r\n  - Postgres version: **9.5**\r\n  - localhost\r\n\r\n### Logs/Trace\r\n\r\nAnnotated verbose logs entries below. Tests were performed from the php sdk, version **1.3.0**.\r\n\r\n**2.6.4/ initial push request**\r\n{\"method\":\"POST\",\"url\":\"/parse/push\",\"headers\":{\"host\":\"localhost:1337\",\"accept\":\"*/*\",\"x-parse-application-id\":\"app-id-here\",\"x-parse-client-version\":\"php1.3.0\",\"x-parse-master-key\":\"master-key-here\",\"content-type\":\"application/json\",\"content-length\":\"51\"},\"body\":{\"channels\":[\"\"],\"data\":{\"alert\":\"sample message\"}},\"level\":\"verbose\",\"message\":\"REQUEST for [POST] /parse/push: {\\n  \\\"channels\\\": [\\n    \\\"\\\"\\n  ],\\n  \\\"data\\\": {\\n    \\\"alert\\\": \\\"sample message\\\"\\n  }\\n}\",\"timestamp\":\"2017-11-11T04:59:08.955Z\"}\r\n\r\n**2.6.4/ response to push request**\r\n{\"result\":{\"headers\":{\"X-Parse-Push-Status-Id\":\"W7w4WdXQix\"},\"response\":{\"result\":true}},\"level\":\"verbose\",\"message\":\"RESPONSE from [POST] /parse/push: {\\n  \\\"headers\\\": {\\n    \\\"X-Parse-Push-Status-Id\\\": \\\"W7w4WdXQix\\\"\\n  },\\n  \\\"response\\\": {\\n    \\\"result\\\": true\\n  }\\n}\",\"timestamp\":\"2017-11-11T04:59:08.973Z\"}\r\n\r\n**upgraded to 2.6.5/ initial push request**\r\n{\"method\":\"POST\",\"url\":\"/parse/push\",\"headers\":{\"host\":\"localhost:1337\",\"accept\":\"*/*\",\"x-parse-application-id\":\"app-id-here\",\"x-parse-client-version\":\"php1.3.0\",\"x-parse-master-key\":\"master-key-here\",\"content-type\":\"application/json\",\"content-length\":\"51\"},\"body\":{\"channels\":[\"\"],\"data\":{\"alert\":\"sample message\"}},\"level\":\"verbose\",\"message\":\"REQUEST for [POST] /parse/push: {\\n  \\\"channels\\\": [\\n    \\\"\\\"\\n  ],\\n  \\\"data\\\": {\\n    \\\"alert\\\": \\\"sample message\\\"\\n  }\\n}\",\"timestamp\":\"2017-11-11T05:13:23.205Z\"}\r\n\r\n**upgraded to 2.6.5/ response to push request**\r\n{\"message\":\"_PushStatus undefined: error while sending push\",\"stack\":\"error: column \\\"expiration_interval\\\" of relation \\\"_PushStatus\\\" does not exist\\n    at Connection.parseE (/Users/Bfriedman/Documents/parse-server-test/node_modules/pg/lib/connection.js:546:11)\\n    at Connection.parseMessage (/Users/Bfriedman/Documents/parse-server-test/node_modules/pg/lib/connection.js:371:19)\\n    at Socket.<anonymous> (/Users/Bfriedman/Documents/parse-server-test/node_modules/pg/lib/connection.js:114:22)\\n    at emitOne (events.js:96:13)\\n    at Socket.emit (events.js:188:7)\\n    at readableAddChunk (_stream_readable.js:176:18)\\n    at Socket.Readable.push (_stream_readable.js:134:10)\\n    at TCP.onread (net.js:547:20)\",\"name\":\"error\",\"length\":135,\"severity\":\"ERROR\",\"code\":\"42703\",\"position\":\"83\",\"file\":\"parse_target.c\",\"line\":\"954\",\"routine\":\"checkInsertTargets\",\"level\":\"error\",\"timestamp\":\"2017-11-11T05:13:23.225Z\"}"},{"labels":["bug"],"text":"### Issue Description\r\n\r\nWe are finding that the REST API sessions GET request returns incorrect sessionToken for the numerous sessions associated with the user.\r\n\r\nIn all JSON objects, the sessionToken field is displayed as the same current sessionToken value.\r\n\r\n### Steps to reproduce\r\n\r\n> GET /sessions HTTP/1.1\r\n> Host: myapi.herokuapp.com\r\n> X-Parse-Application-Id: myapp\r\n> X-Parse-Session-Token: r:ea246c1fae8f5d6c152d2d9ec2168f68\r\n\r\nreturns the following JSON:\r\n\r\n```\r\n{\r\n    \"results\": [\r\n        {\r\n            \"objectId\": \"cxNm3d8EeS\",\r\n            \"sessionToken\": \"r:ea246c1fae8f5d6c152d2d9ec2168f68\",\r\n            \"user\": {\r\n                \"__type\": \"Pointer\",\r\n                \"className\": \"_User\",\r\n                \"objectId\": \"lUOfchujyU\"\r\n            },\r\n            \"createdWith\": {\r\n                \"action\": \"signup\",\r\n                \"authProvider\": \"password\"\r\n            },\r\n            \"restricted\": false,\r\n            \"installationId\": \"c0555fc0-9f50-d9c8-d499-6a413d4a6506\",\r\n            \"expiresAt\": {\r\n                \"__type\": \"Date\",\r\n                \"iso\": \"2017-09-30T21:04:02.258Z\"\r\n            },\r\n            \"createdAt\": \"2017-07-30T21:04:02.258Z\",\r\n            \"updatedAt\": \"2017-07-30T21:04:02.258Z\"\r\n        },\r\n        {\r\n            \"objectId\": \"butKoFyNou\",\r\n            \"sessionToken\": \"r:ea246c1fae8f5d6c152d2d9ec2168f68\",\r\n            \"user\": {\r\n                \"__type\": \"Pointer\",\r\n                \"className\": \"_User\",\r\n                \"objectId\": \"lUOfchujyU\"\r\n            },\r\n            \"createdWith\": {\r\n                \"action\": \"login\",\r\n                \"authProvider\": \"password\"\r\n            },\r\n            \"restricted\": false,\r\n            \"expiresAt\": {\r\n                \"__type\": \"Date\",\r\n                \"iso\": \"2018-07-30T21:08:20.977Z\"\r\n            },\r\n            \"createdAt\": \"2017-07-30T21:08:20.978Z\",\r\n            \"updatedAt\": \"2017-07-30T21:08:20.978Z\"\r\n        },\r\n        {\r\n            \"objectId\": \"WqAN40t0r1\",\r\n            \"sessionToken\": \"r:ea246c1fae8f5d6c152d2d9ec2168f68\",\r\n            \"user\": {\r\n                \"__type\": \"Pointer\",\r\n                \"className\": \"_User\",\r\n                \"objectId\": \"lUOfchujyU\"\r\n            },\r\n            \"createdWith\": {\r\n                \"action\": \"login\",\r\n                \"authProvider\": \"password\"\r\n            },\r\n            \"restricted\": false,\r\n            \"expiresAt\": {\r\n                \"__type\": \"Date\",\r\n                \"iso\": \"2018-08-13T14:37:35.756Z\"\r\n            },\r\n            \"createdAt\": \"2017-08-13T14:37:35.757Z\",\r\n            \"updatedAt\": \"2017-08-13T14:37:35.757Z\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n#### Expected Results\r\n\r\nThe session token in all but the top result is different on the database.\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 2.6.5\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): Heroku"},{"labels":["bug",null],"text":"### Issue Description\r\n\r\npreventLoginWithUnverifiedEmail and verifyUserEmails flags set to true together do not prevent auto login after signup which bypasses the security measures\r\n\r\n### Steps to reproduce\r\n\r\nCreate a parse server application on local/remote server. set options preventLoginWithUnverifiedEmail and verifyUserEmails options to true and supply a working email adapter.\r\nCreate a test client and send a valid signup request. Check sessions to see if a session is created for the user\r\n\r\n#### Expected Results\r\n\r\nExpected is that the user is not ever allowed to login before verifying the email. Hence, a session should not be created for the user until emailVerified field of the user is set true.\r\n\r\n#### Actual Outcome\r\n\r\nFor the first time, the user is logged in automatically to the system after signup. Consecutive manual logins fail with an error message indicating the lack of email verification, as expected.\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 2.6.0\r\n  - Operating System:     Amazon Linux x86\r\n  - Hardware:  t2.small test server, 1vCPU 2GB ram\r\n  - Localhost or remote server? : AWS Elastic Beanstalk\r\n\r\n- **Database**\r\n  - MongoDB version: 3.4.7\r\n  - Storage engine:  WiredTiger\r\n  - Hardware: test database server with shared ram + 512mb db storage\r\n  - Localhost or remote server? : MongoDB Atlas\r\n\r\n### Logs/Trace\r\n\r\n"},{"labels":["bug"],"text":"### Issue Description\r\n\r\nIf afterSave hook throws an exception, it is reported to the user that saving the object failed, although the object **is** saved.\r\n\r\n### Steps to reproduce\r\n\r\n```\r\nParse.Cloud.afterSave(\"MyObject\", function (request) {\r\n\r\n\tthrow \"Exception\";\r\n       //client gets the error reported although the MyObject instance IS saved\r\n\r\n});\r\n```\r\n\r\n#### Expected Results\r\n\r\nFrom [docs](http://docs.parseplatform.org/cloudcode/guide/#aftersave-triggers): \"The client will receive a successful response to the save request after the handler terminates, regardless of how it terminates.\"\r\n\r\n#### Actual Outcome\r\n\r\nThe client receives an error response.\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 2.5.3\r\n  - Operating System:     WINDOWS\r\n  - Localhost or remote server? LOCAL\r\n\r\n- **Database**\r\n  - MongoDB: MLAB.COM\r\n\r\n### Logs/Trace\r\n\r\n```\r\ninfo: beforeSave triggered for MyObject for user wFyTH5Gb0I:\r\nInput: { .. some data .. }\r\nResult: { .. some data .. }\r\nerror: Error generating response. 'Exception' error=Exception\r\nerror: Uncaught internal server error. Exception\r\nException\r\n```\r\n\r\nCould someone please test that the issue is not just in my environment? Thanks!"},{"labels":["bug",null],"text":"### Issue Description\r\n\r\nLooks like the documentation from here:\r\n\r\nhttp://docs.parseplatform.org/rest/guide/#deleting-sessions\r\n\r\nThat says \"You can only delete other sessions that belong to the same user.\" is false.  If a session object id is leaked, it can be deleted with a request that only has the X-Parse-Application-Id header.\r\n\r\n### Steps to reproduce\r\n\r\n1) Create an anonymous user with a request like this:\r\n\r\n```\r\nPOST /parse/users/ HTTP/1.1\r\nHost: localhost:1337\r\nContent-Type: application/json\r\nX-Parse-Application-Id: myAppId\r\nCache-Control: no-cache\r\n\r\n{\r\n    \"authData\": {\r\n        \"anonymous\": {\r\n            \"id\": \"8ba115f2-db2f-4de9-a976-e3cfd18d8be1\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n2) Note the sessionToken in the response\r\n3) Look up the session objectId with a request like this:\r\n\r\n```\r\nGET /parse/sessions/me HTTP/1.1\r\nHost: localhost:1337\r\nX-Parse-Application-Id: myAppId\r\nX-Parse-Session-Token: r:2e43f46b20a3c6420043d3299d7dcead\r\nContent-Type: application/json\r\nCache-Control: no-cache\r\n```\r\n\r\n4) Note the objectId\r\n5) Try to delete the session object with an unauthenticated request like this\r\n```\r\nDELETE /parse/sessions/VapNXYViLW HTTP/1.1\r\nHost: localhost:1337\r\nX-Parse-Application-Id: myAppId\r\nCache-Control: no-cache\r\n\r\n```\r\n#### Expected Results\r\n\r\nYou should have to prove you are a given user (with a session token) before you're allowed to delete sessions of that user.\r\n\r\n#### Actual Outcome\r\n\r\nThe session is deleted\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version: commit hash 9ad8697c7aaa303eccb0ce4625c180bbd166d321\r\n  - Operating System:     Windows\r\n  - Localhost or remote server? localhost\r\n"},{"labels":["bug",null],"text":"### Issue Description\r\nI created a query to return results around a GeoPoint and it works perfect except that live queries crashes with the same query when a new client connects to it.\r\n\r\n### Steps to reproduce\r\n```\r\nconst userLoc = new Parse.GeoPoint({ latitude, longitude })\r\nconst Park = Parse.Object.extend('Park')\r\nconst query = new Parse.Query(Park)\r\nquery.near('location', userLoc)\r\nconst parks = await query.find() // this returns the results perfectly\r\n// ------------------------ \r\nconst suscription = query.subscribe()\r\nsuscription.on('update', console.log) // this works only if is the first client connected that matches the query. Once a second one connects, the parse-server logs returns the following:\r\n```\r\n#### Expected Results\r\n\r\nMultiple clients suscribes to the same query without issues\r\n\r\n#### Actual Outcome\r\n\r\nServer crashes when more than one client query Is matched and subscribed. This happens **ONLY** if the `query.near` is added. If no GeoPoint added to the query, it works perfect.\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version: 2.4.0\r\n  - Localhost or remote server? Heroku. On Local it happens too.\r\n\r\n- **Database**\r\n  - MongoDB version:  3.2.13\r\n  - Localhost or remote server? mLab\r\n\r\n### Logs/Trace\r\n```\r\n2017-05-23T09:27:30.668557+00:00 app[web.1]: TypeError: Cannot read property 'latitude' of undefined\r\n2017-05-23T09:27:30.668559+00:00 app[web.1]:     at ParseGeoPoint.value (/app/node_modules/parse-server/node_modules/parse/lib/node/ParseGeoPoint.js:115:26)\r\n2017-05-23T09:27:30.668559+00:00 app[web.1]:     at matchesKeyConstraints (/app/node_modules/parse-server/lib/LiveQuery/QueryTools.js:263:34)\r\n2017-05-23T09:27:30.668560+00:00 app[web.1]:     at matchesQuery (/app/node_modules/parse-server/lib/LiveQuery/QueryTools.js:111:10)\r\n2017-05-23T09:27:30.668561+00:00 app[web.1]:     at _loop3 (/app/node_modules/parse-server/lib/LiveQuery/ParseLiveQueryServer.js:314:53)\r\n2017-05-23T09:27:30.668560+00:00 app[web.1]:     at ParseLiveQueryServer._matchesSubscription (/app/node_modules/parse-server/lib/LiveQuery/ParseLiveQueryServer.js:546:43)\r\n2017-05-23T09:27:30.668561+00:00 app[web.1]:     at ParseLiveQueryServer._onAfterSave (/app/node_modules/parse-server/lib/LiveQuery/ParseLiveQueryServer.js:425:11)\r\n2017-05-23T09:27:30.668561+00:00 app[web.1]:     at Subscriber.<anonymous> (/app/node_modules/parse-server/lib/LiveQuery/ParseLiveQueryServer.js:123:15)\r\n2017-05-23T09:27:30.668564+00:00 app[web.1]:     at emitTwo (events.js:106:13)\r\n2017-05-23T09:27:30.668564+00:00 app[web.1]:     at Subscriber.emit (events.js:194:7)\r\n2017-05-23T09:27:30.668565+00:00 app[web.1]:     at EventEmitter.handler (/app/node_modules/parse-server/lib/Adapters/PubSub/EventEmitterPubSub.js:60:16)\r\n```\r\n\r\nMany thanks!! \r\n\r\n"},{"labels":["bug",null],"text":"### Issue Description\r\n\r\nWhen making a push, the installation query `{ 'badge': { '$lt': 2 } }` should always return the same installations, regardless of whether the push is set to increment the badge value or not.\r\n\r\nUsing $gt seems to work fine.\r\n\r\n### Steps to reproduce\r\n\r\nAdd the following test to spec/PushController.spec.js\r\nIt should pass, but does not.\r\n\r\n```\r\nit('should support lt operators when incrementing badges', (done) => {\r\n    var pushAdapter = {\r\n      send: function (body, installations) {\r\n        return successfulTransmissions(body, installations);\r\n      },\r\n      getValidPushTypes: function () {\r\n        return [\"ios\"];\r\n      }\r\n    }\r\n    var config = new Config(Parse.applicationId);\r\n    var auth = {\r\n      isMaster: true\r\n    }\r\n\r\n    const where = { 'badge': { '$lt': 2 } }\r\n\r\n    const payloadNoIncrement = {\r\n      data: {\r\n        alert: 'Hello World!'\r\n      }\r\n    }\r\n\r\n    const payloadIncrement = {\r\n      data: {\r\n        alert: 'Hello World!',\r\n        badge: 'Increment'\r\n      }\r\n    }\r\n    var pushController = new PushController();\r\n    reconfigureServer({\r\n      push: { adapter: pushAdapter }\r\n    }).then(() => {\r\n      // Installations have badge counts [0,1,2,3,4]\r\n      var installations = [];\r\n      while (installations.length != 5) {\r\n        const installation = new Parse.Object(\"_Installation\");\r\n        installation.set(\"installationId\", \"installation_\" + installations.length);\r\n        installation.set(\"deviceToken\", \"device_token_\" + installations.length)\r\n        installation.set(\"badge\", installations.length);\r\n        installation.set(\"originalBadge\", installations.length);\r\n        installation.set(\"deviceType\", \"ios\");\r\n        installations.push(installation);\r\n      }\r\n      return Parse.Object.saveAll(installations);\r\n    }).then(() => {\r\n      return pushController.sendPush(payloadNoIncrement, where, config, auth);\r\n    }).then(() => {\r\n     // Wait so the push is completed.\r\n     return new Promise((resolve) => { setTimeout(() => { resolve(); }, 1000); });\r\n    }).then(() => {\r\n      return pushController.sendPush(payloadIncrement, where, config, auth);\r\n    }).then(() => {\r\n     // Wait so the push is completed.\r\n     return new Promise((resolve) => { setTimeout(() => { resolve(); }, 1000); });\r\n    }).then(() => {\r\n      const query = new Parse.Query('_PushStatus');\r\n      return query.find({ useMasterKey: true })\r\n    }).then((results) => {\r\n      // There should be 2 pushes.\r\n      expect(results.length).toBe(2);\r\n\r\n      // Each of the pushes should have pushed to 2 devices.\r\n      expect(results[0].get('numSent')).toBe(2);\r\n      expect(results[1].get('numSent')).toBe(2);\r\n      done();\r\n    }).catch((err) => {\r\n      jfail(err);\r\n      done();\r\n    });\r\n  });\r\n```\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 2.4.1 (seems to exist in all versions so far)\r\n  - Operating System:     Travis CI framework\r\n  - Hardware:             Travis CI framework\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): Both\r\n\r\n- **Database**\r\n  - MongoDB version: 3.4.4\r\n  - Storage engine:  Travis CI\r\n  - Hardware:        Travis CI\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): Both\r\n\r\n### Logs/Trace\r\n\r\nThe (erroneous) output is:\r\n  - Expected 1 to be 2.\r\n"},{"labels":["bug",null],"text":"### Issue Description\r\n\r\nUsing `role.getUsers().add(user)` on a master-key-only Role will still add the user. Also produces the same result with a read-only Role. I've tried to replicate this on the User class and a custom class but the ACL's on those classes seem to be working as intended.\r\n\r\n### Steps to reproduce\r\n\r\n`var user = new Parse.User()`\r\n`user.id = <user ID to add to role>`\r\n`var role = <Master-Key-Only Role object>`\r\n`role.getUsers().add(user)`\r\n`role.save()`\r\n\r\n#### Expected Results\r\n\r\nThe user should not be added to the role\r\n\r\n#### Actual Outcome\r\n\r\nThe user is added to the role despite being master key locked\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 2.3.8\r\n  - Operating System:     OS X 10.11.6\r\n  - Hardware:             Macbook Pro 2010\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): Localhost\r\n\r\n- **Database**\r\n  - MongoDB version: 3.2.10\r\n  - Storage engine:  wiredTiger\r\n  - Hardware:        Macbook Pro 2010\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): Localhost"},{"labels":["bug",null],"text":"### Issue Description\r\n\r\nWhen we start the parse server instance (with a LiveQuery server too), queries made from mobile devices, live queries and cloud function calls are working well. But about 1 or 2 days after (sometimes after about 1 hour), the cloud functions and the live query server are not responding (the queries made from the mobile devices are still working and the login / signup / logout actions too). It seems that all that is not relying on the Cloud code is still working, but not the Cloud code itself.\r\nOn the server side, we can see in the logs a lot of “[object Object]” and we are sure this logs aren’t generated by us.\r\n\r\nWe also got a lot of logs like that:\r\n\r\nerror: Failed running cloud function setConversationRead for user xxxxxxxxxx with:\r\n  Input: {\"conversationId\":\"yyyyyyyyyy\"}\r\n  Error: {\"code\":141,\"message\":\"{\\\"code\\\":100,\\\"message\\\":\\\"XMLHttpRequest failed: \\\\\\\"Unable to connect to the Parse API\\\\\\\"\\\"}\"} functionName=setConversationRead, code=141, message={\"code\":100,\"message\":\"XMLHttpRequest failed: \\\"Unable to connect to the Parse API\\\"\"}, conversationId=yyyyyyyyyy, user=xxxxxxxxxx\r\n\r\nerror: Error generating response. ParseError {\r\n  code: 141,\r\n  message: '{\"code\":100,\"message\":\"XMLHttpRequest failed: \\\\\"Unable to connect to the Parse API\\\\\"\"}' } code=141, message={\"code\":100,\"message\":\"XMLHttpRequest failed: \\\"Unable to connect to the Parse API\\\"\"}\r\n[object Object]\r\n\r\nAt this step, we can’t see any cloud function calls logs anymore.\r\nWe have other parse servers working well on the same server, the only difference is that they don’t implement any live query servers.\r\n\r\nAll our cloud code was well tested\r\n\r\n### Steps to reproduce\r\n\r\nWe start the server, and it works well. Then, we don't know why but it stops working about between 1 hour and 2 days after, giving us the logs above.\r\nIt sounds like having the Cloud code process not responding anymore.\r\n\r\n#### Expected Results\r\n\r\nThe Cloud code should never stop working.\r\n\r\n#### Actual Outcome\r\n\r\nCloud code stops to work showing us the above logs.\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.): 2.3.1\r\n  - Operating System:     Linux Ubuntu 16.04\r\n  - Hardware:             online.net Dedibox® XC 2016\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): online.net\r\n\r\n- **Database**\r\n  - MongoDB version: 3.2.11\r\n  - Storage engine:  ?\r\n  - Hardware:        online.net Dedibox® XC 2016\r\n  - Localhost or remote server? Same server as the parse server. Installed via apt-get.\r\n\r\n### Logs/Trace\r\n\r\nerror: Failed running cloud function setConversationRead for user xxxxxxxxxx with:\r\n  Input: {\"conversationId\":\"yyyyyyyyyy\"}\r\n  Error: {\"code\":141,\"message\":\"{\\\"code\\\":100,\\\"message\\\":\\\"XMLHttpRequest failed: \\\\\\\"Unable to connect to the Parse API\\\\\\\"\\\"}\"} functionName=setConversationRead, code=141, message={\"code\":100,\"message\":\"XMLHttpRequest failed: \\\"Unable to connect to the Parse API\\\"\"}, conversationId=yyyyyyyyyy, user=xxxxxxxxxx\r\n\r\nerror: Error generating response. ParseError {\r\n  code: 141,\r\n  message: '{\"code\":100,\"message\":\"XMLHttpRequest failed: \\\\\"Unable to connect to the Parse API\\\\\"\"}' } code=141, message={\"code\":100,\"message\":\"XMLHttpRequest failed: \\\"Unable to connect to the Parse API\\\"\"}\r\n[object Object]\r\n\r\nIt's very urgent.\r\nMany thanks in advance."},{"labels":["bug",null],"text":"### Issue Description\r\n\r\nRunning parse in express app, basic configuration on MacBook Air start use node app.js, starts up fine.\r\n\r\nDo Ctrl+C to stop, parse does not stop\r\n\r\n### Steps to reproduce\r\n\r\nStart Parse from command line using node app.js\r\nTry Ctrl+C.\r\n\r\n#### Expected Results\r\n\r\nParse/express to showdown\r\n\r\n#### Actual Outcome\r\n\r\nNo response, app stays running\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 2.3.8\r\n  - Operating System:     OS X 10.12.4/ Ubuntu 16.04 LTS\r\n  - Hardware:            Macbook Air/ AWS EC2\r\n  - Localhost or remote server? Both\r\n\r\n- **Database**\r\n  - MongoDB version: 3.4\r\n  - Storage engine:  Wired Tiger\r\n  - Hardware:        Macbook/ EC2\r\n  - Localhost or remote server? AWS/Local\r\n\r\n### Logs/Trace\r\n\r\nexpress:application set \"x-powered-by\" to true +0ms\r\n  express:application set \"etag\" to 'weak' +5ms\r\n  express:application set \"etag fn\" to [Function: wetag] +3ms\r\n  express:application set \"env\" to 'development' +0ms\r\n  express:application set \"query parser\" to 'extended' +0ms\r\n  express:application set \"query parser fn\" to [Function: parseExtendedQueryString] +1ms\r\n  express:application set \"subdomain offset\" to 2 +0ms\r\n  express:application set \"trust proxy\" to false +0ms\r\n  express:application set \"trust proxy fn\" to [Function: trustNone] +1ms\r\n  express:application booting in development mode +0ms\r\n  express:application set \"view\" to [Function: View] +0ms\r\n  express:application set \"views\" to '/Users/craig/Code/webApps/####/views' +1ms\r\n  express:application set \"jsonp callback name\" to 'callback' +0ms\r\n  express:router:route new '/files/:appId/:filename' +1ms\r\n  express:router:layer new '/files/:appId/:filename' +1ms\r\n  express:router:route get '/files/:appId/:filename' +2ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/files' +1ms\r\n  express:router:layer new '/files' +0ms\r\n  express:router:route post '/files' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/files/:filename' +24ms\r\n  express:router:layer new '/files/:filename' +0ms\r\n  express:router:route post '/files/:filename' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route post '/files/:filename' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route post '/files/:filename' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route post '/files/:filename' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/files/:filename' +0ms\r\n  express:router:layer new '/files/:filename' +0ms\r\n  express:router:route delete '/files/:filename' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route delete '/files/:filename' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route delete '/files/:filename' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route delete '/files/:filename' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' query +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' expressInit +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' allowCrossDomain +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' router +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/health' <anonymous> +1ms\r\n  express:router:layer new '/health' +1ms\r\n  express:router:layer new '/apps/:appId/verify_email' +4ms\r\n  express:router:layer new '/apps/choose_password' +1ms\r\n  express:router:layer new '/apps/:appId/request_password_reset' +0ms\r\n  express:router:layer new '/apps/:appId/request_password_reset' +0ms\r\n  express:router use '/apps' serveStatic +1ms\r\n  express:router:layer new '/apps' +0ms\r\n  express:router:route new '/apps/:appId/verify_email' +1ms\r\n  express:router:layer new '/apps/:appId/verify_email' +1ms\r\n  express:router:route get '/apps/:appId/verify_email' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/apps/choose_password' +0ms\r\n  express:router:layer new '/apps/choose_password' +0ms\r\n  express:router:route get '/apps/choose_password' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/apps/:appId/request_password_reset' +0ms\r\n  express:router:layer new '/apps/:appId/request_password_reset' +0ms\r\n  express:router:route post '/apps/:appId/request_password_reset' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/apps/:appId/request_password_reset' +0ms\r\n  express:router:layer new '/apps/:appId/request_password_reset' +0ms\r\n  express:router:route get '/apps/:appId/request_password_reset' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' router +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' urlencodedParser +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' router +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router use '/' jsonParser +2ms\r\n  express:router:layer new '/' +1ms\r\n  express:router use '/' allowCrossDomain +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' allowMethodOverride +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' handleParseHeaders +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:layer new '/classes/:className' +1ms\r\n  express:router:layer new '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/classes/:className' +0ms\r\n  express:router:layer new '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/users' +1ms\r\n  express:router:layer new '/users' +0ms\r\n  express:router:layer new '/users/me' +0ms\r\n  express:router:layer new '/users/:objectId' +0ms\r\n  express:router:layer new '/users/:objectId' +0ms\r\n  express:router:layer new '/users/:objectId' +0ms\r\n  express:router:layer new '/login' +1ms\r\n  express:router:layer new '/logout' +0ms\r\n  express:router:layer new '/requestPasswordReset' +0ms\r\n  express:router:layer new '/verificationEmailRequest' +0ms\r\n  express:router:layer new '/sessions/me' +0ms\r\n  express:router:layer new '/sessions' +1ms\r\n  express:router:layer new '/sessions/:objectId' +0ms\r\n  express:router:layer new '/sessions' +0ms\r\n  express:router:layer new '/sessions/:objectId' +0ms\r\n  express:router:layer new '/sessions/:objectId' +0ms\r\n  express:router:layer new '/upgradeToRevocableSession' +1ms\r\n  express:router:layer new '/roles' +1ms\r\n  express:router:layer new '/roles/:objectId' +1ms\r\n  express:router:layer new '/roles' +1ms\r\n  express:router:layer new '/roles/:objectId' +1ms\r\n  express:router:layer new '/roles/:objectId' +0ms\r\n  express:router:layer new '/events/AppOpened' +1ms\r\n  express:router:layer new '/events/:eventName' +0ms\r\n  express:router:layer new '/installations' +1ms\r\n  express:router:layer new '/installations/:objectId' +1ms\r\n  express:router:layer new '/installations' +0ms\r\n  express:router:layer new '/installations/:objectId' +0ms\r\n  express:router:layer new '/installations/:objectId' +0ms\r\n  express:router:layer new '/functions/:functionName' +1ms\r\n  express:router:layer new '/jobs/:jobName' +1ms\r\n  express:router:layer new '/jobs' +1ms\r\n  express:router:layer new '/schemas' +1ms\r\n  express:router:layer new '/schemas/:className' +0ms\r\n  express:router:layer new '/schemas' +1ms\r\n  express:router:layer new '/schemas/:className' +0ms\r\n  express:router:layer new '/schemas/:className' +0ms\r\n  express:router:layer new '/schemas/:className' +1ms\r\n  express:router:layer new '/push' +1ms\r\n  express:router:layer new '/scriptlog' +0ms\r\n  express:router:layer new '/validate_purchase' +4ms\r\n  express:router:layer new '/serverInfo' +1ms\r\n  express:router:layer new '/config' +1ms\r\n  express:router:layer new '/config' +0ms\r\n  express:router:layer new '/purge/:className' +1ms\r\n  express:router:layer new '/hooks/functions' +0ms\r\n  express:router:layer new '/hooks/triggers' +0ms\r\n  express:router:layer new '/hooks/functions/:functionName' +1ms\r\n  express:router:layer new '/hooks/triggers/:className/:triggerName' +0ms\r\n  express:router:layer new '/hooks/functions' +0ms\r\n  express:router:layer new '/hooks/triggers' +0ms\r\n  express:router:layer new '/hooks/functions/:functionName' +1ms\r\n  express:router:layer new '/hooks/triggers/:className/:triggerName' +0ms\r\n  express:router:layer new '/cloud_code/jobs' +0ms\r\n  express:router:layer new '/batch' +1ms\r\n  express:router:route new '/classes/:className' +0ms\r\n  express:router:layer new '/classes/:className' +0ms\r\n  express:router:route get '/classes/:className' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/classes/:className/:objectId' +0ms\r\n  express:router:route get '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/classes/:className' +0ms\r\n  express:router:layer new '/classes/:className' +0ms\r\n  express:router:route post '/classes/:className' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/classes/:className/:objectId' +1ms\r\n  express:router:layer new '/classes/:className/:objectId' +0ms\r\n  express:router:route put '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/classes/:className/:objectId' +0ms\r\n  express:router:layer new '/classes/:className/:objectId' +0ms\r\n  express:router:route delete '/classes/:className/:objectId' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/users' +0ms\r\n  express:router:layer new '/users' +0ms\r\n  express:router:route get '/users' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/users' +0ms\r\n  express:router:layer new '/users' +1ms\r\n  express:router:route post '/users' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/users/me' +0ms\r\n  express:router:layer new '/users/me' +0ms\r\n  express:router:route get '/users/me' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/users/:objectId' +1ms\r\n  express:router:layer new '/users/:objectId' +0ms\r\n  express:router:route get '/users/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/users/:objectId' +0ms\r\n  express:router:layer new '/users/:objectId' +0ms\r\n  express:router:route put '/users/:objectId' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/users/:objectId' +0ms\r\n  express:router:layer new '/users/:objectId' +0ms\r\n  express:router:route delete '/users/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/login' +1ms\r\n  express:router:layer new '/login' +0ms\r\n  express:router:route get '/login' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/logout' +2ms\r\n  express:router:layer new '/logout' +0ms\r\n  express:router:route post '/logout' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/requestPasswordReset' +0ms\r\n  express:router:layer new '/requestPasswordReset' +0ms\r\n  express:router:route post '/requestPasswordReset' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/verificationEmailRequest' +0ms\r\n  express:router:layer new '/verificationEmailRequest' +1ms\r\n  express:router:route post '/verificationEmailRequest' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/sessions/me' +0ms\r\n  express:router:layer new '/sessions/me' +0ms\r\n  express:router:route get '/sessions/me' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/sessions' +0ms\r\n  express:router:layer new '/sessions' +16ms\r\n  express:router:route get '/sessions' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/sessions/:objectId' +0ms\r\n  express:router:layer new '/sessions/:objectId' +0ms\r\n  express:router:route get '/sessions/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/sessions' +1ms\r\n  express:router:layer new '/sessions' +0ms\r\n  express:router:route post '/sessions' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/sessions/:objectId' +1ms\r\n  express:router:layer new '/sessions/:objectId' +0ms\r\n  express:router:route put '/sessions/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/sessions/:objectId' +1ms\r\n  express:router:layer new '/sessions/:objectId' +0ms\r\n  express:router:route delete '/sessions/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/upgradeToRevocableSession' +0ms\r\n  express:router:layer new '/upgradeToRevocableSession' +0ms\r\n  express:router:route post '/upgradeToRevocableSession' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/roles' +0ms\r\n  express:router:layer new '/roles' +0ms\r\n  express:router:route get '/roles' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/roles/:objectId' +0ms\r\n  express:router:layer new '/roles/:objectId' +0ms\r\n  express:router:route get '/roles/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/roles' +1ms\r\n  express:router:layer new '/roles' +0ms\r\n  express:router:route post '/roles' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/roles/:objectId' +0ms\r\n  express:router:layer new '/roles/:objectId' +0ms\r\n  express:router:route put '/roles/:objectId' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/roles/:objectId' +0ms\r\n  express:router:layer new '/roles/:objectId' +0ms\r\n  express:router:route delete '/roles/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/events/AppOpened' +1ms\r\n  express:router:layer new '/events/AppOpened' +0ms\r\n  express:router:route post '/events/AppOpened' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/events/:eventName' +1ms\r\n  express:router:layer new '/events/:eventName' +0ms\r\n  express:router:route post '/events/:eventName' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/installations' +2ms\r\n  express:router:layer new '/installations' +1ms\r\n  express:router:route get '/installations' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/installations/:objectId' +0ms\r\n  express:router:layer new '/installations/:objectId' +1ms\r\n  express:router:route get '/installations/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/installations' +0ms\r\n  express:router:layer new '/installations' +0ms\r\n  express:router:route post '/installations' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/installations/:objectId' +0ms\r\n  express:router:layer new '/installations/:objectId' +1ms\r\n  express:router:route put '/installations/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/installations/:objectId' +0ms\r\n  express:router:layer new '/installations/:objectId' +0ms\r\n  express:router:route delete '/installations/:objectId' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/functions/:functionName' +1ms\r\n  express:router:layer new '/functions/:functionName' +0ms\r\n  express:router:route post '/functions/:functionName' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/jobs/:jobName' +0ms\r\n  express:router:layer new '/jobs/:jobName' +1ms\r\n  express:router:route post '/jobs/:jobName' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/jobs' +1ms\r\n  express:router:layer new '/jobs' +0ms\r\n  express:router:route post '/jobs' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/schemas' +1ms\r\n  express:router:layer new '/schemas' +0ms\r\n  express:router:route get '/schemas' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/schemas/:className' +1ms\r\n  express:router:layer new '/schemas/:className' +0ms\r\n  express:router:route get '/schemas/:className' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/schemas' +1ms\r\n  express:router:layer new '/schemas' +0ms\r\n  express:router:route post '/schemas' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/schemas/:className' +0ms\r\n  express:router:layer new '/schemas/:className' +0ms\r\n  express:router:route post '/schemas/:className' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/schemas/:className' +1ms\r\n  express:router:layer new '/schemas/:className' +0ms\r\n  express:router:route put '/schemas/:className' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/schemas/:className' +0ms\r\n  express:router:layer new '/schemas/:className' +1ms\r\n  express:router:route delete '/schemas/:className' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/push' +0ms\r\n  express:router:layer new '/push' +1ms\r\n  express:router:route post '/push' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/scriptlog' +0ms\r\n  express:router:layer new '/scriptlog' +0ms\r\n  express:router:route get '/scriptlog' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/validate_purchase' +0ms\r\n  express:router:layer new '/validate_purchase' +0ms\r\n  express:router:route post '/validate_purchase' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/serverInfo' +0ms\r\n  express:router:layer new '/serverInfo' +0ms\r\n  express:router:route get '/serverInfo' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router:route new '/config' +0ms\r\n  express:router:layer new '/config' +0ms\r\n  express:router:route get '/config' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/config' +0ms\r\n  express:router:layer new '/config' +1ms\r\n  express:router:route put '/config' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/purge/:className' +0ms\r\n  express:router:layer new '/purge/:className' +0ms\r\n  express:router:route delete '/purge/:className' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/functions' +1ms\r\n  express:router:layer new '/hooks/functions' +0ms\r\n  express:router:route get '/hooks/functions' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/triggers' +0ms\r\n  express:router:layer new '/hooks/triggers' +0ms\r\n  express:router:route get '/hooks/triggers' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/functions/:functionName' +0ms\r\n  express:router:layer new '/hooks/functions/:functionName' +0ms\r\n  express:router:route get '/hooks/functions/:functionName' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/triggers/:className/:triggerName' +0ms\r\n  express:router:layer new '/hooks/triggers/:className/:triggerName' +1ms\r\n  express:router:route get '/hooks/triggers/:className/:triggerName' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/functions' +0ms\r\n  express:router:layer new '/hooks/functions' +0ms\r\n  express:router:route post '/hooks/functions' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/triggers' +0ms\r\n  express:router:layer new '/hooks/triggers' +0ms\r\n  express:router:route post '/hooks/triggers' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/functions/:functionName' +1ms\r\n  express:router:layer new '/hooks/functions/:functionName' +0ms\r\n  express:router:route put '/hooks/functions/:functionName' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/hooks/triggers/:className/:triggerName' +1ms\r\n  express:router:layer new '/hooks/triggers/:className/:triggerName' +0ms\r\n  express:router:route put '/hooks/triggers/:className/:triggerName' +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/cloud_code/jobs' +0ms\r\n  express:router:layer new '/cloud_code/jobs' +0ms\r\n  express:router:route get '/cloud_code/jobs' +1ms\r\n  express:router:layer new '/' +0ms\r\n  express:router:route new '/batch' +0ms\r\n  express:router:layer new '/batch' +0ms\r\n  express:router:route post '/batch' +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router use '/' router +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:router use '/' handleParseErrors +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:application set \"x-powered-by\" to true +1ms\r\n  express:application set \"etag\" to 'weak' +0ms\r\n  express:application set \"etag fn\" to [Function: wetag] +0ms\r\n  express:application set \"env\" to 'development' +2ms\r\n  express:application set \"query parser\" to 'extended' +1ms\r\n  express:application set \"query parser fn\" to [Function: parseExtendedQueryString] +0ms\r\n  express:application set \"subdomain offset\" to 2 +1ms\r\n  express:application set \"trust proxy\" to false +0ms\r\n  express:application set \"trust proxy fn\" to [Function: trustNone] +0ms\r\n  express:application booting in development mode +0ms\r\n  express:application set \"view\" to [Function: View] +1ms\r\n  express:application set \"views\" to '/Users/craig/Code/webApps/#####/views' +0ms\r\n  express:application set \"jsonp callback name\" to 'callback' +0ms\r\n  express:application set \"port\" to '3000' +0ms\r\n  express:router use '/' query +0ms\r\n  express:router:layer new '/' +1ms\r\n  express:router use '/' expressInit +0ms\r\n  express:router:layer new '/' +0ms\r\n  express:application .use app under / +0ms\r\n  express:router use '/' mounted_app +0ms\r\n  express:router:layer new '/' +1ms\r\n✓ App is running at http://localhost:3000 in development mode\r\n  Press CTRL-C to stop\r\n\r\n^C^C^C^C^C^C^C^C^C^C^C^C^C^C"},{"labels":["bug"],"text":"### Issue Description\r\n\r\nTrying to make query by using doesNotMatchKeyInQuery() and equalTo() on same column fails to produce correct output;\r\n\r\n### Steps to reproduce\r\n\r\n```\r\n var query = new Parse.Query(\"Posts\");\r\n query.equalTo(\"author\", SOME_USER_POINTER);\r\n\r\nvar banListQuery = new Parse.Query(\"UserBlockList\");\r\nbanListQuery.equalTo(\"blockedUser\", req.user);\r\n\r\nquery.doesNotMatchKeyInQuery(\"author\", \"blockedBy\", banListQuery);\r\nquery.include(\"author\");\r\nquery.find();\r\n```\r\n\r\n#### Expected Results\r\n\r\nReturn post of user provided in equalTo() only if requester (req.user) is not blocked by post author;\r\n\r\n#### Actual Outcome\r\n\r\nequalTo() takes bigger priority and post is returned even if post author has req.user blocked;\r\nNote: not having equalTo() seems to work correctly, blocked users don't see the content;\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version (Be specific! Don't say 'latest'.) : 2.3.7\r\n  - Operating System:     Ubuntu 16.04\r\n  - Hardware:             8 x Intel(R) Core(TM) i7-4790K CPU @ 4.00GHz (1 Socket), 8GB Ram\r\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): Remote server at OVH\r\n\r\n- **Database**\r\n  - MongoDB version: 3.2.12\r\n  - Storage engine: wiredTiger\r\n  - Hardware:       8 x Intel(R) Core(TM) i7-4790K CPU @ 4.00GHz (1 Socket), 12GB Ram\r\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): OVH\r\n\r\n### Logs/Trace\r\n\r\nInclude all relevant logs. You can turn on additional logging by configuring VERBOSE=1 in your environment."},{"labels":["bug",null],"text":"When using the `select()` method with nested keys (i.e.: `key1.key2`) `key1` needs to be included automatically.\r\n\r\nex:\r\n\r\n```\r\nlet query = new Parse.Query(\"MyObject\");\r\nquery.select(\"key.key2\");\r\n// does not work\r\n```\r\n\r\n```\r\nlet query = new Parse.Query(\"MyObject\");\r\nquery.include(\"key\");\r\nquery.select(\"key.key2\");\r\n// works!\r\n```"},{"labels":["bug",null],"text":"During investigation of iOS SDK bug https://github.com/ParsePlatform/Parse-SDK-iOS-OSX/issues/1067 I've noticed that one of my queries fails when working on 32 bit device. At first, I thought it's due to recent SDK update from 1.13.0 to 1.14.2 but I was able to reproduce it with both SDK versions. After few hours of debugging how requests are made on 32/64 bit SDK I came to conclusion that ParseServer treats differently requests that queries fields with one direct object pointer vs array of those pointers. Because of the way how iOS SDK stores request parameters internally (in NSDictionary which is unordered collection) JSONs producend on 32 bit devices are different then the one from 64 bit devices (presented below) and requests on 32 bit devices is failing.\r\n\r\n### Steps to reproduce\r\n\r\n1. Ids known for two objects with type fooo \r\n```swift\r\n    let fooId = \"SLa1pur9QB\"\r\n    let fooId2 = \"zDtZFtdx9X\"\r\n```\r\n2. Couple of objects(\"GameScore\") with relation array to \"fooo\" objects\r\n```swift\r\nlet foo = PFObject(withoutDataWithClassName: \"fooo\", objectId: fooId)\r\nlet foo2 = PFObject(withoutDataWithClassName: \"fooo\", objectId: fooId2)\r\nlet gameScore = PFObject(className:\"GameScore\")\r\ngameScore[\"foooVal\"] = [foo, foo2]\r\n```\r\n3. Query to find objects of type GameScore where object foo2 is stored in \"fooVal\" array\r\n```swift\r\nlet foo = PFObject(withoutDataWithClassName: \"fooo\", objectId: fooId)\r\nlet gameScoreQuery = PFQuery(className:\"GameScore\")\r\ngameScoreQuery.whereKey(\"foooVal\", equalTo: foo)\r\ngameScoreQuery.findObjectsInBackground { (objects, error) in\r\n    print(\"error \\(error)\")\r\n    print(\"objects = \\(objects?.count)\")\r\n}\r\n```\r\n\r\nI'll also present case where this doesn't matter due to fact that fields containg just one relation objects are stored differently by ParseServer\r\n\r\n1. Save object of type GameScore2 with direct relation to fooo\r\n```swift\r\nlet foo2 = PFObject(withoutDataWithClassName: \"fooo\", objectId: fooId2)\r\nlet gameScore = PFObject(className:\"GameScore2\")\r\ngameScore[\"foooVal\"] = foo2\r\n```\r\n2. Query\r\n```swift\r\nlet foo2 = PFObject(withoutDataWithClassName: \"fooo\", objectId: fooId2)\r\nlet gameScoreQuery = PFQuery(className:\"GameScore2\")\r\ngameScoreQuery.whereKey(\"foooVal\", equalTo: foo2)\r\ngameScoreQuery.findObjectsInBackground { (objects, error) in\r\n    print(\"error \\(error)\")\r\n    print(\"objects = \\(objects?.count)\")\r\n}\r\n```\r\n\r\n#### Expected Results\r\n\r\nOrdering of parameters in both queries should not influence results.\r\n\r\n#### Actual Outcome\r\n\r\n_1. Query on array field_\r\n\r\nProduced JSON on 32 bit devices:\r\n```\r\n{\"where\":{\"foooVal\":{\"objectId\":\"SLa1pur9QB\",\"className\":\"fooo\",\"__type\":\"Pointer\"}},\"_method\":\"GET\"}\r\n```\r\nProduced JSON on 64 bit devices:\r\n```\r\n{\"where\":{\"foooVal\":{\"__type\":\"Pointer\",\"className\":\"fooo\",\"objectId\":\"SLa1pur9QB\"}},\"_method\":\"GET\"}\r\n```\r\n\r\n_Result:_\r\nOn 64 bit devices all values are returned correctly, on 32 bit empty array is returned(refer to logs section)\r\n\r\n_2. Query on direct releation field_\r\n\r\n32 bit device:\r\n```\r\n{\"where\":{\"foooVal\":{\"objectId\":\"zDtZFtdx9X\",\"className\":\"fooo\",\"__type\":\"Pointer\"}},\"_method\":\"GET\"}\r\n```\r\n64 bit device\r\n```\r\n{\"where\":{\"foooVal\":{\"__type\":\"Pointer\",\"className\":\"fooo\",\"objectId\":\"zDtZFtdx9X\"}},\"_method\":\"GET\"}\r\n```\r\n\r\n_Result:_\r\nIn both cases proper values is returned\r\n\r\n### Environment Setup\r\n\r\n- **Server**\r\n  - parse-server version: 2.2.25-beta.1 commit: c8823f296c6128b991f69fba4e602c8d004a4658\r\n  - Operating System:     64bit Amazon Linux 2016.09 v3.1.0 running Node.js\r\n  - Hardware:             t2.micro instance\r\n  - Localhost or remote server?: AWS Cloud\r\n\r\n- **Database**\r\n  - MongoDB version: 3.2.11\r\n  - Hardware:        mLab Sandbox\r\n  - Localhost or remote server?: mLab\r\n\r\n### Logs/Trace\r\n\r\n_1. query on relation array_\r\n64 bit request/response log from server:\r\n```\r\nverbose: REQUEST for [GET] /parse/classes/GameScore: {\r\n  \"where\": {\r\n    \"foooVal\": {\r\n      \"__type\": \"Pointer\",\r\n      \"className\": \"fooo\",\r\n      \"objectId\": \"SLa1pur9QB\"\r\n    }\r\n  }\r\n}\r\n\r\nverbose: RESPONSE from [GET] /parse/classes/GameScore: {\r\n  \"response\": {\r\n    \"results\": [\r\n      SOME_PROPER_VALUES\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n32 bit request/response log from server:\r\n```\r\nverbose: REQUEST for [GET] /parse/classes/GameScore: {\r\n  \"where\": {\r\n    \"foooVal\": {\r\n      \"objectId\": \"SLa1pur9QB\",\r\n      \"className\": \"fooo\",\r\n      \"__type\": \"Pointer\"\r\n    }\r\n  }\r\n}\r\n\r\nverbose: RESPONSE from [GET] /parse/classes/GameScore: {\r\n  \"response\": {\r\n    \"results\": []\r\n  }\r\n} results=[]\r\n```\r\n\r\n_2. query on direct relation field_\r\n64 bit request/response log from server\r\n```\r\nverbose: REQUEST for [GET] /parse/classes/GameScore2: {\r\n  \"where\": {\r\n    \"foooVal\": {\r\n      \"__type\": \"Pointer\",\r\n      \"className\": \"fooo\",\r\n      \"objectId\": \"zDtZFtdx9X\"\r\n    }\r\n  }\r\n}\r\nverbose: RESPONSE from [GET] /parse/classes/GameScore2: {\r\n  \"response\": {\r\n    \"results\": [\r\n      SOME_PROPER_VALUES\r\n    ]\r\n  }\r\n}\r\n```\r\n32 bit request/response log from server:\r\n```\r\nverbose: REQUEST for [GET] /parse/classes/GameScore2: {\r\n  \"where\": {\r\n    \"foooVal\": {\r\n      \"objectId\": \"zDtZFtdx9X\",\r\n      \"className\": \"fooo\",\r\n      \"__type\": \"Pointer\"\r\n    }\r\n  }\r\n}\r\nverbose: RESPONSE from [GET] /parse/classes/GameScore2: {\r\n  \"response\": {\r\n    \"results\": [\r\n    SOME_PROPER_VALUES\r\n    ]\r\n  }\r\n}\r\n```\r\nI guess that if field contains direct relation to object query is translated from above form to CLASS_NAME$OBJECT_ID before sending it to MongoDB, and in case of field containg array query from above is passed directly to MongoDB which is why it's returning 0 objects. So either such translation should happen in both cases or SDK should create queries in specific order (although I coulnd't find any statement in documentation for REST Api about such requirement) or maybe there's a way to convince MongoDB to not look at parameter order, just \"content\"."},{"labels":["bug",null,null],"text":"LiveQuery WebSocket server ignores`enableAnonymousUsers = false` setting and allows an anonymous user to connect and subscribe to queries even if `sessionToken`is not passed.\n\nThe LiveQuery server should prevent clients from connecting if this setting is turned off, and make both servers work consistently. This also prevents the need of setting ACL on each document if the intent is only check for current logged-in users and thus reducing the servers overhead.\n\nI also unchecked the GameScore class public read and write operations in CLP via the Parse Dashboard, so I expected the server to block read operations from unknown users. Then I read the LiveQuery docs and it does not take into account CLP. I think it could be interesting to have less granular security management in some scenarios, like this one.\n### Steps to reproduce\n1. Install latest version, `git clone https://github.com/ParsePlatform/parse-server-example.git` and `npm install\n   `\n2. Create a GameScore class with some fields, like [playerName, score, cheatMode], goto security (CLP) and uncheck Public Read and Write.\n3. Change the server index.js file\n\n``` javascript\nvar api = new ParseServer({\n  databaseURI: databaseUri || 'mongodb://localhost:27017/dev',\n  cloud: process.env.CLOUD_CODE_MAIN || __dirname + '/cloud/main.js',\n  appId: process.env.APP_ID || 'myAppId',\n  masterKey: process.env.MASTER_KEY || 'masterKey', //Add your master key here. Keep it secret!\n  //clientKey: process.env.CLIENT_KEY || 'clientKey',\n  serverURL: process.env.SERVER_URL || 'http://localhost:1337/parse',  \n  enableAnonymousUsers : process.env.ENABLE_ANON_USERS || false,\n  allowClientClassCreation: process.env.CLIENT_CLASS_CREATION || false,\n  verbose : process.env.VERBOSE || 1,\n  liveQuery: {\n    classNames: [\"GameScore\"] // List of classes to support for query subscriptions\n  }\n});\n```\n1. Create an empty html file add this javascript script\n\n``` javascript\nParse.initialize(\"myAppId\");\nParse.serverURL = 'http://localhost:1337/parse';\nconsole.log(\"Current user\", Parse.User.current());\n\nlet query = new Parse.Query('GameScore');\nquery.find().then((data, err)=>{\n   console.log(\"Find = \",data, err);\n});\n\nlet subscription = query.subscribe();\nsubscription.on('open', () => {\n   console.log(\"Connection Open\");\n});\n\nParse.LiveQuery.on('error', (error) => {\n   console.error(\"Connection Error\", error);\n});\n```\n#### Expected Results\n\nThe logs messages should be\n\n``` console\nCurrent User, null\nConnection Error ...\n```\n\nThe connection should be rejected and a console message should be Connection Error. The client should not receive additional messages from the ws server.\n#### Actual Outcome\n\nInstead you get in the browsers console the log message\n\n``` console\nCurrent User, null\nConnection Open\n```\n\nAs proof, open chrome dev tools -> network, filter by WS (websocket) connections and open the row with the parse name, then select the frames tab, you get data frames every time the subscribed data is changed. So to test this open Parse Dashboard and create, delete or edit documents in the GameScore collection.\n### Environment Setup\n- **Server**\n  - parse-server version : 2.2.22\n  - Operating System:     Windows 10.0.14393\n  - Hardware:         Intel i7 64x, 8G ram\n  - Localhost with Node 6.7.0\n- **Database**\n  - MongoDB version: 3.0.0\n  - Storage engine:  { storage: { dbPath: \"./db\", journal: { enabled: true }, mmapv1: { smallFiles: true } } }\n### Logs/Trace\n\n``` console\nverbose: Current clients 0\nverbose: Current subscriptions 0\nverbose: REQUEST for [GET] /parse/classes/GameScore: {\n  \"where\": {\n  },\n} method=GET, url=/parse/classes/GameScore, host=localhost:1337, connection=keep-alive, content-length=177, pragma=no-cache, cache-control=no-cache, origin=http://localhost:1337, user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36, content-type=text/plain, accept=*/*, referer=http://localhost:1337/public/test.html, accept-encoding=gzip, deflate, ,pt;q=0.8,en-US;q=0.6,en;q=0.4, \nerror: Error generating response. ParseError {\n  code: 119,\n  message: 'Permission denied for action find on class GameScore.' } code=119, message=Permission denied for action find on class GameScore.\nverbose: Request: %j op=connect, applicationId=myAppId\ninfo: Create new client: 1\nverbose: Push Response : \"{\\\"op\\\":\\\"connected\\\",\\\"clientId\\\":1}\"\n[object Object]\nverbose: Request: %j op=subscribe, requestId=1, className=GameScore, \nverbose: Push Response : \"{\\\"op\\\":\\\"subscribed\\\",\\\"clientId\\\":1,\\\"requestId\\\":1}\"\nverbose: Create client 1 new subscription: 1\nverbose: Current client number: 1\n```\n"},{"labels":["bug"],"text":"**Issue**\nThe exact issue is that I dont want restful API to be able to write new objects to  classes, so I set up a restful API key which i thought it would prevent any restful calls(a call that doesn't include the restful key) from writing any new objects, however, i am still able to do so(with or without the key).\n### Steps to reproduce\n\n curl -X POST \\\n\n> -H \"X-Parse-Application-Id: App\" \\\n> -H \"Content-Type: application/json\" \\\n> -d '{\"someKey\":\"someValue\"}' \\\n> http://127.0.0.1:1337/somelocation/classes/testClass\n#### Expected Results\n\nNot be able to create new objects to class  using restful api\n#### Actual Outcome\n\nable to create new objects\n### Environment Setup\n- **Server**\n  - parse-server version 2.2.12\n  - Operating System:    ubuntu 14.04\n  - Localhost or remote server? local\n"},{"labels":["bug",null],"text":"### Issue Description\n\nQueries that include a pointer and select that pointer do not retrieve the pointer attributes.\n### Steps to reproduce\n\nSetup:\n\n```\ncurl -X POST \\\n-H \"X-Parse-Application-Id: appId\" \\\n-H \"X-Parse-REST-API-Key: restAPIKey\" \\\n-H \"Content-Type: application/json\" \\\n-d '{\"score\":1337}' \\\nhttp://localhost:1337/parse/classes/GameScore\n\ncurl -X POST \\\n-H \"X-Parse-Application-Id: appId\" \\\n-H \"X-Parse-REST-API-Key: restAPIKey\" \\\n-H \"Content-Type: application/json\" \\\n-d '{\"gameScore\": { \"__type\": \"Pointer\", \"className\": \"GameScore\", \"objectId\": \"GSdG0hSNgN\"}, \"other\":\"thing\"}' \\\nhttp://localhost:1337/parse/classes/Player\n```\n\nVerify data created correctly, including the pointer:\n\n```\ncurl -X GET \\\n-H \"X-Parse-Application-Id: appId\" \\\n-H \"X-Parse-REST-API-Key: restAPIKey\" \\\n--data-urlencode 'include=gameScore' \\\nhttp://localhost:1337/parse/classes/Player/gVKtQt2lDE\n```\n\n`{\"objectId\":\"gVKtQt2lDE\",\"gameScore\":{\"objectId\":\"GSdG0hSNgN\",\"score\":1337,\"createdAt\":\"2016-09-26T16:37:14.107Z\",\"updatedAt\":\"2016-09-26T16:37:14.107Z\",\"__type\":\"Object\",\"className\":\"GameScore\"},\"other\":\"thing\",\"createdAt\":\"2016-09-26T17:00:56.365Z\",\"updatedAt\":\"2016-09-26T17:00:56.365Z\"}`\n\nNow also select the pointer (should omit `other` and include only `gameScore`), but properties of gameScore are also omitted:\n\n```\ncurl -X GET \\\n-H \"X-Parse-Application-Id: appId\" \\\n-H \"X-Parse-REST-API-Key: restAPIKey\" \\\n--data-urlencode 'include=gameScore' \\\n--data-urlencode 'keys=gameScore' \\\nhttp://localhost:1337/parse/classes/Player/gVKtQt2lDE\n```\n\n`{\"objectId\":\"gVKtQt2lDE\",\"gameScore\":{\"objectId\":\"GSdG0hSNgN\",\"createdAt\":\"2016-09-26T16:37:14.107Z\",\"updatedAt\":\"2016-09-26T16:37:14.107Z\",\"__type\":\"Object\",\"className\":\"GameScore\"},\"createdAt\":\"2016-09-26T17:00:56.365Z\",\"updatedAt\":\"2016-09-26T17:00:56.365Z\"}`\n\nExpected:\n`{\"objectId\":\"gVKtQt2lDE\",\"gameScore\":{\"objectId\":\"GSdG0hSNgN\",\"score\":1337,\"createdAt\":\"2016-09-26T16:37:14.107Z\",\"updatedAt\":\"2016-09-26T16:37:14.107Z\",\"__type\":\"Object\",\"className\":\"GameScore\"},\"createdAt\":\"2016-09-26T17:00:56.365Z\",\"updatedAt\":\"2016-09-26T17:00:56.365Z\"}`\n\nThis may have been broken in #2737\n### Environment Setup\n- **Server**\n  - parse-server version (Be specific! Don't say 'latest'.) : 2.2.22\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): localhost\n"},{"labels":["bug",null],"text":"Describe your issue in as much detail as possible.\n\nAfter updating to Parse-Server `2.2.22`, my previously working code on `2.2.21` that just to update the `user` pointer on an `installation` object is not working anymore. Got following error:\n\n```\nerror: Error generating response. ParseError {\n  code: 136,\n  message: 'installationId may not be changed in this operation' } code=136, message=installationId may not be changed in this operation\nerror: Failed running cloud function addUserToInstallation for user FA9IMj9eDx with:\n  Input: {\"installationId\":\"4bb1e0ac-1224-4d99-ae7b-619778834e5f\",\"userId\":\"FA9IMj9eDx\"}\n\n  Error: {\"code\":141,\"message\":{\"code\":136,\"message\":\"installationId may not be changed in this operation\"}} functionName=addUserToInstallation, code=141, code=136, message=installationId may not be changed in this operation, installationId=4bb1e0ac-1224-4d99-ae7b-619778834e5f, userId=FA9IMj9eDx, user=FA9IMj9eDx\n```\n### Steps to reproduce\n\nPlease include a detailed list of steps that reproduce the issue. Include curl commands when applicable.\n1. Query an installation object by `installationId`:\n\n```\nconst installationQuery = new Parse.Query(Parse.Installation);\ninstallationQuery.equalTo('installationId', installationId);\ninstallationQuery.first({ useMasterKey: true }).then((installation) => {\n\n}, response.error);\n```\n1. Update the user pointer on the object and call `save`:\n\n```\ninstallationQuery.first({ useMasterKey: true }).then((installation) => {\n    installation.set('user', user);\n    installation.save(null, { useMasterKey: true }).then(response.success, response.error);\n}, response.error);\n```\n#### Expected Results\n\n`installation` object updated with the user pointer successfully\n#### Actual Outcome\n\n```\nerror: Error generating response. ParseError {\n  code: 141,\n  message:\n   ParseError {\n     code: 136,\n     message: 'installationId may not be changed in this operation' } } code=141, code=136, message=installationId may not be changed in this operation\n```\n### Environment Setup\n- **Server**\n  - parse-server version (Be specific! Don't say 'latest'.) : [`2.2.22`]\n  - Operating System:     [`ubuntu/trusty64`]\n  - Hardware:             [FILL THIS OUT]\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): [`vagrant 1.8.5`]\n- **Database**\n  - MongoDB version: [`MongoDB 3.2.8`]\n  - Storage engine:  [`mmapv1`]\n  - Hardware:        [`1GB Disk`]\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): [`compose.io`]\n### Logs/Trace\n\nYou can turn on additional logging by configuring VERBOSE=1 in your environment.\n\n[Not Necessary]\n"},{"labels":["bug",null],"text":"Using parse-server 2.2.21, I found a problem when including nested fields of an array of null pointers. For example, if I have an object like `{'list': [null, null, null]}` and then query with include `list.field` I get:\n\n```\nerror: Uncaught internal server error. [TypeError: Cannot read property 'field' of null] TypeError: Cannot read property 'field' of null\n    at findPointers (/usr/lib/node_modules/parse-server/lib/RestQuery.js:810:25)\n\n```\n"},{"labels":["bug",null],"text":"### Issue Description\n\nI am using Parse server 2.2.19, and Parse client SDK 1.14.2 on iOS app.\nParse server is hosted on AWS using Elastic Beanstalk, where I have NGINX as load balancer, and Parse server running on EC2. The mongoDB is hosted in mLab.\n\nI had an iOS app that connected to api.parse.com that did not used revokable session.\nWe released a new version of the app that is now connected to Parse Served, and we call from the app the following code -\n\n[Parse initializeWithConfiguration:[ParseClientConfiguration configurationWithBlock:^(id<ParseMutableClientConfiguration> configuration) {\n    configuration.applicationId = @\"XXXXXX\";\n    configuration.clientKey = @\"YYYY\";\n\n```\nconfiguration.server = @\"ZZZZ \";\n\nconfiguration.localDatastoreEnabled = YES ;\n```\n\n}]];\n\n[PFUser enableRevocableSessionInBackground];\n\nNow I get every few minutes the following warning from AWS with the following-\n\nMessage: Environment health has transitioned from Ok to Warning. 100.0 % of the requests are failing with HTTP 5xx.\n### Steps to reproduce\n\nCall [PFUser enableRevocableSessionInBackground].\n#### Expected Results\n\nCalling enableRevocableSessionInBackground should not generate any 500 errors.\n#### Actual Outcome\n\nCalling enableRevocableSessionInBackground should generate any 500 errors.\n### Environment Setup\n- **Server**\n  - parse-server version (Be specific! Don't say 'latest'.) : 2.2.19\n  - Operating System:     ubuntu\n  - Hardware:             NGINX , EC2\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): AWS\n- **Database**\n  - MongoDB version:  3.0.x\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): mLab\n### Logs/Trace\n\n/var/log/nginx/access.log\n\n172.31.57.70 - - [17/Sep/2016:13:30:54 +0000] \"PUT /server/classes/_Installation/cVDvKNxn7j HTTP/1.1\" 200 71 \"-\" \"MyAppName/510 CFNetwork/758.5.3 Darwin/15.6.0\" \"107.77.223.68\"\n172.31.57.70 - - [17/Sep/2016:13:32:25 +0000] \"PUT /server/classes/_Installation/O0gdCix8pw HTTP/1.1\" 200 71 \"-\" \"MyAppName/510 CFNetwork/808.0.2 Darwin/16.0.0\" \"108.7.56.162\"\n172.31.18.53 - - [17/Sep/2016:13:32:28 +0000] \"PUT /server/classes/_Installation/pegHJd1ULm HTTP/1.1\" 200 71 \"-\" \"MyAppName/510 CFNetwork/808.0.2 Darwin/16.0.0\" \"64.30.72.169\"\n172.31.18.53 - - [17/Sep/2016:13:32:39 +0000] \"PUT /server/classes/_Installation/h58cNPGdqL HTTP/1.1\" 200 71 \"-\" \"MyAppName/510 CFNetwork/808.0.2 Darwin/16.0.0\" \"107.77.226.213\"\n172.31.57.70 - - [17/Sep/2016:13:32:40 +0000] \"PUT /server/classes/_Installation/WtscPBtEM2 HTTP/1.1\" 200 71 \"-\" \"MyAppName/510 CFNetwork/758.5.3 Darwin/15.6.0\" \"75.68.90.83\"\n172.31.18.53 - - [17/Sep/2016:13:32:42 +0000] \"PUT /server/classes/_Installation/5vs215XGgF HTTP/1.1\" 200 71 \"-\" \"MyAppName/510 CFNetwork/758.5.3 Darwin/15.6.0\" \"174.192.24.110\"\n172.31.57.70 - - [17/Sep/2016:13:33:07 +0000] \"PUT /server/classes/_Installation/j2fvZhFU5K HTTP/1.1\" 200 71 \"-\" \"MyAppName/510 CFNetwork/808.0.2 Darwin/16.0.0\" \"74.104.123.65\"\n172.31.57.70 - - [17/Sep/2016:13:33:21 +0000] \"POST /server/classes/SessionViewing HTTP/1.1\" 201 64 \"-\" \"MyAppName/510 CFNetwork/758.5.3 Darwin/15.6.0\" \"71.232.78.165\"\n172.31.57.70 - - [17/Sep/2016:13:33:21 +0000] \"PUT /server/classes/_Installation/pktZIdC2Jv HTTP/1.1\" 200 86 \"-\" \"MyAppName/510 CFNetwork/758.5.3 Darwin/15.6.0\" \"71.232.78.165\"\n172.31.57.70 - - [17/Sep/2016:13:33:22 +0000] \"PUT /server/classes/_Installation/pktZIdC2Jv HTTP/1.1\" 200 71 \"-\" \"MyAppName/510 CFNetwork/758.5.3 Darwin/15.6.0\" \"71.232.78.165\"\n172.31.18.53 - - [17/Sep/2016:13:33:53 +0000] \"PUT /server/classes/_Installation/IEn1vQQg3e HTTP/1.1\" 200 71 \"-\" \"MyAppName/510 CFNetwork/808.0.2 Darwin/16.0.0\" \"174.192.29.227\"\n172.31.57.70 - - [17/Sep/2016:13:34:10 +0000] \"POST /server/upgradeToRevocableSession HTTP/1.1\" 500 45 \"-\" \"MyAppName/510 CFNetwork/758.5.3 Darwin/15.6.0\" \"66.87.124.62\"\n172.31.57.70 - - [17/Sep/2016:13:34:10 +0000] \"GET /server/config HTTP/1.1\" 200 2821 \"-\" \"MyAppName/510 CFNetwork/758.5.3 Darwin/15.6.0\" \"66.87.124.62\"\n172.31.57.70 - - [17/Sep/2016:13:34:12 +0000] \"PUT /server/classes/_Installation/yUNydcAcTu HTTP/1.1\" 200 71 \"-\" \"MyAppName/510 CFNetwork/758.5.3 Darwin/15.6.0\" \"66.87.124.62\"\n172.31.18.53 - - [17/Sep/2016:13:34:43 +0000] \"POST /server/events/AppOpened HTTP/1.1\" 200 2 \"-\" \"MyAppName/510 CFNetwork/758.5.3 Darwin/15.6.0\" \"108.26.217.154\"\n172.31.18.53 - - [17/Sep/2016:13:34:43 +0000] \"GET /server/config HTTP/1.1\" 200 2821 \"-\" \"MyAppName/510 CFNetwork/758.5.3 Darwin/15.6.0\" \"108.26.217.154\"\n\n/var/log/nodejs/nodejs.log\n\n�[31merror�[39m: Error handling request: [TypeError: Cannot read property 'id' of undefined] \n�[31merror�[39m: Uncaught internal server error. [TypeError: Cannot read property 'id' of undefined] TypeError: Cannot read property 'id' of undefined\nat SessionsRouter.handleUpdateToRevocableSession (/var/app/current/node_modules/parse-server/lib/Routers/SessionsRouter.js:109:25)\nat /var/app/current/node_modules/parse-server/lib/Routers/SessionsRouter.js:154:23\nat /var/app/current/node_modules/parse-server/lib/PromiseRouter.js:259:9\nat /var/app/current/node_modules/parse-server/lib/PromiseRouter.js:295:9\nat Layer.handle as handle_request\nat next (/var/app/current/node_modules/express/lib/router/route.js:131:13)\nat Route.dispatch (/var/app/current/node_modules/express/lib/router/route.js:112:3)\nat Layer.handle as handle_request\nat /var/app/current/node_modules/express/lib/router/index.js:277:22\nat Function.process_params (/var/app/current/node_modules/express/lib/router/index.js:330:12)\nTypeError: Cannot read property 'id' of undefined\nat SessionsRouter.handleUpdateToRevocableSession (/var/app/current/node_modules/parse-server/lib/Routers/SessionsRouter.js:109:25)\nat /var/app/current/node_modules/parse-server/lib/Routers/SessionsRouter.js:154:23\nat /var/app/current/node_modules/parse-server/lib/PromiseRouter.js:259:9\nat /var/app/current/node_modules/parse-server/lib/PromiseRouter.js:295:9\nat Layer.handle as handle_request\nat next (/var/app/current/node_modules/express/lib/router/route.js:131:13)\nat Route.dispatch (/var/app/current/node_modules/express/lib/router/route.js:112:3)\nat Layer.handle as handle_request\nat /var/app/current/node_modules/express/lib/router/index.js:277:22\nat Function.process_params (/var/app/current/node_modules/express/lib/router/index.js:330:12)\n�[31merror�[39m: Error handling request: [TypeError: Cannot read property 'id' of undefined] \n�[31merror�[39m: Uncaught internal server error. [TypeError: Cannot read property 'id' of undefined] TypeError: Cannot read property 'id' of undefined\nat SessionsRouter.handleUpdateToRevocableSession (/var/app/current/node_modules/parse-server/lib/Routers/SessionsRouter.js:109:25)\nat /var/app/current/node_modules/parse-server/lib/Routers/SessionsRouter.js:154:23\nat /var/app/current/node_modules/parse-server/lib/PromiseRouter.js:259:9\nat /var/app/current/node_modules/parse-server/lib/PromiseRouter.js:295:9\nat Layer.handle as handle_request\nat next (/var/app/current/node_modules/express/lib/router/route.js:131:13)\nat Route.dispatch (/var/app/current/node_modules/express/lib/router/route.js:112:3)\nat Layer.handle as handle_request\nat /var/app/current/node_modules/express/lib/router/index.js:277:22\nat Function.process_params (/var/app/current/node_modules/express/lib/router/index.js:330:12)\nTypeError: Cannot read property 'id' of undefined\nat SessionsRouter.handleUpdateToRevocableSession (/var/app/current/node_modules/parse-server/lib/Routers/SessionsRouter.js:109:25)\nat /var/app/current/node_modules/parse-server/lib/Routers/SessionsRouter.js:154:23\nat /var/app/current/node_modules/parse-server/lib/PromiseRouter.js:259:9\nat /var/app/current/node_modules/parse-server/lib/PromiseRouter.js:295:9\nat Layer.handle as handle_request\nat next (/var/app/current/node_modules/express/lib/router/route.js:131:13)\nat Route.dispatch (/var/app/current/node_modules/express/lib/router/route.js:112:3)\nat Layer.handle as handle_request\nat /var/app/current/node_modules/express/lib/router/index.js:277:22\nat Function.process_params (/var/app/current/node_modules/express/lib/router/index.js:330:12)\n�[31merror�[39m: Error handling request: [TypeError: Cannot read property 'id' of undefined] \n�[31merror�[39m: Uncaught internal server error. [TypeError: Cannot read property 'id' of undefined] TypeError: Cannot read property 'id' of undefined\nat SessionsRouter.handleUpdateToRevocableSession (/var/app/current/node_modules/parse-server/lib/Routers/SessionsRouter.js:109:25)\nat /var/app/current/node_modules/parse-server/lib/Routers/SessionsRouter.js:154:23\nat /var/app/current/node_modules/parse-server/lib/PromiseRouter.js:259:9\nat /var/app/current/node_modules/parse-server/lib/PromiseRouter.js:295:9\nat Layer.handle as handle_request\nat next (/var/app/current/node_modules/express/lib/router/route.js:131:13)\nat Route.dispatch (/var/app/current/node_modules/express/lib/router/route.js:112:3)\nat Layer.handle as handle_request\nat /var/app/current/node_modules/express/lib/router/index.js:277:22\nat Function.process_params (/var/app/current/node_modules/express/lib/router/index.js:330:12)\nTypeError: Cannot read property 'id' of undefined\nat SessionsRouter.handleUpdateToRevocableSession (/var/app/current/node_modules/parse-server/lib/Routers/SessionsRouter.js:109:25)\nat /var/app/current/node_modules/parse-server/lib/Routers/SessionsRouter.js:154:23\nat /var/app/current/node_modules/parse-server/lib/PromiseRouter.js:259:9\nat /var/app/current/node_modules/parse-server/lib/PromiseRouter.js:295:9\nat Layer.handle as handle_request\nat next (/var/app/current/node_modules/express/lib/router/route.js:131:13)\nat Route.dispatch (/var/app/current/node_modules/express/lib/router/route.js:112:3)\nat Layer.handle as handle_request\nat /var/app/current/node_modules/express/lib/router/index.js:277:22\nat Function.process_params (/var/app/current/node_modules/express/lib/router/index.js:330:12)\n�[31merror�[39m: Error handling request: [TypeError: Cannot read property 'id' of undefined] \n�[31merror�[39m: Uncaught internal server error. [TypeError: Cannot read property 'id' of undefined] TypeError: Cannot read property 'id' of undefined\nat SessionsRouter.handleUpdateToRevocableSession (/var/app/current/node_modules/parse-server/lib/Routers/SessionsRouter.js:109:25)\nat /var/app/current/node_modules/parse-server/lib/Routers/SessionsRouter.js:154:23\nat /var/app/current/node_modules/parse-server/lib/PromiseRouter.js:259:9\nat /var/app/current/node_modules/parse-server/lib/PromiseRouter.js:295:9\nat Layer.handle as handle_request\nat next (/var/app/current/node_modules/express/lib/router/route.js:131:13)\nat Route.dispatch (/var/app/current/node_modules/express/lib/router/route.js:112:3)\nat Layer.handle as handle_request\nat /var/app/current/node_modules/express/lib/router/index.js:277:22\nat Function.process_params (/var/app/current/node_modules/express/lib/router/index.js:330:12)\nTypeError: Cannot read property 'id' of undefined\nat SessionsRouter.handleUpdateToRevocableSession (/var/app/current/node_modules/parse-server/lib/Routers/SessionsRouter.js:109:25)\nat /var/app/current/node_modules/parse-server/lib/Routers/SessionsRouter.js:154:23\nat /var/app/current/node_modules/parse-server/lib/PromiseRouter.js:259:9\nat /var/app/current/node_modules/parse-server/lib/PromiseRouter.js:295:9\nat Layer.handle as handle_request\nat next (/var/app/current/node_modules/express/lib/router/route.js:131:13)\nat Route.dispatch (/var/app/current/node_modules/express/lib/router/route.js:112:3)\nat Layer.handle as handle_request\nat /var/app/current/node_modules/express/lib/router/index.js:277:22\nat Function.process_params (/var/app/current/node_modules/express/lib/router/index.js:330:12)\n"},{"labels":["bug"],"text":"When I increment number in beforeSave and the result value is 0, the value is not returned in the saved object.\r\n\r\n**STEPS TO REPRODUCE:**\r\n\r\nLet's create MyObject class with `points` and `num` number columns. **Manually** create a MyObject instance that has 10 in `points` column and 10 in `num` column. And define those functions in cloud code:\r\n\r\n```\r\nParse.Cloud.define(\"myFunction\", function (request, response) {\r\n    var MyObject = Parse.Object.extend(\"MyObject\");\r\n    var myObject = new MyObject();\r\n    myObject.id = request.params.objectId;\r\n    myObject.save(null).then(\r\n        function (savedObject) {\r\n            console.log(\"points: \" + savedObject.get(\"points\")); //this is undefined\r\n            console.log(\"num: \" + savedObject.get(\"num\")); //this is 1\r\n            response.success(\"success\");\r\n        });\r\n});\r\n```\r\n```\r\nParse.Cloud.beforeSave(\"MyObject\", function (request, response) {\r\n    var objectToSave = request.object;\r\n    if (!request.master) {\r\n        objectToSave.increment(\"points\", -10);\r\n        objectToSave.increment(\"num\", -9);\r\n    }\r\n    response.success();\r\n});\r\n```\r\n\r\nNow call `myFunction` with objectId of the MyObject instance in parameter `objectId`. When the function performs the save, number columns will be incremented in beforeSave, `points` by -10 and `num` by -9. So now `points` will be 0 and `num` will be 1.\r\nThe `savedObject` in `myFunction` should contain the updated `points` value and the updated `num` value. But because the updated (**incremented**) numeric value of the field is 0, `savedObject.get(\"points\")` is undefined. All other values in response, like the `num` that is 1, are contained in the `savedObject`. If the `points` result value would be different than 0, like if I had 20 points and increment -10, I get the `points` value in the `savedObject` as expected.\r\n\r\n## IMPORTANT:\r\n1) If you create new MyObject inside `myFunction`, set points and num to 10 and then call `save`, calling the `beforeSave`, **it works as expected, the issue doesn't happen.**\r\n2) If you use `objectToSave.set(\"points\", 0);` instead of `increment to 0` in `beforeSave`, **it works as expected, the issue doesn't happen.**\r\n\r\n\r\nWe have many functions that rely on this - user buys some stuff for virtual currency and if it costs exactly as the money he has, his balance will not be updated in the UI. For now, we are using an ugly workaround.\r\n\r\n**Tested on ParseServer 2.6.2**, 2.2.18, 2.2.19.\r\n"},{"labels":["bug",null],"text":"Let's say you have a class called Foo and you have a business rule that says that no client is allowed to write data to a property called \"secret\".  So, you create a \n\n```\nParse.Cloud.beforeSave\n```\n\nmethod and inspect\n\n```\nrequest.object.attributes\n```\n\nand then call response.error if \"secret\" is found.  In this case, since the request has been rejected, you would not expect any schema updates to be made.  However, in this scenario, the schema gets updated and \"secret\" is added to the schema (if it's not already there) with whatever data type the bad request had for it.\n\nMy understanding of the code is that the reason for this is because, in RestWrite.prototype.execute, \n\n```\n_this.validateSchema();\n```\n\nis called before \n\n```\n_this.runBeforeTrigger()\n```\n\nI don't really know if this is considered a bug or not to most people, but at least I consider it a bug.  I'm just wondering if fixing it seems easy or possible.\n"},{"labels":["bug",null,null],"text":"My app hosted on NodeChef allows users to log in using Facebook through Parse however it sends a verification email with a link that does not work. Firstly, it should not be sending a verification email as they have logged in using Facebook. Can you please explain why this happens?\n- **Server**\n  NodeChef\n- **Database**\n  MongoDB on NodeChef\n"},{"labels":["bug",null],"text":"Here is my code:\n\n``` node\nvar express = require('express');\nvar ParseServer = require('parse-server').ParseServer;\n\nvar app = express();\n\nvar httpServer = require('http').createServer(app);\nhttpServer.listen(2337);\n\nParseServer.createLiveQueryServer(httpServer, {\n  appId: 'appId',\n  masterKey: 'masterKey',\n  serverURL: 'http://localhost:1337/parse',\n  redisURL: 'redis://localhost:6379'\n});\n```\n\nAnd its output:\n\n```\n/path/to/project/node_modules/.npminstall/parse-server/2.2.18/parse-server/lib/LiveQuery/ParseLiveQueryServer.js:85\n    _logger2.default.verbose('Support key pairs', this.keyPairs);\n                    ^\n\nTypeError: Cannot read property 'verbose' of undefined\n    at new ParseLiveQueryServer (/path/to/project/node_modules/.npminstall/parse-server/2.2.18/parse-server/lib/LiveQuery/ParseLiveQueryServer.js:85:21)\n    at Function.createLiveQueryServer (/path/to/project/node_modules/.npminstall/parse-server/2.2.18/parse-server/lib/ParseServer.js:417:14)\n    at Object.<anonymous> (/path/to/project/index.js:15:13)\n    at Module._compile (module.js:541:32)\n    at Object.Module._extensions..js (module.js:550:10)\n    at Module.load (module.js:458:32)\n    at tryModuleLoad (module.js:417:12)\n    at Function.Module._load (module.js:409:3)\n    at Module.runMain (module.js:575:10)\n    at run (bootstrap_node.js:352:7)\n```\n"},{"labels":["bug"],"text":"Describe your issue in as much detail as possible:\n\nIf i have a Object field and i want to store a key containing the date object, then the parse.com used to store it as a date object whereas the parse-server stores it as a date string. The case and reproduction steps are listed below:\n\nSay i have a date object:\n\n`var dateToSave  = new Date();`\n`var dateObject = {lastViewed: dateToSave}`\n`var DummyDateCollection = new Parse.Object.extend('DummyDateCollection');`\n`var dc = new DummyDateCollection({dateObjectField: dateObject});`\n`return dc.save().then(function(dc){ console.warn(dc)});`\n\n#### Expected Result\n\nThe expected result for the field \"dateObjectField\" is:\n{\"lastViewed\":{\"__type\":\"Date\",\"iso\":\"2016-08-29T04:46:28.903Z\"}}\n#### Actual Outcome\n\n{\"lastViewed\":\"2016-08-29T04:46:28.903Z\"}\n### Environment Setup\n- **Server**\n  - parse-server version: 2.2.18\n  - Operating System: Linux\n  - Localhost or remote server? : AWS\n- **Database**\n  - MongoDB version: 3.0.2\n  - Storage engine:  RocksDB\n  - Localhost or remote server? : AWS\n"},{"labels":["bug",null],"text":"When trying to reset password on User who has empty `email` field, i.e. only has the email in `username` field, it throws error `No user found with email`\n### Steps to reproduce\n1. Register new user using an email and password. E.g. set `user.Username = \"a@b.c\"` - do not set `email` field.\n2. When registered, request password reset\n#### Expected Results\n\n\"This will attempt to match the given email with the user’s email or username field, and will send them a password reset email.\" as stated in [docs](http://parseplatform.github.io/docs/dotnet/guide/).\n#### Actual Outcome\n\nReturns error: No user found with email a@b.c\n"},{"labels":["bug"],"text":"# Env:\n\nParse Server 2.2.16\nParse SDK 1.9.0\nAWS\n# Problem\n\nConsider this code run on the Client\n\n```\nvar Query = new Parse.Query(\"Books\");\nQuery.limit(10000);\nQuery.find().then(\n   function(books){\n         // do something with books\n        books = [] // clean up RAM\n   }\n)\n```\n\nin this example the moment the result is returned to the client, the memory at the client side hike to 800MB, but when the line `books = []` execute the memory usage back to normal around 70MB.\n\nThe situation in Parse Server (server side) : the moment I request the result, the memory usage hikes also to 1GB in this example but the difference is that it never goes back to normal till I have to restart the node.\n\nIs there any workaround to fix such issue?\n"},{"labels":["bug"],"text":"### Issue Description\n\nWhen a file is uploaded from the Dashboard for a Class with a File column, the saved filename is different to what Parse.com produces and consequently the client applications such as the Dashboard displays a truncated version of the filename.\n### Steps to reproduce\n1. Open Dashboard and create a new class (i.e. Customer). Add a column of type File. (i.e. LicenseFile)\n2. Add a record. Double click on the cell for the File type column and upload a File. (i.e. LICENSE.txt)\n3. After the upload is complete, note the name of the file in the cell. **(NSE.txt)**\n4. Now use CURL to read the record:\n   curl -X GET -H \"X-Parse-Application-Id: 00000\" -H \"X-Parse-Master-Key: 11112\" -H \"Content-Type: application/json\" http://localhost:1337/parse/Classes/Customer\n\n```\nResult is:\n{\n    \"results\": [\n        {\n            \"LicenseFile\": {\n                \"__type\": \"File\",\n                \"name\": \"fcb209ccfab5b87912c61cd32b2ac47f_LICENSE.txt\",\n                \"url\": \"http://localhost:1337/parse/files/00000/fcb209ccfab5b87912c61cd32b2ac47f_LICENSE.txt\"\n            },\n            \"createdAt\": \"2016-07-27T23:46:07.763Z\",\n            \"objectId\": \"9BDB1sc6gj\",\n            \"updatedAt\": \"2016-07-27T23:46:07.763Z\"\n        }\n    ]\n}\n\n```\n\n**Note the filename: fcb209ccfab5b87912c61cd32b2ac47f_LICENSE.txt**\n1. Create the same class in Parse.com app and use CURL to get the object.\n\nResult is:\n\n```\n{\n    \"results\": [\n        {\n            \"LicenseFile\": {\n                \"__type\": \"File\",\n                \"name\": \"tfss-59be62cc-7cc0-4aec-9618-ecb2df31f734-LICENSE.txt\",\n                \"url\": \"http://files.parsetfss.com/6eb5be43-2dfb-4dd7-8297-358c52aa8260/tfss-59be62cc-7cc0-4aec-9618-ecb2df31f734-LICENSE.txt\"\n            },\n            \"createdAt\": \"2016-07-19T02:01:31.133Z\",\n            \"objectId\": \"oAwS5kjYZe\",\n            \"updatedAt\": \"2016-07-27T01:40:03.467Z\"\n        }\n    ]\n}\n```\n\n**Note the filename: tfss-59be62cc-7cc0-4aec-9618-ecb2df31f734-LICENSE.txt**\n\nAs you can see, the random string prefix in the Parse.com version has got the dashes. \n\nWhen the Dashboard reads the name value, it uses an offset (i.e. 37 or 42 depending on whether the filename starts with tfss- or not) to extract the original uploaded filename. Because of the missing dashes, this results in a truncated filename for display.\n\n**The display issue can be easily fixed in the Dashboard, but it is best fixed in the Server as other clients such as Mobile apps using the SDKs are probably experiencing the same issue.**\n#### Expected Results\n\nfilename: LICENSE.txt\n#### Actual Outcome\n\nfilename: NSE.txt\n### Environment Setup\n- **Server**\n  - parse-server version: 2.2.16\n  - Operating System:     OSX 10.11.5\n  - Hardware:            MacBook Pro 2.8GHz Core i7\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): Localhost\n- **Database**\n  - MongoDB version: 3.2.4\n  - Storage engine:  wiredTiger\n  - Hardware:       MacBook Pro 2.8GHz Core i7\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): Localhost\n### Logs/Trace\n\nYou can turn on additional logging by configuring VERBOSE=1 in your environment.\n\nNot applicable\n### Suggested Fix\n\nOne fix would be to save the files with dashes in the filename. I have tested this and seems to work. Happy to send a PR for review.\n### Related Issue\n\n[Pull Request](https://github.com/ParsePlatform/parse-server/pull/2001)\n"},{"labels":["bug",null],"text":"- [X] You've met the prerequisites: https://github.com/ParsePlatform/parse-server/wiki/Parse-Server-Guide#prerequisites.\n- [X] You're running the latest version of Parse Server: https://github.com/ParsePlatform/parse-server/releases\n- [X] You've searched through existing issues: https://github.com/ParsePlatform/Parse-Server/issues?utf8=%E2%9C%93&q=is%3Aissue Chances are that your issue has been reported or resolved before.\n- [X] You have filled out every section below. Issues without sufficient information are more likely to be closed.\n## \n### Description\n\nWe are still using parse server 2.2.6 since all upgrade attempts since this point have broken the facebook integration, as seen in #1579 and #1846.\n\nThis has reportedly been fixed, but for me `Parse.FacebookUtils.isLinked(user)` still returns false in all versions above 2.2.6 (tried upgrading to 2.2.16 today).\n\nI also tried querying to get the user from the server rather than the request as suggested in #1846, but still no luck :(\n### Steps to reproduce\n1. Login into Facebook / Parse in Unity\n2. Call following function on Parse\n\n```\nParse.Cloud.define('checkLogin', function(request, response)\n{\n    if (Parse.FacebookUtils.isLinked(request.user))\n    {\n        console.log('facebook linked');\n        response.success('facebook linked');\n    }\n    else\n    {\n        console.log('facebook not linked');\n        response.error('facebook not linked');\n    }\n});\n```\n#### Expected Results\n\n`Parse.FacebookUtils.isLinked(request.user)` returns true like it does in 2.2.6\n#### Actual Outcome\n\n`Parse.FacebookUtils.isLinked(request.user)` returns false when server is on higher version (for example 2.2.16)\n### Environment Setup\n- **Server**\n  - Heroku (Hobby Dyno)\n  - parse-server version: 2.2.16\n- **Database**\n  - mLab (Heroku Addon)\n  - MongoDB version: I have '2.1.18' in package.json, which we did to fix an error where we would always timeout (#1855), but when I go to mLab it says 3.0.10?\n### Logs/Trace\n\n```\nJul 20 00:31:02 torque-dev app/web.1:  verbose: POST /parse/functions/checkLogin { host: 'torque-dev.herokuapp.com', \nJul 20 00:31:02 torque-dev app/web.1:    connection: 'close', \nJul 20 00:31:02 torque-dev app/web.1:    'user-agent': 'UnityPlayer/5.3.5p4 (http://unity3d.com)', \nJul 20 00:31:02 torque-dev app/web.1:    accept: '*/*', \nJul 20 00:31:02 torque-dev app/web.1:    'accept-encoding': 'identity', \nJul 20 00:31:02 torque-dev app/web.1:    'content-type': 'application/json', \nJul 20 00:31:02 torque-dev app/web.1:    'x-parse-app-build-version': '1.8.4', \nJul 20 00:31:02 torque-dev app/web.1:    'x-parse-app-display-version': 'leagueofmonkeys.torqueburnout', \nJul 20 00:31:02 torque-dev app/web.1:    'x-parse-application-id': 'torque-burnout', \nJul 20 00:31:02 torque-dev app/web.1:    'x-parse-client-version': 'net-unity1.7.0.0', \nJul 20 00:31:02 torque-dev app/web.1:    'x-parse-installation-id': 'dff66513-b624-4612-8a17-e01365907e91', \nJul 20 00:31:02 torque-dev app/web.1:    'x-parse-os-version': 'MS-7885 (MSI)', \nJul 20 00:31:02 torque-dev app/web.1:    'x-parse-session-token': 'r:cd4615b72566d0fb5d1466f6f1d01942', \nJul 20 00:31:02 torque-dev app/web.1:    'x-parse-windows-key': '90b8148d-627c-4c25-8f2e-e3c02acd1f85', \nJul 20 00:31:02 torque-dev app/web.1:    'x-unity-version': '5.3.5p4', \nJul 20 00:31:02 torque-dev app/web.1:    'x-request-id': 'b9a066e0-0008-48d0-a7c9-4fb2e5683d3c', \nJul 20 00:31:02 torque-dev app/web.1:    'x-forwarded-for': '27.32.138.126', \nJul 20 00:31:02 torque-dev app/web.1:    'x-forwarded-proto': 'http', \nJul 20 00:31:02 torque-dev app/web.1:    'x-forwarded-port': '80', \nJul 20 00:31:02 torque-dev app/web.1:    via: '1.1 vegur', \nJul 20 00:31:02 torque-dev app/web.1:    'connect-time': '1', \nJul 20 00:31:02 torque-dev app/web.1:    'x-request-start': '1468999861570', \nJul 20 00:31:02 torque-dev app/web.1:    'total-route-time': '0', \nJul 20 00:31:02 torque-dev app/web.1:    'content-length': '2' } {} \nJul 20 00:31:02 torque-dev app/web.1:  facebook not linked \nJul 20 00:31:02 torque-dev app/web.1:  verbose: error: code=141, message=facebook not linked \nJul 20 00:31:02 torque-dev heroku/router:  at=info method=POST path=\"/parse/functions/checkLogin\" host=torque-dev.herokuapp.com request_id=b9a066e0-0008-48d0-a7c9-4fb2e5683d3c fwd=\"27.32.138.126\" dyno=web.1 connect=1ms service=551ms status=400 bytes=533\n```\n"},{"labels":["bug"],"text":"We've been having issues with null authData values since migrating our customers to our own parse-server.\n\nThings that we thought would have fixed the issue:\n- https://github.com/ParsePlatform/parse-server/commit/1b8e613dfb6f114878779e1012a33973fa273c2e\n- https://github.com/ParsePlatform/parse-server/commit/5ba7bad5074b343bd43492d6c877f64bdf48d572\n\nThere may be a couple more but I'm beginning to realize that the core of this issue is that _we're allowing null authData_ values to be written to the database.\n\nThat, along with the fact that there's no filtering on the query side, leads to clients getting null values in user.authData.\n\n(Probably Android should deal with this, because it doesn't seem like a big deal in iOS-land, but that's the topic of another discussion?)\n\nIn any case, #2320 should fix this (partially) by not letting the nulls leak out of the parse-server. We may want to stop writing nulls as well.\n"},{"labels":["bug",null],"text":"Describe your issue in as much detail as possible.\n\n**_User** class has public read/write CLP; **UserProfile** class has <user> read/write CLP\n\nAs a user, when running a GET on a **_User** object which contains a pointer to a **UserProfile** object, the result returns a non-existent value for UserProfile.\n\nWhen running the same using MasterKey, result comes back as expected. When changing CLPs on UserProfile to public read/write, things work as expected. \n\nThis scenario works in our current implementation on Parse.com.\n### Steps to reproduce\n\nPlease include a detailed list of steps that reproduce the issue. Include curl commands when applicable.\n1. Create a **UserProfile** class that has a field <user> which is a pointer to **_User**\n2. Add a CLP on this class with only <user> read/write permissions (no Public permissions)\n3. Create a pointer field in **_User** called <userProfile> which which points to **UserProfile** (hence creating a two-way relationship)\n4. Create an object in both **_User** and **UserProfile** which point to each other via the <userProfile> and <user> fields respectively.\n5. Query the **_User** object as the user themself and `include=userProfile`\n#### Expected Results\n\nYou would expect something like the following\n\n```\n{\n    \"createdAt\": \"2015-10-05T07:55:55.124Z\",\n    \"email\": \"xxx@yyy.com\",\n    \"name\": \"Users Name \",\n    \"objectId\": \"ungxXVTqP4\",\n    \"sessionToken\": \"r:xxxxxxxxxxxx\",\n    \"updatedAt\": \"2015-10-05T07:55:56.791Z\",\n    \"userProfile\": {\n        \"__type\": \"Object\",\n        \"className\": \"UserProfile\",\n        \"createdAt\": \"2015-10-05T07:55:55.679Z\",\n        \"objectId\": \"DbGP97sT7j\",\n        \"updatedAt\": \"2015-10-05T07:55:55.679Z\",\n        \"user\": {\n            \"__type\": \"Pointer\",\n            \"className\": \"_User\",\n            \"objectId\": \"ungxXVTqP4\"\n        }\n    },\n    \"username\": \"user@name.com\"\n}\n```\n#### Actual Outcome\n\n```\n{\n    \"createdAt\": \"2015-10-05T07:55:55.124Z\",\n    \"email\": \"xxx@yyy.com\",\n    \"name\": \"Users Name \",\n    \"objectId\": \"ungxXVTqP4\",\n    \"sessionToken\": \"r:xxxxxxxxxxxx\",\n    \"updatedAt\": \"2015-10-05T07:55:56.791Z\",\n    \"username\": \"user@name.com\"\n}\n```\n### Environment Setup\n- **Server**\n  - parse-server version: 2.2.15\n  - Operating System:     Mac OSX 10.11.5 (local NodeJS)\n  - Hardware:             MacBook Pro (Retina, 13-inch, Late 2013)\n  - Localhost or remote server? Localhost\n- **Database**\n  - MongoDB version: 3.2.1\n  - Storage engine:  wiredTiger\n  - Hardware:        Local - same as above\n  - Localhost or remote server? Local\n### Logs/Trace\n\nYou can turn on additional logging by configuring VERBOSE=1 in your environment.\n\nThe trace is the _Actual Outcome_ section above with some obfuscation.\n"},{"labels":["bug",null],"text":"### Issue Description\n\nA simple query with nested $ORs is not working. Instead, it returns ERROR 105 - Invalid key name: 0\n### Steps to reproduce\n\nThis WORKS - Parse Hosted Server:\n[https://api.parse.com/1/classes/AnyCollection?where={\"$or\":[{\"$or\":[{\"x\":1},{\"x\":2}]},{\"$or\":[{\"x\":3},{\"x\":4}]}]}](https://api.parse.com/1/classes/AnyCollection?where={\"$or\":[{\"$or\":[{\"x\":1},{\"x\":2}]},{\"$or\":[{\"x\":3},{\"x\":4}]}]})\n\nThis BREAKS - Local Parse Server:\n[http://localhost:1337/parse/classes/AnyCollection?where={\"$or\":[{\"$or\":[{\"x\":1},{\"x\":2}]},{\"$or\":[{\"x\":3},{\"x\":4}]}]}](http://localhost:1337/parse/classes/AnyCollection?where={\"$or\":[{\"$or\":[{\"x\":1},{\"x\":2}]},{\"$or\":[{\"x\":3},{\"x\":4}]}]})\nWIth ERROR`{\"code\":105,\"message\":\"Invalid key name: 0\"}`\n#### Expected Results\n\nThe query must run with no errors and returns 0 or more values, depending on data in the database. This is happening correctly in the Parse Hosted server. However in my LOCAL Parse Server, it is firing an error.\n#### Actual Outcome\n\nAn error happens when the query runs, even in a COMPLETELY EMPTY Application:\n\nCLIENT SIDE: `{\"code\":105,\"message\":\"Invalid key name: 0\"}`\nSERVER SIDE:`throw new Parse.Error(Parse.Error.INVALID_KEY_NAME, 'Invalid key name: ' + key);`\n(DatabaseController.js:99)\n### Environment Setup\n- **Server**\n  - parse-server version: 2.2.15\n  - Operating System:     Windows 8.1\n  - Hardware:             Intel i7, 16Gb RAM\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): [FILL THIS OUT]\n- **Database**\n  - MongoDB version: 3.0.9\n  - Storage engine:  Windows 8.1\n  - Hardware:        Intel i7, 16Gb RAM\n  - Localhost or remote server? LOCAL HOSTED\n### Logs/Trace\n\nI did not find any useful information with VERBOSE. However, after a few hours debbuging I noticed that when the function:\n`_this10.reduceInRelation(className, query, schemaController);`\nis called, it transforms the query from\n`{\"$or\":[{\"$or\":[{\"x\":1},{\"x\":2}]},{\"$or\":[{\"x\":3},{\"x\":4}]}]}`\nto:\n`{\"$or\":[[null,null],[null,null]]}`\n\nThen when `validateQuery(query)` is called for each of the $or's, it receives [null,null] as arguments and then breaks.\n\nI could not understand why this is happening, but I guess this is the source of the problem.\n\nTHANKS A LOT!!\n"},{"labels":["bug",null],"text":"### Issue Description\n\nWhile performing a query through the REST API:\n\n```\ncurl 'http://$IP:1337/parse/classes/SectionItem' --data-binary '{\"where\":\n{\"$relatedTo\":{\"object\" {\"__type\":\"Pointer\",\"className\":\"Class\",\"objectId\":\"uAgTxj5kIt\"},\"key\":\"items\"}},\n\"include\":\"<lots and lots of nested classes>\"\n```\n\n I get the following response:\n\n```\nUncaught internal server error. [TypeError: Cannot read property '__type' of null] TypeError: Cannot read property '__type' of null\n    at findPointers (/usr/lib/node_modules/parse-server/lib/RestQuery.js:778:15)\n    at findPointers (/usr/lib/node_modules/parse-server/lib/RestQuery.js:753:32)\n    at findPointers (/usr/lib/node_modules/parse-server/lib/RestQuery.js:788:10)\n    at findPointers (/usr/lib/node_modules/parse-server/lib/RestQuery.js:788:10)\n    at findPointers (/usr/lib/node_modules/parse-server/lib/RestQuery.js:753:32)\n    at includePath (/usr/lib/node_modules/parse-server/lib/RestQuery.js:644:18)\n    at RestQuery.handleInclude (/usr/lib/node_modules/parse-server/lib/RestQuery.js:625:22)\n    at /usr/lib/node_modules/parse-server/lib/RestQuery.js:630:22\n    at run (/usr/lib/node_modules/parse-server/node_modules/babel-polyfill/node_modules/core-js/modules/es6.promise.js:89:22)\n    at /usr/lib/node_modules/parse-server/node_modules/babel-polyfill/node_modules/core-js/modules/es6.promise.js:102:28\n```\n\nI think this could be due to missing pointers\n### Environment Setup\n- **Server**\n  - parse-server version: 2.2.15\n  - Operating System:     Debian 8.5\n  - Localhost or remote server?: DigitalOcean\n- **Database**\n  - MongoDB version: 3.0.11\n  - Localhost or remote server?: ObjectRocket\n"},{"labels":["bug",null],"text":"Experiencing exception while saving a ParseObject with CurrentInstallation set as a property.\n\n`Parse.ParseException: at least one ID field (deviceToken, installationId) must be specified in this operation`\n\nI have verified that installation ID is set on the CurrentInstallation object before calling SaveAsync.\n\nThe code below will save to parse-server on first run when the app is installed. Then, each time the code is run it throws an exception and does not save to parse-server.\n\nBelow is the gist of the code. For full code see this repo link:\nhttps://github.com/thewizster/hello-parse-installation/blob/master/HelloParse/HelloViewModel.cs\n\n```\nParseInstallation installation = ParseInstallation.CurrentInstallation;\nvar instId = installation.InstallationId.ToString();\nvar world = new ParseObject(\"World\");\nworld[\"message\"] = \"Hello world!\";\nworld[\"installation\"] = installation; // if removed saves every time without exception\nworld.SaveAsync();\n```\n### Steps to reproduce\n\nThis can be reproduced using this sample code at:\nhttps://github.com/thewizster/hello-parse-installation\n1. Build and run the app (fresh install on device). ParseObject will save just fine.\n2. Close the app and re-launch. Exception will be thrown and ParseObject will not be saved.\n3. Repeat step 2 as many times as you want.\n4. Uninstall the app and you can start over at step 1.\n#### Expected Results\n\nA new ParseObject (Class: World) should be saved to parse-server and have a pointer to the installation of the device that saved it. Here is an example from the MongoDb of a successful object saved.\n\n```\n{ \n    \"_id\" : \"EImkTziqdr\", \n    \"message\" : \"Hello world!\", \n    \"_p_installation\" : \"_Installation$iiBDWyIHfc\", \n    \"_updated_at\" : ISODate(\"2016-06-17T14:15:09.248+0000\"), \n    \"_created_at\" : ISODate(\"2016-06-17T14:15:09.248+0000\")\n}\n```\n#### Actual Outcome\n\nWhen calling SaveAsync on the new ParseObject the save will fail and result in the following exception:\n\n`Parse.ParseException: at least one ID field (deviceToken, installationId) must be specified in this operation`\n### Environment Setup\n\nParse .NET SDK v1.7.0\nparse-server v2.2.13\nXamarin.iOS 9.8.0.323\niOS v9.3.2\nVisual Studio 2015\n- **Server**\n  - parse-server version: 2.2.13\n  - Operating System:     Azure/Windows\n  - Hardware:             Azure cloud\n  - Localhost or remote server? (AWS, Heroku, Azure, Digital Ocean, etc): Azure\n- **Database**\n  - MongoDB version: mongod version: 3.0.9\n  - Storage engine:  ???\n  - Hardware:       mLab Cloud\n  - Localhost or remote server? (AWS, mLab, ObjectRocket, Digital Ocean, etc): mLab\n### Logs/Trace\n\nApp is updating and saving CurrentInstallation upon launch. Works.\n\n```\n�[36mverbose�[39m: POST /parse/classes/_Installation { 'cache-control': 'no-cache',\n  connection: 'keep-alive',\n  'content-length': '319',\n  'content-type': 'application/json',\n  host: 'myparseserverhost.azurewebsites.net',\n  'max-forwards': '10',\n  'x-parse-application-id': 'myAppId',\n  'x-parse-client-version': 'net-xamarin-ios1.7.0.0',\n  'x-parse-installation-id': '47562ac6-cd5c-4fbc-aaac-afdfa0614beb',\n  'x-parse-app-build-version': '1.0',\n  'x-parse-app-display-version': '1.0',\n  'x-parse-os-version': '9.3.2',\n  'x-parse-windows-key': '',\n  'x-liveupgrade': '1',\n  'x-arr-log-id': '76e42330-2de1-4b30-b81d-b4fca14d4890',\n  'disguised-host': 'myparseserverhost.azurewebsites.net',\n  'x-site-deployment-id': 'mydeployid',\n  'x-original-url': '/parse/classes/_Installation',\n  'x-forwarded-for': '1.1.1.1:52456' } {\n  \"installationId\": \"47562ac6-cd5c-4fbc-aaac-afdfa0614beb\",\n  \"lastStartedAt\": {\n    \"iso\": \"2016-06-17T19:18:53.110Z\",\n    \"__type\": \"Date\"\n  },\n  \"deviceType\": \"ios\",\n  \"timeZone\": \"America/Chicago\",\n  \"localeIdentifier\": \"en-US\",\n  \"parseVersion\": \"1.7.0.0\",\n  \"appVersion\": \"1.0\",\n  \"appIdentifier\": \"com.example.hello-parse\",\n  \"appName\": \"Hello Parse\",\n  \"badge\": 0\n}\n\n�[36mverbose�[39m: {\n  \"response\": {\n    \"updatedAt\": \"2016-06-17T19:18:53.797Z\"\n  }\n}\n```\n\nApp attempts SaveAsync on the new ParseObject. Fails\n\n```\n�[36mverbose�[39m: POST /parse/batch { 'cache-control': 'no-cache',\n  connection: 'keep-alive',\n  'content-length': '80',\n  'content-type': 'application/json',\n  host: 'myparseserverhost.azurewebsites.net',\n  'max-forwards': '10',\n  'x-parse-application-id': 'myAppId',\n  'x-parse-client-version': 'net-xamarin-ios1.7.0.0',\n  'x-parse-installation-id': '47562ac6-cd5c-4fbc-aaac-afdfa0614beb',\n  'x-parse-app-build-version': '1.0',\n  'x-parse-app-display-version': '1.0',\n  'x-parse-os-version': '9.3.2',\n  'x-parse-windows-key': '',\n  'x-liveupgrade': '1',\n  'x-arr-log-id': '5b6fba36-d6bf-4228-9e9f-21787527a605',\n  'disguised-host': 'myparseserverhost.azurewebsites.net',\n  'x-site-deployment-id': 'mydeploymentid',\n  'x-original-url': '/parse/batch',\n  'x-forwarded-for': '1.1.1.1:52456' } {\n  \"requests\": [\n    {\n      \"method\": \"POST\",\n      \"path\": \"/parse/classes/_Installation\",\n      \"body\": {}\n    }\n  ]\n}\n\n�[36mverbose�[39m: {\n  \"response\": [\n    {\n      \"error\": {\n        \"code\": 135,\n        \"error\": \"at least one ID field (deviceToken, installationId) must be specified in this operation\"\n      }\n    }\n  ]\n}\n\n```\n### Client stacktrace\n\n```\n[0:] Parse.ParseException: at least one ID field (deviceToken, installationId) must be specified in this operation\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /Users/builder/data/lanes/3339/39ebb778/source/maccore/_build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/src/mono/external/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:143 \n  at Parse.Internal.InternalExtensions+<>c__DisplayClass13_0`1[TResult].<OnSuccess>b__0 (System.Threading.Tasks.Task t) [0x0003c] in <filename unknown>:0 \n  at System.Threading.Tasks.ContinuationResultTaskFromTask`1[TResult].InnerInvoke () <0x1005de120 + 0x00077> in <filename unknown>:0 \n  at System.Threading.Tasks.Task.Execute () [0x00016] in /Users/builder/data/lanes/3339/39ebb778/source/maccore/_build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/src/mono/external/referencesource/mscorlib/system/threading/Tasks/Task.cs:2502 \n--- End of stack trace from previous location where exception was thrown ---\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /Users/builder/data/lanes/3339/39ebb778/source/maccore/_build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/src/mono/external/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:143 \n  at Parse.Internal.InternalExtensions+<>c__DisplayClass13_0`1[TResult].<OnSuccess>b__0 (System.Threading.Tasks.Task t) [0x0003c] in <filename unknown>:0 \n  at System.Threading.Tasks.ContinuationResultTaskFromTask`1[TResult].InnerInvoke () <0x1005de120 + 0x00077> in <filename unknown>:0 \n  at System.Threading.Tasks.Task.Execute () [0x00016] in /Users/builder/data/lanes/3339/39ebb778/source/maccore/_build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/src/mono/external/referencesource/mscorlib/system/threading/Tasks/Task.cs:2502 \n--- End of stack trace from previous location where exception was thrown ---\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /Users/builder/data/lanes/3339/39ebb778/source/maccore/_build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/src/mono/external/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:143 \n  at Parse.Internal.InternalExtensions+<>c__DisplayClass13_0`1[TResult].<OnSuccess>b__0 (System.Threading.Tasks.Task t) [0x0003c] in <filename unknown>:0 \n  at System.Threading.Tasks.ContinuationResultTaskFromTask`1[TResult].InnerInvoke () <0x1005de120 + 0x00077> in <filename unknown>:0 \n  at System.Threading.Tasks.Task.Execute () [0x00016] in /Users/builder/data/lanes/3339/39ebb778/source/maccore/_build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/src/mono/external/referencesource/mscorlib/system/threading/Tasks/Task.cs:2502 \n--- End of stack trace from previous location where exception was thrown ---\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /Users/builder/data/lanes/3339/39ebb778/source/maccore/_build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/src/mono/external/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:143 \n  at Parse.Internal.InternalExtensions+<>c__DisplayClass13_0`1[TResult].<OnSuccess>b__0 (System.Threading.Tasks.Task t) [0x0003c] in <filename unknown>:0 \n  at System.Threading.Tasks.ContinuationResultTaskFromTask`1[TResult].InnerInvoke () <0x1005de120 + 0x00077> in <filename unknown>:0 \n  at System.Threading.Tasks.Task.Execute () [0x00016] in /Users/builder/data/lanes/3339/39ebb778/source/maccore/_build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/src/mono/external/referencesource/mscorlib/system/threading/Tasks/Task.cs:2502 \n--- End of stack trace from previous location where exception was thrown ---\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /Users/builder/data/lanes/3339/39ebb778/source/maccore/_build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/src/mono/external/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:143 \n  at Parse.Internal.InternalExtensions+<>c__DisplayClass13_0`1[TResult].<OnSuccess>b__0 (System.Threading.Tasks.Task t) [0x0003c] in <filename unknown>:0 \n  at System.Threading.Tasks.ContinuationResultTaskFromTask`1[TResult].InnerInvoke () <0x1005de120 + 0x00077> in <filename unknown>:0 \n  at System.Threading.Tasks.Task.Execute () [0x00016] in /Users/builder/data/lanes/3339/39ebb778/source/maccore/_build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/src/mono/external/referencesource/mscorlib/system/threading/Tasks/Task.cs:2502 \n\n```\n"},{"labels":["bug"],"text":"LiveQuery not triggering event callbacks when using query.containedIn.\n### Steps to reproduce\n\nA) Parse database contains following classes:\n\n```\nProposal = [\n    {\n        objectId: gLbeSQLSkf,\n        itemId: 2iyjvsN1Pi,\n        retailPrice: 31\n    },\n    {\n        objectId: EoJRfZcLth,\n        itemId: Q8t0uSnvKn,\n        Price: 4\n    }\n]\n\nItems = [\n    {itemId: 2iyjvsN2Pi},\n    {itemId: Q8t0uSnvKn}\n]\n```\n\nB) JavaScript nextProps variable contains following \n\n```\nnextProps.items = [\n    {itemId: 2iyjvsN2Pi},\n    {itemId: Q8t0uSnvKn}\n]\n```\n\nC) Code for Query subscription\n\n```\ncomponentWillReceiveProps( nextProps ) {\n    {\n        let proposalQuery = new Parse.Query('Proposal');\n        let items = nextProps.items;\n        let itemPointers = items.map((item) => {\n            let ItemPointer = new Parse.Object(\"Item\");\n            ItemPointer.id = item.itemId;\n            return ItemPointer;\n        }); \n        proposalQuery.containedIn('itemId', itemPointers);\n        var proposalSubscription = proposalQuery.subscribe();\n\n        proposalSubscription.on('create', (proposal) => {\n            console.log('created new proposal');\n        });\n\n        proposalSubscription.on('update', (proposal) => {\n            console.log('updated existing proposal');\n        });     \n    }\n```\n\nE) Change retailPrice in Parse Dashboard from 31 to 30\n\nF) Output from Parse Server (verbose)\n\n```\nverbose: PUT /parse/classes/Proposal/gLbeSQLSkf { host: 'localhost:1337',\n  connection: 'keep-alive',\n  'content-length': '205',\n  origin: 'http://0.0.0.0:4040',\n  'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.84 Safari/537.36',\n  'content-type': 'text/plain',\n  accept: '*/*',\n  referer: 'http://0.0.0.0:4040/apps/idpractice/browser/Proposal',\n  'accept-encoding': 'gzip, deflate',\n  'accept-language': 'en-US,en;q=0.8' } {\n  \"retailPrice\": 30\n}\nverbose: {\n  \"response\": {\n    \"updatedAt\": \"2016-06-17T13:03:20.119Z\"\n  }\n}\n```\n\nG. Subscription 'update' Callback doesn't trigger\n\nH. Remove query.containedIn from query\n\n```\ncomponentWillReceiveProps( nextProps ) {\n    {\n        let proposalQuery = new Parse.Query('Proposal');\n        var proposalSubscription = proposalQuery.subscribe();\n\n        proposalSubscription.on('create', (proposal) => {\n            console.log('added mfr model#: ', proposal.get('manufacturerModelNumber'));\n        });\n\n        proposalSubscription.on('update', (proposal) => {\n            console.log('updated mfr model#: ', proposal.get('manufacturerModelNumber'));\n        });     \n    }\n```\n\nI) Change retailPrice in Parse Dashboard from 30 back to 31\n\nJ) Output from Parse Server (verbose)\n\n```\nverbose: PUT /parse/classes/Proposal/gLbeSQLSkf { host: 'localhost:1337',\n  connection: 'keep-alive',\n  'content-length': '205',\n  origin: 'http://0.0.0.0:4040',\n  'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.84 Safari/537.36',\n  'content-type': 'text/plain',\n  accept: '*/*',\n  referer: 'http://0.0.0.0:4040/apps/idpractice/browser/Proposal',\n  'accept-encoding': 'gzip, deflate',\n  'accept-language': 'en-US,en;q=0.8' } {\n  \"retailPrice\": 31\n}\nverbose: {\n  \"response\": {\n    \"updatedAt\": \"2016-06-17T13:23:43.386Z\"\n  }\n}\n```\n\nK. Subscription 'update' Callback triggers (note: no output from parse server in verbose mode)\n\nL. Demonstrate that query.containedIn works with query.find\n\n```\ncomponentWillReceiveProps( nextProps ) {\n    {\n        let proposalQuery = new Parse.Query('Proposal');\n        let items = nextProps.items;\n        let itemPointers = items.map((item) => {\n            let ItemPointer = new Parse.Object(\"Item\");\n            ItemPointer.id = item.itemId;\n            return ItemPointer;\n        }); \n        proposalQuery.containedIn('itemId', itemPointers);\n        proposalQuery.find({\n            success: function (proposals) {\n                console.log('number of proposal = ' + proposals.length)\n            },\n            error: function(error) {\n                console.log('error: ', error);\n            }\n        });\n    }\n```\n\nM. Console outputs \"number of proposals = 2\"\n#### Expected Results\n\nSee above\n#### Actual Outcome\n\nSee above\n### Environment Setup\n- **Server**\n  - parse-server version: 2.2.12\n  - Operating System:    react-native: 0.26.1 running on iOS 9.3 simulator\n  - Hardware:            iOS 9.3 simulator\n  - Localhost or remote server? Localhost\n- **Database**\n  - MongoDB version: Running mLab \"SandBox\" tier\n  - Localhost or remote server? mLab\n- **Client**\n  - Parse JS API: 1.8.5\n### Logs/Trace\n\nSee above\n"},{"labels":["bug",null],"text":"Please read the following instructions carefully.\n\nMake sure these boxes are checked before submitting your issue -- thanks for reporting issues back to Parse Server!\n- [X ] You've met the prerequisites: https://github.com/ParsePlatform/parse-server/wiki/Parse-Server-Guide#prerequisites.\n- [X ] You're running the latest version of Parse Server: https://github.com/ParsePlatform/parse-server/releases\n- [ X] You've searched through existing issues: https://github.com/ParsePlatform/Parse-Server/issues?utf8=%E2%9C%93&q=is%3Aissue Chances are that your issue has been reported or resolved before.\n- [ X] You have filled out every section below. Issues without sufficient information are more likely to be closed.\n## \n### Issue Description\n\nI currently have the following code which was migrated from and currently works without a problem on Parse.com\n\n```\n            var Truck = Parse.Object.extend(\"Truck\");\n            var truckObject = new Truck();\n            truckObject.id = requestParams.truckId;\n            query.equalTo(\"truck\", truckObject);\n\n            query.include('vendor', 'truck', 'overrideMenu');\n            query.limit(1000);\n\n            return query.find()\n            .then(function(scheduleResults){});\n```\n\nThe `query.find()` call fails with the following exception\n\n`{\"message\":\"Permission denied for this action.\",\"code\":119}`\n\nWhen trouble shooting this issues I noticed that if I remove VENDOR from the INCLUDE function then everything works fine. The VENDOR field is a pointer to a record in the collection called _vendor_ .\n\nThe CLP for collection _vendor_ is as follows:\n\n![2016-06-08_0713](https://cloud.githubusercontent.com/assets/3648751/15893944/8ac2ce36-2d48-11e6-831f-ea2dfe222801.png)\n\nI noticed that when I check the box for _FIND_ permission on the CLP the error goes away. However I feel that this behavior is incorrect since it is a direct pointer load and should be treated as a GET read rather then a FIND read.\n\nAlso passing in _useMasterKey_ also fixes the issue and while in this case it is an acceptable work around I believe the core behavior is wrong when using an _include_ function to load pointer objects with a CLP of GET = false\n### Steps to reproduce\n\nPlease include a detailed list of steps that reproduce the issue. Include curl commands when applicable.\n1. Create a collection object called _collection1_ with a pointer field to collection2\n2. Uncheck the _GET_ permission on the CLP of collection 2\n3. Run a QUERY on collection1 and include a call to the _include_ function so that the full row of collection2 is loaded as well.\n\nThe call will fail with a permission error.\n#### Expected Results\n\nSince I assume that the include does a GET I don't see why the query would fail. My assumption is the the collection2 pointer field would load successfully\n\n`{\"message\":\"Permission denied for this action.\",\"code\":119}`\n\n[FILL THIS OUT]\n### Environment Setup\n- **Server**\n  - parse-server version: 2.15.5\n  - Operating System:    Mac OS X (nodeJS running locally)\n  - Hardware:             Macbook Air\n  - Localhost or remote server? local\n- **Database**\n  - MongoDB version: [3.1.0-1.5\n  - Storage engine:  Dont know\n  - Hardware:       AWS\n  - Localhost or remote server? Remote server running on AWS\n### Logs/Trace\n\nYou can turn on additional logging by configuring VERBOSE=1 in your environment.\n\n[FILL THIS OUT]\n"},{"labels":["bug"],"text":"Making a PUT request to our goal class `https://ourparse/classes/Goal/<goalid>` with the following data:\n\n``` js\n{\n    \"name\":\"lol\",\n    \"startTime\":{\"__type\":\"Date\",\"iso\":\"2016-06-06T07:00:45.653Z\"},\n    \"group\":{\"__type\":\"Pointer\",\"className\":\"Group\",\"objectId\":\"LhQclT1kTc\"},\n    \"type\":\"event\",\n    \"externals\":[]\n}\n```\n\nReturns this:\n\n```\n{\n  \"code\": 111,\n  \"error\": \"schema mismatch for Goal.updatedAt; expected Date but got String\"\n}\n```\n\nWe should look into why that might be the case.\n"},{"labels":["bug",null],"text":"My server is hosted on aws ec2 instance. I am using elastic load balancer. Load balancer is using https. I am using nginx to send all requests on https://mydomain/parse to http://127.0.0.1:1337/parse\n\nwhen i used serverURL as https://mydomain/parse i was getting same problem as [issue 411](https://github.com/ParsePlatform/parse-server/issues/411)\n\n```\n\"error\": {\n    \"code\": 100,\n    \"message\": \"XMLHttpRequest failed: \\\"Unable to connect to the Parse API\\\"\"\n  }\n```\n\n so i modified serverURL to https://localhost:1337/parse . Things started working. but when i save a file object the url in response i get is `http://localhost:1337/parse/files/my-app-id/filename` instead of`https://mydomain/parse/files/my-app-id/filename`. hope it made myself clear. my code segments are given below.\n\nparse server configuration:-\n\n```\nvar api = new ParseServer({\n     ....\n     serverURL: http://localhost:1337/parse,\n     publicServerURL: https://mydomain/parse,\n     ....\n    });\n```\n\nfile object:-\n\n```\nvar file = new Parse.File('file-name.jpg', data);\nfile.save(function (response){\n    console.log(response.url);     //gives http://localhost:1337/parse/files/my-app-id/filename \n  });                                          //instead of https://mydomain/parse/files/my-app-id/filename\n```\n"},{"labels":["bug",null],"text":"### Issue Description\n\nOn hosted Parse we had a construct in our CloudCode where we unset a ParseFile (`User.thumbnail`) in the `beforeSave` of a user object if another field in the object (`User.image`) was dirty. In the `afterSave` we then checked if the object does not have a value for the field (`!User.has(\"thumbnail\")`) and then filled it with a new value. With the new setup this doesn't work anymore because `!User.has(\"thumbnail\")` is never `true` nor is `User.get(\"thumbnail\") == null` in the `afterSave` and therefore the thumbnail will never be set to its new value. \n\nToday I rearranged the code so that the thumbnail generation takes place in the `beforeSave` but maybe there are other people struggling with this exact problem.\n### Steps to reproduce\n1. Use the `beforeSave` of the class User to `unset` a `ParseFile`-field\n2. Check if the field is empty in the `afterSave` with `!request.object.has(\"fieldName\")`\n3. The field is neither `null` nor is `!request.object.has(\"fieldName\")`\n#### Expected Results\n\n`!request.object.has(\"fieldName\")` should be `true` in the `afterSave`\n#### Actual Outcome\n\n`!request.object.has(\"fieldName\")` is `false`\n### Environment Setup\n- **Server**\n  - parse-server version: 2.2.10\n  - Operating System: OSX 10.11.5 / Amazon Linux\n  - Localhost / AWS Elastic Beanstalk\n- **Database**\n  - MongoDB version: 3.2\n  - Storage engine:  default\n  - Localhost / AWS EC2\n"},{"labels":["bug"],"text":"Deleting a schema throws error 500 (Internal server error.) if there are some CLPs defined for the class.\n\nThe schema got deleted, but the error is still thrown. It looks like `mongoSchema[field].startsWith('relation<')` is ran for the _metadata attribute and it shouldn't be.\n### Steps to reproduce\n1. Create schema\n\n```\ncurl -X POST \\\n-H \"X-Parse-Application-Id: WB_API\" \\\n-H \"X-Parse-Master-Key: superSecretMasterKey\" \\\n-H \"Content-Type: application/json\" \\\n-d '\n{\n  \"className\": \"City\",\n  \"fields\": {\n  \"name\": {\n    \"type\": \"String\"\n  }\n}\n}' \\\n  http://localhost:1337/parse/schemas/City\n```\n1. The schema is created without explicit CLPs. You can see that in the Mongo database _SCHEMA, where the definition for this class have not _metadata attribute\n   ![parse_mongo_1](https://cloud.githubusercontent.com/assets/1017032/15580012/b0a8ba12-236f-11e6-8c40-9e09b74bc9dc.jpg)\n2. Create any CPLs for the class\n   ![parse_clps](https://cloud.githubusercontent.com/assets/1017032/15580078/f4c62ea0-236f-11e6-8389-630f61fa373b.jpg)\n3. The class now have _metadata in Mongo _SCHEMA\n   ![parse_mongo_2](https://cloud.githubusercontent.com/assets/1017032/15580586/eea35dde-2371-11e6-80db-aa0053199e90.jpg)\n4. Delete the class\n\n```\ncurl -X DELETE \\\n-H \"X-Parse-Application-Id: WB_API\" \\\n-H \"X-Parse-Master-Key: superSecretMasterKey\" \\\n-H \"Content-Type: application/json\" \\\n  http://localhost:1337/parse/schemas/City\n```\n#### Expected Results\n\nThe class is deleted. No errors.\nNote: The class have no objects.\n#### Actual Outcome\n\nThe class is deleted, but Error 500 is thrown.\n\n```\n{\"code\":1,\"message\":\"Internal server error.\"}\n```\n### Environment Setup\n- **Server**\n  - parse-server version: 2.2.10\n  - Operating System: OSX 10.11.5\n  - Localhost or remote server? Localhost\n- **Database**\n  - MongoDB version: 3.2.5\n  - Storage engine: wiredTiger\n  - Localhost or remote server? Localhost\n### Logs/Trace\n\n```\nerror: Uncaught internal server error. [TypeError: mongoSchema[field].startsWith is not a function] TypeError: mongoSchema[field].startsWith is not a function\n    at /Users/zlatko/Projects/wattbikehub-api/node_modules/parse-server/lib/Routers/SchemasRouter.js:99:31\n    at Array.filter (native)\n    at removeJoinTables (/Users/zlatko/Projects/wattbikehub-api/node_modules/parse-server/lib/Routers/SchemasRouter.js:97:47)\n    at /Users/zlatko/Projects/wattbikehub-api/node_modules/parse-server/lib/Routers/SchemasRouter.js:122:12\n    at run (/Users/zlatko/Projects/wattbikehub-api/node_modules/parse-server/node_modules/babel-polyfill/node_modules/core-js/modules/es6.promise.js:89:22)\n    at /Users/zlatko/Projects/wattbikehub-api/node_modules/parse-server/node_modules/babel-polyfill/node_modules/core-js/modules/es6.promise.js:102:28\n    at flush (/Users/zlatko/Projects/wattbikehub-api/node_modules/parse-server/node_modules/babel-polyfill/node_modules/core-js/modules/_microtask.js:18:9)\n    at nextTickCallbackWith0Args (node.js:420:9)\n    at process._tickDomainCallback (node.js:390:13)\n```\n"},{"labels":["bug",null,null],"text":"See #1855. \n"},{"labels":["bug"],"text":"The issue here is similar to the issue reported in #655 and #1697 but in this case the param is a list of dates instead of an one object of type date.\nIn Parse.com server works perfectly and in Parse-server running locally it is not works.\n\n**Test**\nIn order to test this issue I am calling a cloud function _checkDateList_ from my app. and I send two kind of params, first a Object of type Date and second a list of objects each one of type Date. Regarding the first parameter everything goes ok thanks to fix [Pass dates to cloud code functions](https://github.com/andrewchae/parse-server/commit/684617f4c688b5131fa804a0ebb1bc9994e9f2fc) but regarding the second parameter I think that we have a bug.\n\n**Software versions**\n- Parse-iOS-1.12.0\n- parse server ver 2.2.10.\n\n**Function definition**\n\n``` javascript\nParse.Cloud.define(\"checkDateList\", function(request, response) {\n    //Test of one object of type Date\n    console.log('request.params.date: ' + request.params.date)\n    var date  = request.params.date\n    console.log('date : ' + date)\n    console.log('date.getTime(): ' + date.getTime())\n\n    //Test list of object each one of type Date\n    console.log('request.params.dateList: ' + request.params.dateList)\n    console.log('request.params.dateList[0]: ' + request.params.dateList[0])\n    var isoDate = request.params.dateList[0]\n    console.log('isoDate : ' + isoDate)\n    console.log('isoDate.getTime(): ' + isoDate.getTime)\n\n    if (isoDate.__type == 'Date') {\n        var date = new Date(isoDate.iso)\n        console.log('date : ' + date)\n        console.log('date.getTime(): ' + date.getTime())\n     }\n\n```\n\n**Parse Server verbose log**\n\n```\n$ VERBOSE=1  npm start\n\n> troupefithrk@3.0.0 start /Users/<my name>/CODE/iDT/TroupeFit/troupefit-server\n> node index.js\n\nparse-server-example running on port 1337.\nverbose: POST /parse/functions/submitAvailability { host: 'localhost:1337',\n  'x-parse-client-version': 'i1.12.0',\n  accept: '*/*',\n  'x-parse-session-token': 'r:<parse session token>',\n  'x-parse-application-id': ':<parse application id>',\n  'x-parse-client-key': '<parse client key>',\n  'x-parse-installation-id': <'parse installation id>',\n  'x-parse-os-version': '9.3 (15E65)',\n  'accept-language': 'en-us',\n  'accept-encoding': 'gzip, deflate',\n  'content-type': 'application/json; charset=utf-8',\n  'content-length': '141',\n  'user-agent': '<App Product Name>/35 CFNetwork/758.3.15 Darwin/15.4.0',\n  connection: 'keep-alive',\n  'x-parse-app-build-version': '35',\n  'x-parse-app-display-version': '3.1' } {\n  \"date\": {\n    \"__type\": \"Date\",\n    \"iso\": \"2016-05-22T09:00:00.000Z\"\n  },\n  \"dateList\": [\n    {\n      \"__type\": \"Date\",\n      \"iso\": \"2016-05-22T09:00:00.000Z\"\n    }\n  ],\n  \"trainerId\": \"WZp1UiepFh\"\n}\nrequest.params.date: Sun May 22 2016 02:00:00 GMT-0700 (PDT)\ndate : Sun May 22 2016 02:00:00 GMT-0700 (PDT)\ndate.getTime(): 1463907600000\nrequest.params.dateList: [object Object]\nrequest.params.dateList[0]: [object Object]\nisoDate : [object Object]\nisoDate.getTime(): undefined\ndate : Sun May 22 2016 02:00:00 GMT-0700 (PDT)\ndate.getTime(): 1463907600000\n```\n\n**Result explanation**\nThe parameter _request.params.dateList_ should be a list of Date but instead is a list of objects.\n"},{"labels":["bug"],"text":"Running parse-server 2.2.7 on heroku using clustering via throng we sometimes see an error on server startup:\n\nMay 16 13:56:48 myappname app/web.5: > @ start /app \nMay 16 13:56:48 myappname app/web.5: > node src/index.js \nMay 16 13:56:49 myappname app/web.5: fs.js:794 \nMay 16 13:56:49 myappname app/web.5:   return binding.mkdir(pathModule._makeLong(path), \nMay 16 13:56:49 myappname app/web.5:                  ^ \nMay 16 13:56:49 myappname app/web.5: Error: EEXIST: file already exists, mkdir '/app/logs' \nMay 16 13:56:49 myappname app/web.5:     at Error (native) \nMay 16 13:56:49 myappname app/web.5:     at Object.fs.mkdirSync (fs.js:794:18) \nMay 16 13:56:49 myappname app/web.5:     at configureLogger (/app/node_modules/parse-server/lib/logger.js:71:18) \nMay 16 13:56:49 myappname app/web.5:     at Object.<anonymous> (/app/node_modules/parse-server/lib/logger.js:80:1) \nMay 16 13:56:49 myappname app/web.5:     at Module._compile (module.js:409:26) \nMay 16 13:56:49 myappname app/web.5:     at Object.Module._extensions..js (module.js:416:10) \nMay 16 13:56:49 myappname app/web.5:     at Module.load (module.js:343:32) \nMay 16 13:56:49 myappname app/web.5:     at Function.Module._load (module.js:300:12) \nMay 16 13:56:49 myappname app/web.5:     at Module.require (module.js:353:17) \nMay 16 13:56:49 myappname app/web.5:     at require (internal/module.js:12:17) \n\nIndex.js looks like:\n\n```\nvar throng = require('throng');\nvar WORKERS = process.env.WEB_CONCURRENCY || 1;\n\nvar start = function(id) {\n    var express = require('express');\n    var ParseServer = require('parse-server').ParseServer;\n...\n    var api = new ParseServer(config);\n\n    app.use(mountPath, api);\n\n    app.get('/', function(req, res) {\n        res.status(200).send('OK');\n    });\n\n    app.listen(port, function() {\n        console.log('worker ' + id + '/' + WORKERS + ' on port ' + port + ' for app ' + Parse.applicationId);\n    });\n};\n\nthrong(start, {\n    workers: WORKERS,\n    lifetime: Infinity\n});\n\n```\n"},{"labels":["bug"],"text":"https://github.com/ParsePlatform/parse-dashboard/issues/341\n"},{"labels":["bug"],"text":"- [x] You've met the prerequisites: https://github.com/ParsePlatform/parse-server/wiki/Parse-Server-Guide#prerequisites.\n- [x] You're running the latest version of Parse Server: https://github.com/ParsePlatform/parse-server/releases\n- [x] You've searched through existing issues: https://github.com/ParsePlatform/Parse-Server/issues?utf8=%E2%9C%93&q=is%3Aissue Chances are that your issue has been reported or resolved before.\n#### Environment Setup\n- Server: \n  - parse-server: 2.2.9\n  - operating system: Windows 7\n  - local\n- Database: mongoDB 3.2.4 local\n#### Steps to reproduce\n\nAfter count problem solved #1726, I want to get the count only so add the limit parameter, but it didn't work.\n\n```\n$ curl -X GET \\ \n  -H \"X-Parse-Application-Id: myAppId\" \\\n  -H \"X-Parse-Master-Key: myMasterKey\" \\\n  http://localhost:1337/parse/installations/?count=1&limit=0\n```\n\nThis is what I got:\n\n```\n{\n  results: [\n    ...my installations...\n  ],\n  count: 5\n}\n```\n\nBut what I expected is like current Parse REST API when I use the command below:\n\n```\n$ curl -X GET \\\n  -H \"X-Parse-Application-Id: myAppId\" \\\n  -H \"X-Parse-Master-Key: myMasterKey\" \\\n  -H \"X-Parse-REST-API-Key: myRestApiKey\" \\\n  https://api.parse.com/1/installations/?count=1&limit=0\n```\n\nIt response with installations count like this:\n\n```\n{\n  results: [],\n  count: 5\n}\n```\n\nI tried that parameter like limit = 1 limit = 2 worked good, only 0 not.\n"},{"labels":["bug"],"text":"Same cloud function call returns slightly different results on parse-server, namely, it includes a `__type` field. We should probably make them match.\n\nParse server says:\n\n``` js\n    {\n      \"ACL\": {\n        \"role:organization_xo6fhPAmUM\": {\n          \"read\": true,\n          \"write\": true\n        }\n      },\n      \"name\": \"zzz\",\n      \"agentWorkflowEnabled\": true,\n      \"updatedAt\": \"2016-04-22T00:35:49.994Z\",\n      \"createdAt\": \"2016-02-01T23:26:05.454Z\",\n      \"countryCode\": \"US\",\n      \"objectId\": \"xo6fhPAmUM\",\n      \"__type\": \"Object\",\n      \"className\": \"Organization\"\n    }\n```\n\napi.parse.com says:\n\n``` js\n    {\n      \"ACL\": {\n        \"role:organization_xo6fhPAmUM\": {\n          \"read\": true,\n          \"write\": true\n        }\n      },\n      \"agentWorkflowEnabled\": true,\n      \"countryCode\": \"US\",\n      \"createdAt\": \"2016-02-01T23:26:05.454Z\",\n      \"name\": \"zzz\",\n      \"objectId\": \"xo6fhPAmUM\",\n      \"updatedAt\": \"2016-04-22T00:35:49.994Z\"\n    }\n\n```\n"},{"labels":["bug"],"text":"Check out https://github.com/ParsePlatform/parse-server/issues/1271 for an ideal bug report. The closer your issue report is to that one, the more likely we are to be able to help, and the more likely we will be to fix the issue quickly!\n\nMany members of the community use Stack Overflow and Server Fault to ask questions. Read through the existing questions or ask your own!\n- Stack Overflow: http://stackoverflow.com/questions/tagged/parse.com \n- Server Fault: https://serverfault.com/tags/parse\n\nFor database migration help, please file a bug report at https://parse.com/help#report\n\nMake sure these boxes are checked before submitting your issue -- thanks for reporting issues back to Parse Server!\n- [ x] You've met the prerequisites: https://github.com/ParsePlatform/parse-server/wiki/Parse-Server-Guide#prerequisites.\n- [ x] You're running the latest version of Parse Server: https://github.com/ParsePlatform/parse-server/releases\n- [ x] You've searched through existing issues: https://github.com/ParsePlatform/Parse-Server/issues?utf8=%E2%9C%93&q=is%3Aissue Chances are that your issue has been reported or resolved before.\n#### Environment Setup\n- Server: parse-server version 2.2.8\n- Database: MongoDb 3.0.9\n#### Steps to reproduce\n\nrun any cloud function with null parameter\ncurl -X POST -H \"X-Parse-Application-Id: $appId\" -H \"Content-Type: application/json;charset=UTF-8\" -d '{\"notValidVar\": null}' 'http://localhost:1337/parse/functions/test'\n#### Logs/Trace\n\nerror: Uncaught internal server error. [TypeError: Cannot read property '__type' of null] TypeError: Cannot read property '__type' of null\nat handleCloudFunction (APPLICATION_PATH/node_modules/parse-server/lib/Routers/FunctionsRouter.js:69:22)\nat APPLICATION_PATH/node_modules/parse-server/lib/PromiseRouter.js:286:7\nat Layer.handle [as handle_request](APPLICATION_PATH/node_modules/express/lib/router/layer.js:95:5)\nat next (APPLICATION_PATH/node_modules/express/lib/router/route.js:131:13)\nat Route.dispatch (APPLICATION_PATH/node_modules/express/lib/router/route.js:112:3)\nat Layer.handle [as handle_request](APPLICATION_PATH/node_modules/express/lib/router/layer.js:95:5)\nat APPLICATION_PATH/node_modules/express/lib/router/index.js:277:22\nat param (APPLICATION_PATH/node_modules/express/lib/router/index.js:349:14)\nat param (APPLICATION_PATH/node_modules/express/lib/router/index.js:365:14)\nat Function.process_params (APPLICATION_PATH/node_modules/express/lib/router/index.js:410:3)\n"},{"labels":["bug"],"text":"Hi,\nI am opening this issue as a similar one (issue #1671) was closed without providing a solution.\nWe are running with latest parse server 2.2.7 and iOS SDK 1.12.0.\nWe are getting this error on the find operation:\n\n> Clients aren't allowed to perform the find operation on the installation collection. (Code: 119, Version: 1.12.0)\n\nThe code under `enforeRoleSecurity` method at node_modules/parse-server/lib/rest.js is:\n\n```\nfunction enforceRoleSecurity(method, className, auth) {\n    if (className === '_Installation' && !auth.isMaster) {\n        if (method === 'delete' || method === 'find') {\n            var error = 'Clients aren\\'t allowed to perform the ' + method + ' operation on the installation collection.';\n            throw new Parse.Error(Parse.Error.OPERATION_FORBIDDEN, error);\n        } \n    }\n}\n```\n\n@brianyyz Had the same issue. If Solved for you I will be glad to learn how.\n"},{"labels":["bug"],"text":"#### Environment Setup\n\nElastic beanstalk.\n#### Steps to reproduce\n\nEnable verbose logging via environment variables.\n#### Logs/Trace\n\nverbose: GET /parse/login { host: 'xxx',\n  ...\n  'content-type': 'text/plain',\n  'user-agent': 'node-XMLHttpRequest, Parse/js1.8.3 (NodeJS 4.3.0)',\n  \"username\": \"some@user.com\",\n  \"password\": \"plain-text-password\"\n}\n\nApologies if this is not a Parse specific question, but what are my options for logging?  I see that I can enable VERBOSE=1 in my environment settings, but when I do that I see log statements with passwords in plain text like the above.  I'd like to avoid having passwords logged like this.  I'm not positive that log is actually coming from Parse, but it is formatted like the other Parse messages so I'm assuming it is?\n"},{"labels":["bug"],"text":"**Background:** We are slowly migrating over to parse-server from parse.com.  Current implementation is mongoDB migrated to mLab with both parse-server and parse.com running on the same mLab DB instance.   We need to be able to run both in parallel.\n\n**Issue:** Recent code changes in parse-server is causing issues with parse.com,  particularly with pushes through rest api and even trying to view core collections on parse.com dashboard.  The following error message is thrown:\n\n`{\"code\":103,\"error\":\"Invalid classname: _PushStatus, classnames can only have alphanumeric characters and _, and must start with an alpha character \"}`\n\n**Cause:** This occurred after updating parse-server with latest commits and then sending a push notification through parse-server.  From what I found, parse-server is adding the following entry to the _SCHEMA collection:\n\n```\n{\n    \"_id\": \"_PushStatus\",\n    ...\n    \"failedPerType\": \"object\"\n}\n```\n\nWhile this works fine for parse-server, this is causing parse.com to completely break.  Removing _PushStatus entry from _SCHEMA fixes this and parse.com dashboard and API works.\n"},{"labels":["bug",null],"text":"I am running this same query from parse.com and on my local parse server . \n\n```\nvar messageQuery = new Parse.Query(\"Message\");\n    messageQuery.descending(\"updatedAt\");\n    messageQuery.include(\"channelId\");\n    messageQuery.select(\"channelId\");\n    messageQuery.select(\"channelId.exchange\");\n```\n\nChanneld is pointer field to my other document.\nOn parse.com server this query works and return result with only exchange field and on parse-server it selects complete channelId document and prints everything.\n"},{"labels":["bug"],"text":"- [x] You've met the [prerequisites](https://github.com/ParsePlatform/parse-server/wiki/Parse-Server-Guide#prerequisites).\n- [x] You're running the [latest version](https://github.com/ParsePlatform/parse-server/releases) of Parse Server.\n- [x] You've searched through [existing issues](https://github.com/ParsePlatform/parse-server/issues?utf8=%E2%9C%93&q=). Chances are that your issue has been reported or resolved before.\n#### Environment Setup\n- local server\n- mongolab db\n- Parse JS SDK 1.8.3\n#### Steps to reproduce\n\nSimple queries using JS SDK would work with parse hosted api and fail with `{\"code\":102,\"error\":\"Improper encode of parameter\"}`\n\nQuery generates following REST:\nRequest URL: http://localhost:5001/api/classes/Request\nRequest Method: POST\n\n```\n_ApplicationId: \"REDACTED\"\n_ClientVersion: \"js1.8.3\"\n_InstallationId: \"REDACTED\"\n_JavaScriptKey: \"REDACTED\"\n_RevocableSession: \"1\"\n_SessionToken: \"REDACTED\"\n_method: \"GET\"\ninclude: \"creator,chosen_venue\"\norder: \"-request_time\"\nwhere: {}\n```\n#### Logs/Trace\n\n```\n::ffff:127.0.0.1 - - [19/Apr/2016:12:48:35 +0000] \"GET /api/classes/Request HTTP/1.1\" 400 51 \"http://localhost:5000/manage/app/requests\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36\"\n::ffff:127.0.0.1 - - [19/Apr/2016:12:48:35 +0000] \"GET /api/classes/Request HTTP/1.1\" 400 51 \"http://localhost:5000/manage/app/requests\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36\"\n```\n"},{"labels":["bug",null,null,null],"text":"When saving a new PFUser on iOS, the SDK(?) throws this error:\n\nCaught \"NSInternalInconsistencyException\" with reason \"User cannot be saved unless they are already signed up. Call signUp first.\"\nWhen saving a new PFUser via Cloud Code, it does not throw that error but simply mimics a \"signUp\", which creates a session token for the server... in Cloud Code! (actually, read #3 as this may be a bug with the pfuser handling)\n\nFor sake of flexibility and consistency (with PFObjects), I think there should be an option to \"save\" a PFUser without having a session token created, or restricting (iOS) apps to always use PFUser.signUp. There are many use-cases for such a feature, and I feel that it is a meaningless restriction.\n\nPersonal use-case: I have some special logic to replace the standard \"signUp\" flow, which has me creating a PFUser via Cloud Code + MasterKey. But with how the \"save\" function is behaving, it's creating a session token for the server!\n\nRef #1490 \n"},{"labels":["bug",null,null],"text":"In my application, I have a button: Signup with Facebook. If user double click this button, two requests will be sent to parse-server, and if it is fast enough, two users with same information will be created. This doesn't happen on Parse.com\n"},{"labels":["bug",null],"text":"When logging into our app we're using the PFFacebookUtils method `PFFacebookUtils.logInInBackgroundWithReadPermissions(self.permissions, block: {})` and that is working fine.  The first time that is ran, the callback has the `user.isNew` flag set to true and we go one path.\n\nHowever I'm trying to test out the workflow where the user deletes the app from their phone and Facebook account.\n\nIn this instance when I hit the other path where `user.isNew` is false in the callback, the new time I go to save the user after making updates to it, I get the error `Facebook auth is invalid for this user.`.\n\nIs this by design and is there something I have to do to get this workflow working?  Or is this a bug?\n"},{"labels":["bug",null],"text":"Check out [this issue](https://github.com/ParsePlatform/parse-server/issues/1271) for an ideal bug report. The closer your issue report is to that one, the more likely we are to be able to help, and the more likely we will be to fix the issue quickly!\n\nFor implementation related questions or technical support, please refer to the [Stack Overflow](http://stackoverflow.com/questions/tagged/parse.com) and [Server Fault](https://serverfault.com/tags/parse) communities.\n\nMake sure these boxes are checked before submitting your issue -- thanks for reporting issues back to Parse Server!\n- [x] You've met the [prerequisites](https://github.com/ParsePlatform/parse-server/wiki/Parse-Server-Guide#prerequisites).\n- [x] You're running the [latest version](https://github.com/ParsePlatform/parse-server/releases) of Parse Server.\n- [x] You've searched through [existing issues](https://github.com/ParsePlatform/parse-server/issues?utf8=%E2%9C%93&q=). Chances are that your issue has been reported or resolved before.\n#### Environment Setup\n\nTest Schema\n\n``` json\n{\n    \"_id\" : \"Test\",\n    \"objectId\" : \"string\",\n    \"updatedAt\" : \"string\",\n    \"createdAt\" : \"string\",\n    \"data\" : \"object\"\n}\n```\n\nTest Data\n\n``` json\n{\n    \"_id\" : \"tqwysmYbjP\",\n    \"data\" : {\n        \"_id\": \"testObjectKey\",\n        \"arr\" : [ {\n                \"_id\" : \"testArrayKey\",\n                \"_testKey\" : \"otherKey\"\n            }],\n        \"obj\": {\n            \"_id\": \"testNestedObjectKey\"\n        }\n    },\n    \"_updated_at\" : ISODate(\"2016-04-07T04:22:47.653Z\"),\n    \"_created_at\" : ISODate(\"2016-04-07T04:22:47.653Z\")\n}\n```\n\nWhen querying this Class the output I receive is:\n\n``` json\n{\n    \"results\": [{\n        \"objectId\": \"tqwysmYbjP\",\n        \"data\": {\n            \"objectId\": \"testObjectKey\",\n            \"arr\": [{\n                \"objectId\": \"testArrayKey\",\n                \"_testKey\": \"otherKey\"\n            }],\n            \"obj\": {\n                \"objectId\": \"testNestedObjectKey\"\n            }\n        },\n        \"updatedAt\": \"2016-04-07T04:22:47.653Z\",\n        \"createdAt\": \"2016-04-07T04:22:47.653Z\"\n    }]\n}\n```\n#### Steps to reproduce\n\nFetch the Test Class in parse dashboard/curl and look at the results.\n#### Logs/Trace\n\nN/A\n"},{"labels":["bug",null],"text":"Check out [this issue](https://github.com/ParsePlatform/parse-server/issues/1271) for an ideal bug report. The closer your issue report is to that one, the more likely we are to be able to help, and the more likely we will be to fix the issue quickly!\n\nFor implementation related questions or technical support, please refer to the [Stack Overflow](http://stackoverflow.com/questions/tagged/parse.com) and [Server Fault](https://serverfault.com/tags/parse) communities.\n\nMake sure these boxes are checked before submitting your issue -- thanks for reporting issues back to Parse Server!\n- [x] You've met the [prerequisites](https://github.com/ParsePlatform/parse-server/wiki/Parse-Server-Guide#prerequisites).\n- [x] You're running the [latest version](https://github.com/ParsePlatform/parse-server/releases) of Parse Server.\n- [ ] You've searched through [existing issues](https://github.com/ParsePlatform/parse-server/issues?utf8=%E2%9C%93&q=). Chances are that your issue has been reported or resolved before.\n#### Description\n\nWhen I creating new user, I setting acl control. JS(from Parse.com api) side is okay, but Android side (from azure server side) is strange.\n- use parse.com for testing somtime.\n#### Environment Setup\n- Microsoft Azure\n  - Parse Server 2.2.6 (Webapp)\n    - Azure Storage File Adapter\n    - Forked 'parse-server-example', Customized.\n  - MongoDB 3.0.10 (MS Azure VM - Cent OS 6.7)\n- Android Build Version 6.0.1, 5.1.x (with Android Studio)\n- Google Chrome Browser (49.0.2623.110 (64-bit))\n- Mac OS X El Capitain\n#### Steps to reproduce\n- Android side\n\n```\n.....  \nParseACL acl = new ParseACL();\nacl.setPublicReadAccess(false);\nacl.setPublicWriteAccess(false);\nuser.setACL(acl);\nuser.signUp();\n\n.....  \n```\n- JS Side (from parse.com)\n\n```\n....\nvar acl = new Parse.ACL();\nacl.setPublicReadAccess(false);\nacl.setPublicWriteAccess(false);\nuser.setACL(acl);\nuser.save(); // or user.signUp();\n....\n```\n##### Result :\n- Android\n  `\n  acl column, master key only\n  `\n- JS (from parse.com)\n  `\n  acl column, { user_object_id }\n  `\n##### Expected :\n- same results. / parse.com or stand-alone\n#### Logs/Trace\n- none\n\nPlease tell me what I missing. Thanks.\n"},{"labels":["bug"],"text":"After investigating ParsePlatform/parse-dashboard#231 I discovered that Parse.com `_SCHEMA` collection doesn't always have the `password` field in the `_User` collection. The Schemas API should return the `password` field regardless of the contents of the `_SCHEMA` collection, as it's a special field.\n"},{"labels":["bug",null],"text":"Based on this article (https://www.parse.com/questions/what-are-the-recommended-permissions-for-the-installations-class) a query for _Installation should only return your own installation object.\n\nHowever, if I run this cURL call I can get all installation objects.\n\n```\ncurl -X GET \\\n  -H \"X-Parse-Application-Id: {validID}\" \\\n  -H \"Content-Type: application/json\" \\\n  http://localhost:1337/parse/classes/_Installation\n```\n\nThat request should always return empty (or with an error).\n"},{"labels":["bug",null],"text":"When I request the User Schema the password field is NOT returned. \nIf I use api.parse.com the password field IS returned.\n\n`curl -X GET \\\n  -H \"X-Parse-Application-Id: 1234\" \\\n  -H \"X-Parse-Master-Key: 56789\" \\\n  http://localhost:1337/parse/schemas/_User`\n\nI noticed this when trying to create a new user with:\n\n`curl -X POST \\\n  -H \"X-Parse-Application-Id: 1234\" \\\n  -H \"X-Parse-Master-Key: 56789\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"password\":\"test100\",\"username\":\"somenewuser\"}'  \\\nhttp://localhost:1337/parse/users`\n\nreturns: {\"code\":101,\"error\":\"Permission denied for this action.\"}\n\nI have stepped through the code with a node debugger and I can see that the exception is thrown because as 'password' is not in the _SCHEMA collection it is treated as a new field and my permissions don't allow me to create a new field. Of course, I don't want it to store 'password' in the _User collection but also as I am using X-Parse-Master-Key the class level permissions shouldn't be taken into account. (I think this part has been [tackled here](https://github.com/ParsePlatform/parse-server/commit/5d99075663b4d044e98d6d3bcaaaa058b9c4a4d6)\n#### Environment Setup\n\nParse Server 2.2.4\n"},{"labels":["bug",null],"text":"`master/src/cli/parse-server.js` line 54\n\n`options = Object.keys(definitions).reduce(function (options, key) {\n  if (typeof program[key] !== 'undefined') {\n    options[key] = program[key];\n  }\n  return options;\n}, options);\n`\n\nE.g`\"mountPath\": \"/mymountPath\",`\n\n`typeof program[key]` is defalut `/parse`\n\n`options = Object.keys(definitions).reduce(function (options, key) {\n  if (typeof program[key] !== 'undefined' &&  typeof options[key] == 'undefined') {\n    options[key] = program[key];\n  }\n  return options;\n}, options);`\n"},{"labels":["bug",null],"text":"Make sure these boxes are checked before submitting your issue -- thanks for reporting issues back to Parse Server!\n- [x] You've met the [prerequisites](https://github.com/ParsePlatform/parse-server/wiki/Parse-Server-Guide#prerequisites).\n- [x] You're running the [latest version](https://github.com/ParsePlatform/parse-server/releases) of Parse Server.\n- [x] You've searched through [existing issues](https://github.com/ParsePlatform/parse-server/issues?utf8=%E2%9C%93&q=). Chances are that your issue has been reported or resolved before.\n#### Environment Setup\n\nLocal \n\nOSX 10.11.3\nMongoDB on ObjectRocket v 3.0.9\n#### Steps to reproduce\n\nClone this bug reproduction repo, npm install & npm start\n\nhttps://github.com/zleman1593/parse-server-transform-bug\n\nI migrated a copy of the database to object rocket and I am hosting it from there. This repo uses that db.\n\nIf you want to connect to a local db, here is the mongo dump you can use mongorestore with.\n\nhttps://www.dropbox.com/s/gsfqvwp0lsien90/MongoDump.zip?dl=0\nIf you want a quick look at the problematic data, I exported it from parse  (JSON)(I did not use this for the migration) :  https://goo.gl/61X5Jv\n\nMake this query:\n\n`\ncurl -X GET \\\n-H \"X-Parse-Application-Id: XXXXXXXXX\" \\\n-H \"X-Parse-Master-Key: XXXXXXXXXXX\" \\\n-G \\\n--data-urlencode \"where={\\\"clientId\\\":\\\"QArG4hBu8z\\\"}\" \\\nhttp://localhost:1338/parse/classes/ProviderClient\n`\n\n`\nUse this application ID: 3fko3frQqNK20Lx59EbfeP2X3u5Iy3eTstMsIze5\nUse this master key: DFYYoY6iWXzgbSDxfZqJHrNaOfHZrpCHlH1vmBau\n`\nYou can use other keys, just don't forget to switch them out in index.js\n#### Query Response\n\n`\n{\"code\":1,\"message\":\"Internal server error.\"}\n`\n#### Logs/Trace\n\n`\nerror: Uncaught internal server error. bad value in untransformObject undefined\n`\n\nThe error is throw here: https://github.com/ParsePlatform/parse-server/blob/f0ebb7bae6631493eb0fce608c4948ad37636b7c/src/transform.js in the untransformObject function when it comes across a function in the mongoObject when reading the lastMessageTimetoken BSON field which is a 'NumberLong'.\n\nIssue #665 is likely related. @gfosco \n"},{"labels":["bug",null],"text":"Check out [this issue](https://github.com/ParsePlatform/parse-server/issues/1271) for an ideal bug report. The closer your issue report is to that one, the more likely we are to be able to help, and the more likely we will be to fix the issue quickly!\n\nFor implementation related questions or technical support, please refer to the [Stack Overflow](http://stackoverflow.com/questions/tagged/parse.com) and [Server Fault](https://serverfault.com/tags/parse) communities.\n\nMake sure these boxes are checked before submitting your issue -- thanks for reporting issues back to Parse Server!\n- [V] You've met the [prerequisites](https://github.com/ParsePlatform/parse-server/wiki/Parse-Server-Guide#prerequisites).\n- [V] You're running the [latest version](https://github.com/ParsePlatform/parse-server/releases) of Parse Server.\n- [V] You've searched through [existing issues](https://github.com/ParsePlatform/parse-server/issues?utf8=%E2%9C%93&q=). Chances are that your issue has been reported or resolved before.\n#### Environment Setup\n\nparse-server v2.2.4\n#### Steps to reproduce\n\nGet any objects which have a relation field.\nLook at the response, No any data about the relation field.\n#### Logs/Trace\n\nIn parse.com response you'll get:\n{\"results\":[{\"address_address\":\"Beit Yosef 12\",\"address_city\":\"Bnei Brak\",\"address_country\":\"US\",\"address_state\":\"IL\",\"address_zip\":\"5125414\",**\"bought_cards\":{\"__type\":\"Relation\",\"className\":\"Card\"}**,\"cards_being_used\":[],**\"coupons\":{\"__type\":\"Relation\",\"className\":\"Coupon\"}**,\"createdAt\":\"2015-08-24T22:37:25.673Z\",**\"credit_balance\":{\"__type\":\"Relation\",\"className\":\"CustomerCredit\"}**,\"cards\":[{\"__type\":\"Pointer\",\"className\":\"Card\",\"objectId\":\"2ukxDfhkFs\"},{\"__type\":\"Pointer\",\"className\":\"Card\",\"objectId\":\"kRNHM07EG3\"},{\"__type\":\"Pointer\",\"className\":\"Card\",\"objectId\":\"MbTb2x9cD9\"},{\"__type\":\"Pointer\",\"className\":\"Card\",\"objectId\":\"bLAcW2EBQQ\"},{\"__type\":\"Pointer\",\"className\":\"Card\",\"objectId\":\"9ygwYjgzhb\"},{\"__type\":\"Pointer\",\"className\":\"Card\",\"objectId\":\"zfzm3J6L3B\"},{\"__type\":\"Pointer\",\"className\":\"Card\",\"objectId\":\"fHAY1NbMZ3\"},{\"__type\":\"Pointer\",\"className\":\"Card\",\"objectId\":\"ao5jFTj0HD\"},{\"__type\":\"Pointer\",\"className\":\"Card\",\"objectId\":\"zA7LCzA2u3\"}],\"email\":\"bla@me.com\",**\"expired_coupons\":{\"__type\":\"Relation\",\"className\":\"Coupon\"}**,\"first_name\":\"Bla\",\"last_name\":\"BLABLA\",\"objectId\":\"UvDsAFAJKC\",\"personal_id\":\"XXXXXX\",\"sessionToken\":\"r:tE7YMdktivyt3dChvs4thhi3i\",\"updatedAt\":\"2016-02-16T22:15:55.935Z\",\"username\":\"xxxxxxx\"}]}\n\nBut in parse-server you'll get:\n{\"results\":[{\"objectId\":\"UvDsAFAJKC\",\"email\":\"bla@me.com\",\"createdAt\":\"2015-08-24T22:37:25.673Z\",\"updatedAt\":\"2016-03-28T07:14:14.932Z\",\"username\":\"xxxxxxx\",\"cards_being_used\":[],\"personal_id\":\"XXXXXX\",\"address_country\":\"US\",\"address_address\":\"Beit Yosef 12\",\"address_state\":\"IL\",\"address_city\":\"Bnei Brak\",\"address_zip\":\"5125414\",\"first_name\":\"Bla\",\"last_name\":\"BLABLA\",\"cards\":[{\"__type\":\"Pointer\",\"className\":\"Card\",\"objectId\":\"SLSzaswHb0\"},{\"__type\":\"Pointer\",\"className\":\"Card\",\"objectId\":\"7sDoL0QYS3\"},{\"__type\":\"Pointer\",\"className\":\"Card\",\"objectId\":\"eCD5oao8PW\"},{\"__type\":\"Pointer\",\"className\":\"Card\",\"objectId\":\"qOWOzLLajG\"},{\"__type\":\"Pointer\",\"className\":\"Card\",\"objectId\":\"fcoETmZ8OQ\"},{\"__type\":\"Pointer\",\"className\":\"Card\",\"objectId\":\"zAwSMpZFHl\"},{\"__type\":\"Pointer\",\"className\":\"Card\",\"objectId\":\"DGNQFpaeTN\"}]}]}\n"},{"labels":["bug",null],"text":"DatabaseController.canAddField does not check whether a request is issued with a master key before verifying CLPs. This is not consistent with all other DB ops(create/update/read/delete). Is it this way by design? \n"},{"labels":["bug"],"text":"- [x] You've met the [prerequisites](https://github.com/ParsePlatform/parse-server/wiki/Parse-Server-Guide#prerequisites).\n- [x] You're running the [latest version](https://github.com/ParsePlatform/parse-server/releases) of Parse Server.\n- [x] You've searched through [existing issues](https://github.com/ParsePlatform/parse-server/issues?utf8=%E2%9C%93&q=). Chances are that your issue has been reported or resolved before.\n#### Environment Setup\n\nnodejs: 4.4.0\nparse-server: 2.2.2\n#### Description of the issue\n\nWhen the beforeSave trigger for an object is present, the save call overwrites the pointer fields with only the object id even thou' the pointer field had fetched object before calling save. \n#### Steps to reproduce\n\n``` js\nnew Parse.Query('Person')\n  .first()\n  .then(person => {    \n    console.log(person.createdAt, person.get('name')); // prints correctly\n    const account = new Parse.Object('Account', {person});\n    console.log(account.get('person').createdAt, account.get('person').get('name')); // prints correctly\n    return account.save();\n  })\n  .then(account => {\n    // prints correctly only if there are no beforeSave triggers.\n    console.log(account.get('person').createdAt, account.get('person').get('name')); \n  });\n```\n\nFor the above, I would ideally expect the console.log to print both person's createdAt and name in all the three logs. But the last console.log prints the values correctly only if beforeSave trigger is not present. If beforeSave trigger present, then it just contains the pointer value and loses the object data.\n#### Logs/Trace\n"},{"labels":["bug",null],"text":"Hi\n\nI can't make my cloud function working with addUnique:\n\nmyVal = {\"a\":\"A\",\"b\":\"B\"};\n\nmyClass.addUnique(\"myArrayfield\", myVal);\n\nIt gives me bad request response.\n\nIt only works if myVal is a string but I want to save a JSON object. Furthermore, if I try to stringify, it adds symbols in my expression.\n"},{"labels":["bug"],"text":"APNS push is working.\nGCM push is not working and no logs.\n\nIn same environment, https://api.parse.com/1/push is very well.\n\nWhat the ploblem.\n#### Environment Setup\n\nvar express = require('express');\nvar ParseServer = require('parse-server').ParseServer;\nvar app = express();\n\n// Specify the connection string for your mongodb database\n// and the location to your Parse cloud code\nvar api = new ParseServer({\n  databaseURI: 'my',\n  cloud: 'my', // Provide an absolute path\n  appId: 'my',\n  masterKey: 'my',\n  clientKey: 'my',\n  restAPIKey: 'my',\n  javascriptKey: 'my',\n  dotNetKey: 'my',\n  fileKey:'my',\n  push: {\n    android: {\n      senderId: '1235215235', // The Sender ID of GCM\n      apiKey: 'myKey' // The Server API Key of GCM\n    },\n    ios: {\n      pfx: '/push/apppro.p12', // Prod PFX or P12\n      bundleId: 'com.my.myapp',\n      production: true // Prod\n    }\n  },\n  serverURL: 'http://localhost:1337/parse' // Don't forget to change to https if needed\n});\n\n// Serve the Parse API on the /parse URL prefix\napp.use('/parse', api);\n\napp.listen(1337, function() {\n  console.log('parse start');\n});\n#### Steps to reproduce\n\ncurl -X POST \\\n    -H \"X-Parse-Application-Id: appKey\" \\\n    -H \"X-Parse-Master-Key: masterKey\" \\\n    -H \"Content-Type: application/json\" \\\n    -d '{\n          \"where\": {\n            \"channels\": {\n              \"$in\": [\n                \"cha1\",\n                \"cha2\"\n              ]\n            }\n          },\n          \"data\": {\n            \"title\": \"The Shining\",\n            \"alert\": \"message\"\n          }\n        }'\\   http://localhost/parse/push\n#### Logs/Trace\n\nAPNS Connection 0 Notification transmitted to abcdefg\nAPNS Connection 0 Notification transmitted to abcdefg\nAPNS Connection 0 Notification transmitted to abcdefg\nAPNS Connection 0 Notification transmitted to abcdefg\nAPNS Connection 0 Notification transmitted to abcdefg\nAPNS Connection 0 Notification transmitted to abcdefg\nAPNS Connection 0 Disconnected\nAPNS Connection 0 Connected\nAPNS Connection 0 Notification transmitted to abcdefg\nAPNS Connection 0 Notification transmitted to abcdefg\nAPNS Connection 0 Notification transmitted to abcdefg\nAPNS Connection 0 Notification transmitted to abcdefg\nAPNS Connection 0 Disconnected\nAPNS Connection 0 Connected\nAPNS Connection 0 Notification transmitted to abcdefg\nAPNS Connection 0 Notification transmitted to abcdefg\nAPNS Connection 0 Notification transmitted to abcdefg\n"},{"labels":["bug",null],"text":"I'm not sure if this causes any problem but I happened to notice that `installationId` seems to be missing in `Session` class when user logs in via Twitter (and possibly other oAuth methods)\n\nI'm using the latest parse-server release v2.2.0.\n\nHere's a screenshot: \n\n![](https://dl.dropboxusercontent.com/u/5719952/Empty-InstallId-Parse.png)\n"},{"labels":["bug"],"text":"Make sure these boxes are checked before submitting your issue -- thanks for reporting issues back to Parse Server!\n- [ ] You've met the [prerequisites](https://github.com/ParsePlatform/parse-server/wiki/Parse-Server-Guide#prerequisites).\n- [ ] You're running the [latest version](https://github.com/ParsePlatform/parse-server/releases) of Parse Server.\n- [ ] You've searched through [existing issues](https://github.com/ParsePlatform/parse-server/issues?utf8=%E2%9C%93&q=). Chances are that your issue has been reported or resolved before.\n#### Environment Setup\n\nRun parse-server master branch locally\n#### Steps to reproduce\n\nStep 1. Set a afterSave hook for a ParseObject like\n\n```\nParse.Cloud.afterSave('Test', function(req) {\n  console.log(req.original._toFullJSON());\n});\n```\n\nStep 2. Create a ParseObject by REST API\n\n```\ncurl -X POST -H \"X-Parse-Application-Id: myAppId\"   -H \"Content-Type: application/json\"   -d '{\"key\":\"value\", \"ACL\": {\"*\": {\"write\": true}}}'   http://localhost:1337/parse/classes/LQACL\n```\n\nStep 3. Update the ParseObject by REST API\n\n```\ncurl -X PUT -H \"X-Parse-Application-Id: myAppId\"   -H \"Content-Type: application/json\"   -d '{\"key\":\"value1\"}'   http://localhost:1337/parse/classes/LQACL/XXXX\n```\n#### Logs/Trace\n\nThe log of the cloud code is \n\n```\n{ objectId: 'iBVBtKnluf', __type: 'Object', className: 'LQACL' }\n```\n\nYou can see we miss ACL and key fields.\n\nThe reason is in `rest.js`, we do a query to find the original value of the ParseObject before update, however, if the current req do not have permission to get access to the ParseObject, we can not find the original ParseObject.\n"},{"labels":["bug",null,null],"text":"This breaks file uploading in Parse Dashboard.\n"},{"labels":["bug"],"text":"Make sure these boxes are checked before submitting your issue -- thanks for reporting issues back to Parse Server!\n\n-[ ] You've met the [prerequisites](https://github.com/ParsePlatform/parse-server/wiki/Parse-Server-Guide#prerequisites).\n\n-[ ] You're running the [latest version](https://github.com/ParsePlatform/parse-server/releases) of Parse Server.\n\n-[ ] You've searched through [existing issues](https://github.com/ParsePlatform/parse-server/issues?utf8=%E2%9C%93&q=). Chances are that your issue has been reported or resolved before.\n#### Environment Setup\n\nRun parse-server master branch locally \n#### Steps to reproduce\n\nStep 1. Set a afterSave hook for a ParseObject like\n\n```\nParse.Cloud.afterSave('Test', function(req) {\n  console.log(req.object._toFullJSON());\n});\n```\n\nStep 2. Create a ParseObject by JS SDK or REST API\n\n```\nvar Parse = require('parse/node');\nParse.initialize(\"myAppId\");\nParse.serverURL = 'http://localhost:1337/parse'\n\nvar Test = Parse.Object.extend(\"Test\");\nvar test = new Test();\ntest.set('score', 123);\n\nvar acl = new Parse.ACL();\nacl.setPublicReadAccess(true);\ntest.setACL(acl);\n\ntest.save(null,{\n  success: function(test) {\n    console.log(test._toFullJSON());\n    console.log('success');\n  },\n  error: function(test, error) {\n    console.log('error');\n  }\n});\n```\n\n```\ncurl -X POST -H \"X-Parse-Application-Id: myAppId\"   -H \"Content-Type: application/json\"   -d '{\"key\":\"value\", \"ACL\": {\"*\": {\"read\": true, \"write\": true}}}'   http://localhost:1337/parse/classes/Test\n```\n#### Logs/Trace\n\nThe log of the cloud code is \n\n```\n{ score: 123,\n  createdAt: '2016-03-04T06:50:29.581Z',\n  updatedAt: '2016-03-04T06:50:29.581Z',\n  objectId: 'DTMuWpx1h6',\n  __type: 'Object',\n  className: 'Test' }\n```\n\nIf we try to retrive the ParseObject by REST API, like\n\n```\ncurl -X GET   -H \"X-Parion-Id: myAppId\"  http://localhost:1337/parse/classes/GameScore/DTMuWpx1h6\n```\n\nThe return value is\n\n```\n{\"ACL\":{\"*\":{\"read\":true}},\"score\":123,\"updatedAt\":\"2016-03-04T05:03:43.273Z\",\"createdAt\":\"2016-03-04T05:03:43.273Z\",\"objectId\":\"vptX9lZTtS\"}\n```\n\nThis means we successfully save the ParseObject, we just do not expose the ACL info to afterSave hook.\n\nIf we go deeper we can find in `RestWrite`, before `runDatabaseOperation`, `this.data` contains the ACL info, but after `runDatabaseOperation`, `this.data` does not have the ACL info.\n\nUpdate:\nIf we update the ParseObject with ACL, we can get the ACL info in the afterSave hook.\n"},{"labels":["bug"],"text":""},{"labels":["bug"],"text":"@nlutsenko let me know if you are starting on this, if you don't I will start on it when I wrap up other dashboard stuff.\n#### Steps to reproduce\n\nGetting a session on Parse.com\n\n```\ncurl -X GET \\\n-H \"X-Parse-Application-Id: some parse.com app id\" \\\n-H \"X-Parse-Master-Key: some parse.com master key\" \\\nhttps://api.parse.com/1/classes/_Session/XXXXXXX\n```\n\nResult for my app:\n\n```\n{\n    \"createdAt\": \"2016-01-03T00:45:43.417Z\",\n    \"createdWith\": {\n        \"action\": \"login\",\n        \"authProvider\": \"facebook\"\n    },\n    \"expiresAt\": {\n        \"__type\": \"Date\",\n        \"iso\": \"2017-01-07T18:02:55.582Z\"\n    },\n    \"installationId\": \"f0743e6a-0fb3-c216-6dc5-3e0bc8ed34e7\",\n    \"objectId\": \"DduCjDcmR7\",\n    \"restricted\": false,\n    \"sessionToken\": \"r:ERsvDtKakO7ApMZbCrHs8ZL7i\",\n    \"updatedAt\": \"2016-01-08T18:02:55.594Z\",\n    \"user\": {\n        \"__type\": \"Pointer\",\n        \"className\": \"_User\",\n        \"objectId\": \"HQcObQVs2d\"\n    }\n}\n```\n\nGetting a session on Parse Server\n\n```\ncurl -X GET \\\n-H \"X-Parse-Application-Id: some parse server app id\" \\\n-H \"X-Parse-Master-Key: some parse server master key\" \\\nhttp://localhost:1337/1/classes/_Session/XXXXXX\n```\n\nResult for my app:\n\n```\n{\n    \"objectId\": \"NJQZMpCRsx\",\n    \"sessionToken\": \"r:1868be09b472699e68f554f5ad1ee527\",\n    \"user\": {\n        \"__type\": \"Pointer\",\n        \"className\": \"_User\",\n        \"objectId\": \"rQmfhg5yGB\"\n    },\n    \"createdWith\": {\n        \"action\": \"login\",\n        \"authProvider\": \"password\"\n    },\n    \"restricted\": false,\n    \"expiresAt\": \"2017-03-02T02:26:28.312Z\",\n    \"updatedAt\": \"2016-03-02T02:26:28.313Z\",\n    \"createdAt\": \"2016-03-02T02:26:28.313Z\"\n}\n```\n"},{"labels":["bug"],"text":"Make sure these boxes are checked before submitting your issue -- thanks for reporting issues back to Parse Server!\n\n-[ ] You've met the [prerequisites](https://github.com/ParsePlatform/parse-server/wiki/Parse-Server-Guide#prerequisites).\n\n-[ ] You're running the [latest version](https://github.com/ParsePlatform/parse-server/releases) of Parse Server.\n\n-[ ] You've searched through [existing issues](https://github.com/ParsePlatform/parse-server/issues?utf8=%E2%9C%93&q=). Chances are that your issue has been reported or resolved before.\n#### Environment Setup\n#### Steps to reproduce\n\nStep 1. Create a new ParseObject with a number field like this\n\n```\n curl -X POST -H \"X-Parse-Application-Id: myAppId\"   -H \"Content-Type: application/json\"   -d '{\"score\":1}'   http://localhost:1337/parse/classes/Game\n```\n\nStep 2. Add a afterSave hook for this class like\n\n```\nParse.Cloud.afterSave('Game', function(req) {\n  console.log(req.object);\n  console.log(req.object.get('score'));\n});\n```\n\nStep 3. Update the object created in step 1 with an increment operation like\n\n```\ncurl -X PUT   -H \"X-Parse-Application-Id: myAppId\"   -H \"Content-Type: application/json\"   -d '{\"score\":{\"__op\":\"Increment\",\"amount\":100}}'   http://localhost:1337/parse/classes/Game/XXXX.\n```\n\nStep 4. Check the log of the afterSave hook\nThe score field is still an operation, not the actual value.\n\nI verify the behaviour of Parse.com, the value we get in the afterSave is a number not the operation.\n#### Logs/Trace\n"},{"labels":["bug"],"text":"Make sure these boxes are checked before submitting your issue -- thanks for reporting issues back to Parse Server!\n\n-[X ] You've met the [prerequisites](https://github.com/ParsePlatform/parse-server/wiki/Parse-Server-Guide#prerequisites).\n\n-[ X] You're running the [latest version](https://github.com/ParsePlatform/parse-server/releases) of Parse Server.\n\n-[X ] You've searched through [existing issues](https://github.com/ParsePlatform/parse-server/issues?utf8=%E2%9C%93&q=). Chances are that your issue has been reported or resolved before.\n#### Environment Setup\n\nAWS Elastic Beanstalk, 64bit Amazon Linux 2015.09 v2.0.8 running Node.js\n#### Steps to reproduce\n\nCreate Read/Write ACL restricted object using iOS SDK 1.12 then attempt to find it after saving it. \nExample Code: \nPFACL *userACL = [[PFACL alloc] init];\n[userACL setPublicReadAccess:false];\n[userACL setPublicWriteAccess:false];\n[userACL setReadAccess:true forUser:[PFUser currentUser]];\n[userACL setWriteAccess:true forUser:[PFUser currentUser]];\n[myPFObject setACL:userACL];\n[myPFObject saveInBackgroundWithBlock //..]; \n\n//Success, no error, see object in DB, then later... run PFQuery, no results found when would normally be found before migrating. \n\n Query returns successfully with the expected object using Parse.com API but unsuccessfully when using a ParseClientConfiguration set to my server. I suspect the read ACL is not working properly because it returns with no results found even though _rperm and _wperm match the PFUser object ID in MongoDB. Query returns successfully with public read/write permissions set to true as well. \n\nACL query works on Android, both Parse.com and self-hosted server.\nACL query only works on iOS on Parse.com, does not work on self-hosted server.\n#### Logs/Trace\n\n---\n## /var/log/nodejs/nodejs.log\n\nBUG: the handler did not include a \"response\" field\nBUG: the handler did not include a \"response\" field\nBUG: the handler did not include a \"response\" field\nBUG: the handler did not include a \"response\" field\nBUG: the handler did not include a \"response\" field\nBUG: the handler did not include a \"response\" field\nBUG: the handler did not include a \"response\" field\nBUG: the handler did not include a \"response\" field\nBUG: the handler did not include a \"response\" field\nBUG: the handler did not include a \"response\" field\nBUG: the handler did not include a \"response\" field\nBUG: the handler did not include a \"response\" field\nBUG: the handler did not include a \"response\" field\n"},{"labels":["bug"],"text":"```\nParse.Cloud.afterSave(Parse.User, function(request) {\n    var id = request.installationId // id is undefined\n}\n```\n"},{"labels":["bug"],"text":"I'm getting an exception whenever I call Parse.Cloud.httpRequest with a nonsense URL. Ideally it should put something sensible in the error callback instead of crashing.\n#### Environment Setup\n\nparse-server v2.1.3\n#### Steps to reproduce\n\n``` js\n          var promise = Parse.Cloud.httpRequest({\n            method: \"GET\",\n            url: \"https://www.blah blahblah\",\n          });\n```\n#### Logs/Trace\n\n```\nTypeError: Cannot read property 'statusCode' of undefined\n    at Request._callback (cloudcode/dist/node_modules/parse-server/lib/httpRequest.js:46:35)\n    at self.callback (cloudcode/dist/node_modules/parse-server/node_modules/request/request.js:199:22)\n    at emitOne (events.js:77:13)\n    at Request.emit (events.js:169:7)\n```\n"},{"labels":["bug"],"text":"We have not migrated and are still using a combination of development and production databases on Parse. We have an array of pointers column on our _User class. It used to be that calling Parse.addUnique(\"students\", StudentObj); would save a reference pointer to the students but now the server seems to be populating the array with the full objects of each \"student\" _User class.\n\nAdditionally, this is causing a series of problems because calling \"include\" on _User for the students array of pointers is now simply returning an assorted array with some rows only having an ObjectID and some having a full (but out of date) object. What happened to the proper reference pointer logic?\n"},{"labels":["bug"],"text":"Hey. We're transitioning onto `parse-server`. We had old code POSTing images to the REST API, immediately followed by POSTing data to another collection, with a pointer to that earlier image file.\n\nWhen we were fully on Parse, before using `parse-server`, we supplied data like this:\n\n``` js\n'imageObject': {\n  'name': data.name,\n  '__type': \"File\"\n}\n```\n\nwhere only a `name` and a `__type` were necessary to define that relationship.\n\nOnce we moved to `parse-server`, this code was breaking. It boiled down to [this line](https://github.com/ParsePlatform/parse-server/blob/master/src/Schema.js#L731) which also looks for a `url`. We needed to change out the data we're POSTing to something like this:\n\n``` js\n'imageObject': {\n  'name': data.name,\n  'url': data.url,\n  '__type': \"File\"\n}\n```\n\nMaybe this information could be provided in migration docs, since we didn't see it there.\n\nIt might also be worth mentioning that we're now using the `S3Adapter` to store our newly-created files in a bucket.\n\nThanks for everything! Overall, this migration is going far smoother than we could've expected.\n\ncc @kyleseaman\n"},{"labels":["bug"],"text":"I migrated my data from parse to AWS EC2 and mongoDB (cancelled the migration as I just wanted the data for testing not to start using the new DB in production).  My current code getting related objects using parse.com that is working fine is\n\n`\n$relation = $thisUnit->getRelation('unitImages');\n$query = $relation->getQuery();\n$unitImages = $query->find();\n`\n\n$thisUnit being a Unit object and 'unitImages' being of type Relation property (column) of that object.\n\nThere is more to this function, but I don't THINK its relative to the issue. The message I am getting from this function is:\n\nFatal error: Uncaught exception 'Parse\\ParseException' with message 'Bad Request' in /var/www/html/vendor/parse/php-sdk/src/Parse/ParseClient.php:352 Stack trace: #0 /var/www/html/vendor/parse/php-sdk/src/Parse/ParseQuery.php(362): Parse\\ParseClient::_request('GET', 'classes/?where=...', NULL, NULL, false) #1 /var/www/html/checkAvailabilityFunctions.php(153): Parse\\ParseQuery->find() #2 /var/www/html/lodging.php(385): createUnitList(Array) #3 {main} thrown in /var/www/html/vendor/parse/php-sdk/src/Parse/ParseClient.php on line 352\n\nThis issue could be entirely predicated on me not having a firm understanding of how this data is supposed to be structured.  When I do a find() on the mongo shell of all the Unit objects the Relation Field of unitImages in not there at all.  I expected to see the field with some form of pointer to the Unit Images Class.\n\nAm I just doing something wrong or is there supposed to be a field in the Units Class?\n\nThanks for the help.\n"},{"labels":["bug"],"text":"Hi,\n\nWhenever an anonymous user is registered, the \"authData\" column for that user becomes:\n\n```\n{\"anonymous\": null}\n```\n\nThis differs (I believe) from the behavior of hosted Parse in that hosted Parse would simply omit the authData column if it ever encountered this value.\n\nThe current behavior of parse-server with regard to this doesn't seem to affect the iOS SDK, but does cause a few problems with the Android SDK.\n\nI filed an [issue](https://github.com/ParsePlatform/Parse-SDK-Android/issues/405) against the Android SDK, and I was told this was a parse-server issue.\n\nHow should I proceed?\n"},{"labels":["bug"],"text":"Is there any way to change the content-type when using S3Adapter? Images are all being downloaded instead of being viewed.\n"},{"labels":["bug"],"text":"Hi,\n\nI am logging in an user with parse-server, then returning `user.getSessionToken()` to my client.\nWhen using `PFUser becomeInBackground` providing token got from server, user successfully login, but `[PFUser currentUser].sessionToken` is null.\n\nCould it be because of `GET /parse/users/me` doesn't return a sessionToken along with user ?\nAs seen with VERBOSE=1:\n\n```\nGET /parse/users/me { host: '...',\n  accept: '*/*',\n  'x-parse-session-token': 'r:27b08dbdcf8....',\n  ...}\nresponse: <A Parse user, without sessionToken, is this normal ?>\n```\n\nIf that's normal, why my PFUser doesn't have sessionToken, which implies that it's not really logged (further request are sent without sessionToken) ?\n\nThanks\n"},{"labels":["bug"],"text":"I have two ParseFiles in my Parse.User class. ProfilePic and CoverPhoto.\n\nI've started migration over to Compose.io DBaaS. I've got Parse-Server up and running locally pointing to Compose. That's all working and I can login with a simple test user.\n\nWhen logging in with a user who does NOT have any old files attached to _User (test user) the login is successful. However, when logging into a _User who still has these old files (on parse s3?) I get this error:\n\n```\n[ERROR] :  Script Error Tried to save an object containing an unsaved file.\n```\n\n```\n//Server side, with verbose=1 returns the full object\n....\n  \"coverPhoto\": {\n    \"__type\": \"File\",\n    \"name\": \"tfss-2f7fb0bd-d9e6-4ec0-b20b-80405491afcb-cover.jpg\"\n  },\n...\n```\n\nIf I delete the coverPhoto key in the database the error goes away so I know it's the old files causing it.\n\nI'm guessing fileKey is supposed to grabbing the file? And it's not? There's no failure in the server side. I have confirmed that the fileKey option is set correctly and and appId matches Parse.com.\n\nThanks\n"},{"labels":["bug"],"text":"I'm having a weird issue with parse-server. I followed the migration step and am hosting the server on AWS Elastic Beanstalk.\n\nThe problem I am having is that when ever I create a new anonymous user (with either the Android or iOS SDK's automatic user) and try to call my cloud code function that queries using .withinKilometers(), it returns an empty array. It doesn't cause an error, just returns no results. \n\nClosing the app and trying again with the recently created user still does not work, however if I re-deploy the same parse-server code and try again with same user it returns the expected results. All my other queries and cloud functions work correctly the first time. Also the function in question works with a new anonymous user without re-deployment if I remove the .withinKilometers() call.\n"},{"labels":["bug"],"text":"We have encountered a bug while using \"beforeSave()\" function.  Below is the code that we use the function in. in this code, if  the field \"SolveScore\"\n is incremented in client, calling the \"score.get(\"SolveScore\")\" function must return the incremented score, but instead of that, it returns this object:{\"__op\":\"Increment\",\"amount\":85}\n\n```\nParse.Cloud.beforeSave(\"UserScore\", function (request, response) {\n\n var totalScore = (score.get(\"CreationScore\") || 0) + (score.get(\"SolveScore\") || 0);\n\n score.set(\"TotalScore\", totalScore);\n\n response.success();\n}\n```\n\nRather than this bug, some similar bugs has appeared in cloud codes when we moved to our new server that did not exist when we used parse host.\n"},{"labels":["bug"],"text":"In the current file adapter of api.parse.com, I can see that both file and base64 string are supported.\n\ne.g. data =  {\"_ContentType\":\"image/jpeg\",\"base64\":\"/9j/4AAQSkZJRgABAQAAAQ...........\"}\nand also\ndata = $(\"#ulPhoto1\")[0].files[0];\n\nI do rely on this a lot when performing client-side resize image function.\nCan we do the same in the S3Adapter?\n\nP.S. This is the code I used to upload image.\n\n```\n$.ajax({\n      type: \"POST\",\n      beforeSend: function(request) {\n        request.setRequestHeader(\"X-Parse-Application-Id\", 'myAppId');\n        request.setRequestHeader(\"X-Parse-REST-API-Key\", 'myRestAPIKey');\n        request.setRequestHeader(\"Content-Type\", \"image/jpeg\");\n      },\n      url: \"http://localhost:1337/parse/files/photo.jpg\",\n      data: data,\n      processData: false,\n      contentType: false,\n      success: function(photo) {\n           ......\n      },\n      error: function(jqXHR, textStatus, errorThrown)  {\n           ......\n      }\n    });\n```\n"},{"labels":["bug"],"text":"This is my code for creating a new post:\n\n```\n app.post('/',requireUser, function(req, res) {\n    var parseUserMe = new Parse.User();\n    parseUserMe.id = req.user.id;\n    var post = new Post();\n    post.set(\"Desc\", req.body.Desc);\n    post.set(\"createdBy\", parseUserMe);\n    post.save().then(function(post) {\n      res.json({ id: post.id });\n    }, function(error) {\n      res.json({ error: error });\n    });\n  });\n```\n\nBut inside MongoDB, the createdBy field is saved as \n\n```\n    \"_p_createdBy\": {\n        \"score\": 59,\n        \"updatedAt\": {\n            \"$date\": \"2016-02-23T04:06:29.402Z\"\n        },\n        \"objectId\": \"SPtdQePtm2\",\n        \"__type\": \"Object\",\n        \"className\": \"_User\"\n    },\n```\n\ninstead of this:\n\n`\"_p_createdBy\": \"_User$SPtdQePtm2\",`\n\nwhich caused the Dashboard to crash and showed the following error on the server:\n\nUncaught internal server error. [TypeError: mongoObject[key].split is not a function] TypeError: mongoObject[key].split is not a function\n"},{"labels":["bug"],"text":"In Cloud code when using \"is dirty\" method on a property on any PatseObject, it will always return false. \nThe cloud code I'm running is working as expected on parse hosted server, so this is an issue with this code. \n"},{"labels":["bug"],"text":"Hi,\n\nI had successfully set up MongoDB and the Parse Server a few days after the service termination announcement & ultimately had one of my apps successfully running in test mode (i.e. just my development version).  I noticed yesterday that a new version of Parse Server is available with Push Notification API included which I need for another app. Hence I used npm update & npm update -g to update my set up.  Now when I start MongoDB in exactly the same way I did prior to the update & then start the Parse Server with npm start, the server does not make a connection to the MongoDB database that it is pointed at.  If I run mongo to make a connection to the same db_uri, it works and everything is exactly the same as it was pre-update.  My mongod.conf file is exactly as it was pre-update also.  The version of MongoDB seems to be the same as pre-update.\n\nAnyone have any ideas what may have happened & where I should look for a change that is causing this? \n\n(I suspect something happened to MongoDB because when I tried to migrate data from parse.com for the 2nd app that uses Push Notifications it kept telling me it  could not find the server even though I was using exactly same procedure that succeeded for 1st app).\n\nAlso are there any log files for Parse Server? Can't seem to find any.\n\nThx for any help.\n\nRB\n"},{"labels":["bug"],"text":"Hi,\n\nI have a very strange behavior when I save an object, and that I apply a beforeSave trigger on it.\n\nWe suppose we have an object with an attribute equal to \"100\". We also have a \"beforeSave\" trigger that modifies this value to \"50\", if some conditions are right.\n\nNow, when I call object.save(), the \"beforeSave\" is triggered, the value into the database is \"50\", but the value returned by the \"save\" operation is still \"100\".\n\nHow is it possible that the \"save\" operation returns an object with attributes different from what they are into the database?\n\nThank you.\n"},{"labels":["bug"],"text":"There are a couple places in our app where we do things in parallel with `Parse.Promise.when()`, they worked in the Hosted Parse, but not anymore after migration. Is it supported?\n\nHere's the general structure of those cloud functions:\n\n```\nvar promises = [];\n\nvar query1 = new Parse.Query(\"Class1\");\nquery1.equalTo(\"checked\",false);\npromises.push(query1.find());\n\nvar query2 = new Parse.Query(\"Class2\");\nquery2.containedIn(\"name\",[\"foo\",\"bar\"]);\npromises.push(query2.find());\n\nParse.Promise.when(promises).then(function(results1,results2){\n    // process results and return to client\n}, function(error){\n    // handle error\n})\n```\n\nServer log when these functions are called:\n`at=error code=H12 desc=\"Request timeout\" method=POST path=\"/parse/functions/myfunction\" host=host request_id=123456 fwd=\"1.2.3.4\" dyno=web.1 connect=1ms service=30001ms status=503 bytes=0`\n"},{"labels":["bug"],"text":"Hi,\n\nI create an ParseObject in client side, \nthen, try to update the record using below code.\n\n```\n    ParseObject     record = ParseObject.CreateWithoutData(\"LockRecord\", objectID);\n    record.Increment(\"lock_count\");\n    Task run_task =   record.SaveAsync();\n```\n\n..\n\n```\nif(run_task.IsCanceled || run_task.IsFaulted)\n{\n// fail.....\n}\n```\n\nthe saveAsync() failed....\n\nwhen I print out the exception msg, it said \"invalid key name: _noBody\"\n\nthis error happen after I host the server myself, it is not happened before~\n\nCan someone give me some hints? Thanks a lot.\n"},{"labels":["bug"],"text":"Hello,\n\nI'm trying to run a compound query where in I want to match a pointer to a field which is of type relation. Here's my request: \n\n```\nGET /parse/classes/Activity { 'user-agent': 'node-XMLHttpRequest, Parse/js1.7.0 (NodeJS 4.2.6)',\n  accept: '*/*',\n  'content-type': 'text/plain',\n  host: 'localhost:1337',\n  'content-length': '422',\n  connection: 'close' } {\n  \"where\": {\n    \"$or\": [\n      {\n        \"toUsers\": {\n          \"__type\": \"Pointer\",\n          \"className\": \"_User\",\n          \"objectId\": \"NSME8tT0tf\"\n        }\n      },\n      {\n        \"toUser\": {\n          \"__type\": \"Pointer\",\n          \"className\": \"_User\",\n          \"objectId\": \"NSME8tT0tf\"\n        }\n      }\n    ]\n  },\n  \"limit\": 100,\n  \"order\": \"-updatedAt\"\n}\n```\n\nIn the above request `toUsers` is a column of type relation while `toUser` is of type pointer. The results simply ignore the 'toUsers' query and returns results matching pointer column. Running these two queries separately works. \n\nHere's the cloud code of the above request: \n\n```\nParse.Cloud.define(\"GetActivity\", function(request, response) {\n\n  var Activity = Parse.Object.extend(\"Activity\");\n  var User = Parse.Object.extend(\"User\");\n\n  var user = request.user;\n\n  var queryPings = new Parse.Query(Activity);\n  queryPings.equalTo(\"toUsers\", user);\n\n  var queryFollows = new Parse.Query(Activity);\n  queryFollows.equalTo(\"toUser\", user);\n\n  var query = Parse.Query.or(queryPings, queryFollows);\n  query.descending(\"updatedAt\");\n  query.limit(100);\n\n  query.find().then(function(activities) {\n    response.success(activities);\n    }, function(error) {\n      response.error(error);\n  });\n\n}); \n```\n\nJust to try out whether compound queries were working or not, I tested it with values on normal string based columns and that worked fine. It seems the problem only occurs on compound queries involving relation type column. I'd also like to add that this code works well with the parse hosted server.\n"},{"labels":["bug",null],"text":"I was getting incorrect urls for my files stored in S3. I'm using parse-server 2.0.8\n\nI had to modify the following line in  S3Adapter.js\n\nFrom: return 'https://' + this.bucket + '._s3Client.amazonaws.com' + '/' + this._bucketPrefix + filename;\n\nTo: return 'https://' + this._bucket + '.s3.amazonaws.com' + '/' + this._bucketPrefix + filename;\n"},{"labels":["bug"],"text":"I have recently noticed that a new parse-server project (i.e. one that hasn't been migrated from hosted Parse) has a security issue with the `_User` class.\n\nEssentially parse-server creates the `_User` in the `_SCHEMA` collection, but it doesn't default to locked down `_metadata` permissions — thus exposing the entire user base with a simple `new Parse.Query(\"_User\").find()` query.\n\nI propose that when the `_User` class is created, we lock it down automatically.  If I have time I'll try and add a fix for this, but I thought I would highlight it asap to prevent any undue security issues with new apps using parse-server.\n"},{"labels":["bug"],"text":"Hi.\n\nI've been using a query in a iOS app, that worked fine with parse hosted services,\nbut after trying with a local parse server it returns the error `improper usage of $select error`.\n\nFor NDA reasons, I had to change the names of the classes, attributes, tokens and keys in this ticket.\n\nThis is the query I'm using:\n\n```\noverride func queryForTable() -> PFQuery {\n    let query = PFQuery(className: \"C1\");\n    let auxQuery = PFQuery(className: \"C1\");\n    query.whereKey(\"A1\", matchesKey: \"A2\", inQuery: auxQuery);\n    query.includeKey(\"A3\");\n    query.includeKey(\"A2\");\n    query.orderByDescending(\"createdAt\");\n\n    return query;\n}\n```\n\nA1 and A2 are pointers to objects of the same type. I tried the same query with simple types,\nbut the error still happens. If I comment the `whereKey` line, the query works perfectly and I get my results.\n\nI ran the parse server with `VERBOSE=1` and this is what I got:\n\n```\nGET /parse/classes/C1 { host: 'localhost:1337',\n  'x-parse-client-version': 'i1.12.0',\n  accept: '*/*',\n  'x-parse-session-token': 'a-valid-session-token',\n  'x-parse-application-id': 'my-application-id',\n  'x-parse-client-key': 'my-client-key',\n  'x-parse-installation-id': 'my-installation-id',\n  'x-parse-os-version': '9.2 (15D21)',\n  'accept-language': 'en-us',\n  'accept-encoding': 'gzip, deflate',\n  'content-type': 'application/json; charset=utf-8',\n  'content-length': '169',\n  'user-agent': 'projname/1 CFNetwork/758.2.8 Darwin/15.3.0',\n  connection: 'keep-alive',\n  'x-parse-app-build-version': '1',\n  'x-parse-app-display-version': '1.0' } {\n  \"where\": {\n    \"A1\": {\n      \"$select\": {\n        \"query\": {\n          \"className\": \"C1\"\n        },\n        \"key\": \"A2\"\n      }\n    }\n  },\n  \"include\": \"A3,A2\",\n  \"order\": \"-createdAt\",\n  \"limit\": \"3\"\n}\nerror: ParseError { code: 102, message: 'improper usage of $select' }\n```\n\nAfter this, I tried running the queries manually with curl requests. I tried querying \nmy local parse server and the hosted service. This is the result:\n\n```\n> curl -X GET -H \"X-Parse-Application-Id: my-application-id\"  -H \"X-Parse-REST-API-Key: my-rest-api-key\"  -G  --data-urlencode 'where={\"A1\": {\"$select\": {\"query\": {\"className\": \"C1\"},\"key\": \"A2\"}}}' --data-urlencode 'include=A3,A2'  --data-urlencode 'limit=3' --data-urlencode 'order=-createdAt'  http://localhost:1337/parse/classes/C1\n{\"code\":102,\"error\":\"improper usage of $select\"}\n```\n\n```\n> curl -X GET -H \"X-Parse-Application-Id: my-application-id\"  -H \"X-Parse-REST-API-Key: my-rest-api-key\"  -G  --data-urlencode 'where={\"A1\": {\"$select\": {\"query\": {\"className\": \"C1\"},\"key\": \"A2\"}}}' --data-urlencode 'include=A3,A2'  --data-urlencode 'limit=3' --data-urlencode 'order=-createdAt'  https://api.parse.com/1/classes/C1\n{\"results\":[{\"createdAt\":\"2016-02-10T22:36:04.828Z\",\"A4\":10,\"objectId\":\"sgFcN9g3d5\", ...]}}\n```\n\n(This last result is cut short, again to avoid NDA issues, but it's the right result.)\n\nDo you have any idea of what is wrong here?\n\nThanks in advance.\n"},{"labels":["bug"],"text":"I can't seem to access the request params as it appears to be displaying as undefined.\n\nI'm posting to a cloud function with populating a parameter of \"q\". \n\nI post to this URL and just have it print the request.params.q as part of the json response.  I've tried with my personal project and also the parse-server-example and i get the same issue. (the url below is actually to the parse-server-example)\n\nhttp://localhost:1337/parse/functions/hello?q=test\n\nIs this an error due to Parse Server (though it's express.js middleware and just passing existing request and response) or am i doing this wrong?  I can't find help through stack overflow so i'm coming here...\n"},{"labels":["bug"],"text":"I have noticed that the behavior of hosted Parse is to create a new Session object when a user login and delete this object when this user logout from the same device.\nWhen I tested the ParseServer version instead of the hosted Parse I noticed that this behavior is different, the Session object is created on login as expected, but on logout the object is not deleted, so if the user keeps logging in and logging out there will be as many Session objects on DB as the number of times the user login and logout.\nIs this the expected behavior or is it a bug on ParseServer?\n"},{"labels":["bug"],"text":"Happened once I updated to the latest build:\n\n```\nError: Cannot find module 'parse-server'\n    at Function.Module._resolveFilename (module.js:338:15)\n    at Function.Module._load (module.js:289:25)\n    at Module.require (module.js:366:17)\n    at require (module.js:385:17)\n```\n\n```\nvar ParseServer = require('parse-server').ParseServer; // not changed this line\n```\n"},{"labels":["bug"],"text":"I'm using parse-server on AWS Elastic beanstalk with MongoLab and I'm getting this error when I login using Facebook:\n\n[Error]: this auth is already used (Code: 208, Version: 1.12.0)\n\nWhen I create the user via Facebook, everything is fine, but when I logout and then re-login again using Facebook I get the error.\n\nAny ideas?\n\nEDIT: It seems the user is created twice in the DB (one has the email, the other doesn't)\n![screen shot 2016-02-08 at 11 41 37 pm](https://cloud.githubusercontent.com/assets/2792041/12907801/a9587286-cebd-11e5-96dd-5f4b175bc555.png)\n\nEDIT2: This error was also happening on parse.com, but more as a warning: \"[Error]: Another user is already linked to this facebook id. (Code: 208, Version: 1.10.0)\". This happens if the user logs out - which creates a new anonymous user - and then relogs in with Facebook. **But a duplicate user was never created on parse.com.** It is however created here with Parse Server.\n"},{"labels":["bug"],"text":"It looks that is lacking url property for file fields in the json response of the login function.\n\nMore details can be viewed here:\nhttps://github.com/ParsePlatform/Parse-SDK-iOS-OSX/issues/812\n"},{"labels":["bug"],"text":"Hi!\nWhen I get a date field  of an object using php sdk, it usually returns a dateTime and I was able to hadle it:\n(e.g.)\n\n```\n$now = new DateTime();\n$diff = $now->diff($task->get(\"start\"));\n```\n\nNow, with parse-server open source version, it returns a string that must be parsed in order to handle it.\n"},{"labels":["bug"],"text":"I found the issue in RestWrite.js:\n\n```\n// Check for username uniqueness\n    if (!this.data.username) {\n      if (!this.query) {\n        // TODO: what's correct behavior here\n        this.data.username = '';\n      }\n      return;}\n```\n\nI'm not sure what the answer is though.  When using Parse.com anonymous users could be saved with data before registration took place.\n"},{"labels":["bug"],"text":"Hello , \n\nI have successfully migrate the database to mongodb and i uploaded parse server to google app engine , i tried to query a class called **Category**  \nit worked.However , when i try to do some Constrains like where equal to it didn't  work.\n\nthe rest api ,shows the same result with or without constrains\n\n![screen shot 2016-02-03 at 5 03 57 pm](https://cloud.githubusercontent.com/assets/5598959/12782991/3e3433d8-ca98-11e5-8c75-d47067cc77ad.png)\n\n![screen shot 2016-02-03 at 5 03 41 pm](https://cloud.githubusercontent.com/assets/5598959/12782993/46232f4a-ca98-11e5-8921-5922ae21ec0f.png)\n\nin addition i have tried the same thing in android sdks and it didn't work when i put constrains only it works without the constrains. \n"},{"labels":["bug"],"text":"I just migrate the db to mongolab.\n\nI start the parse server example. \n\nI try to query something with javascript sdk 1.7.0 on nodejs v4.2.4. \n\nBelow is my javascript code.\n\nvar Parse = require('parse/node').Parse;\nParse.initialize(\"myAppId\", \"jsKey\");\nParse.serverURL = 'http://localhost:1337/parse'\n\nvar clz = Parse.Object.extend('myClass');\nvar query = new Parse.Query(clz);\nquery.find().then(function(list){\n    console.log(list.length);\n},function(error){\n    console.log(error);\n});\n\nOne of my original class(size 4) will get  ParseError { code: 1, message: undefined }.\n\nOthers get all obj size (not original default limit 100)\n\nI use original keys and with default parse api server endpoint.\n\nIt works, and get 4 and 100 as expected.\n\nI found that query.limit default 100 is gone.\nquery.skip cannot exceed 10000 constraint is gone.\nCould you also list all influence of the code? \n(In this case, query with 100 results must add query.limit(100); )\n\nOnly contains 'hello' cloud code.\n"},{"labels":["bug"],"text":"when cloud code res.error(\"Error message\") the server crash,handleParseErrors not work\n"},{"labels":["bug"],"text":"I am using parse-android SDK 1.13.0. I am able to upload file to parse's backend. \n\nBut when i change my server endpoint to migrated end point, upload fails. \n\n```\n{\n    \"code\": 130,\n    \"error\": \"Invalid file upload.\"\n}\n```\n\nI added console logs in file.js on parse-server i found the request.body is empty.\n\n**Files.js processCreate req: [object Object] : {} : undefined**\n\n```\nvar processCreate = function(req, res, next) {\nconsole.log(\" Files.js processCreate req:\"+req+\" : \"+ JSON.stringify(req.body)+\" : \"+req.body.length\nif (!req.body || !req.body.length) {\n    next(new Parse.Error(Parse.Error.FILE_SAVE_ERROR,\n         'Invalid file upload.'));\n    return;\n  }\n\n```\n\nException message shown on client side.\n\n```\niIllegalStateException: Unable to encode an unsaved ParseFile\n```\n\nSeems to be an issue on the parse-server side. The request body is found empty. I reported this issue on parse-android-sdk. Since the sdk could upload to parse hosted backend. Suspect is on the parse-server side.\n"},{"labels":["bug"],"text":"- Works in Parse.com server but not in local parse-server.\n- Using Android Parse SDK. \n\n**Client Request**\nGET /parse/classes/Item { 'x-parse-app-display-version': '1.7.1',\n  'x-parse-installation-id': '--------',\n  'user-agent': 'Parse Android SDK 1.13.0 (com.bitbitbitbit.thefreebees.debug/19) API Level 23',\n  connection: 'Keep-Alive',\n  'accept-encoding': 'gzip',\n  'x-parse-os-version': '6.0.1',\n  'x-parse-app-build-version': '19',\n  'content-type': 'application/json',\n  'x-parse-client-key': '------',\n  'x-parse-client-version': 'a1.13.0',\n  host: '192.168.0.103:1337',\n  'content-length': '298',\n  'x-parse-session-token': '-----',\n  'x-parse-application-id': '-----' } {\n  \"include\": \"photos,owner\",\n  \"where\": \"{\\\"locationCoords\\\":{\\\"$nearSphere\\\":{\\\"__type\\\":\\\"GeoPoint\\\",\\\"latitude\\\":1.316943,\\\"longitude\\\":103.900841},\\\"$maxDistance\\\":0.0023544184586407157},\\\"title\\\":{\\\"$exists\\\":true},\\\"status\\\":\\\"AVAILABLE\\\",\\\"owner\\\":{\\\"$exists\\\":true}}\",\n  \"count\": \"1\"\n}\n\n**Parse-Server Response**\n{\"code\":1,\"message\":\"Internal server error.\"}\n\n**Parse-Server logs:**\nerror: bad key in untransform: _auth_data_twitter\nUncaught internal server error. bad key in untransform: _auth_data_twitter undefined\n"},{"labels":["bug"],"text":"Hi,\n\n  It looks like object.isNew() no longer returns true in the beforeSave function when a new object is created.\n\n  Please kindly take a look.\n\n  Thanks.\nSincerely,\nAnthony\n"},{"labels":["bug"],"text":"In iOS, with a normal (i.e. signed up with username and password) parse user, the following works:\n[PFUser currentUser].username = @\"newParseName\";\n[PFUser currentUser] save];\n\nHowever, a user who authenticated via Facebook who performs\n\n[PFUser currentUser].username = @\"newFBName\";\n[PFUser currentUser] save];\n\nwill get the following error:\n\n[Error]: cannot modify user function () {\n  return this.data.objectId || this.query.objectId;\n} (Code: 206, Version: 1.12.0)\n\nThis 'cannot modify user function' error is returned for any changes you try to make to the current loggedin user when its a Facebook user.\n"},{"labels":["bug"],"text":"I migrated my Parse data over to a local instance. Most queries seem to work, but this one does not:\n\n```\ncurl \n-H \"X-Parse-Application-Id: myAppId\"   \n-H \"Content-Type: application/json\"   \nhttp://localhost:1337/parse/classes/Test \n--data-urlencode 'where={\"name\":{\"$exists\":true}}'\n```\n\nI get: \n\n```\n{\"code\":1,\"message\":\"Internal server error.\"}\n```\n\nThe server log shows:\n\n```\nUncaught internal server error. { [Error: invalid json]\n  body: 'where=%7B%22name%22%3A%7B%22%24exists%22%3Atrue%7D%7D',\n  status: 400 } Error: invalid json\n    at parse (/vagrant/parse-server-example/node_modules/body-parser/lib/types/json.js:79:15)\n    at /vagrant/parse-server-example/node_modules/body-parser/lib/read.js:102:18\n    at done (/vagrant/parse-server-example/node_modules/raw-body/index.js:248:14)\n    at IncomingMessage.onEnd (/vagrant/parse-server-example/node_modules/raw-body/index.js:294:7)\n    at IncomingMessage.g (events.js:273:16)\n    at emitNone (events.js:80:13)\n    at IncomingMessage.emit (events.js:179:7)\n    at endReadableNT (_stream_readable.js:906:12)\n    at nextTickCallbackWith2Args (node.js:474:9)\n    at process._tickCallback (node.js:388:17)\n```\n"},{"labels":["bug"],"text":"This seems to have been mentioned in issue #32 and was supposed to be fixed, however I am still getting this error. This is not on a migrated database, but rather a newly created one by the \"parse-server-example\" scripts:\n\nWhen trying to login, I am now getting the following error:\n\nBody : {\n     \"code\": 111,\n     \"error\": \"schema mismatch for _Session.expiresAt; expected date but got string\"\n }\n\nI am currently on version 2.0.3\n"},{"labels":["bug"],"text":"Hi,\nI am moving to my own Parse Server thanks to your guide and your release.\n\nI just have question on Cloud Function. \nI have got some functions returning Parse.Object. When I use the Parse backend, I get Parse.Object (extended or not). When I use my own server, Cloud function returns regular JS object instead of Parse.Object.\nIs it the correct behavior or that's a bug ?\n\nThanks !\n"},{"labels":["bug"],"text":"I keep track of certain users by adding them to an array of pointers in the database.\nMy app is a turn-based game (3 turns exactly, that's why I opted for an array of user pointers as it wouldn't create very long arrays).. Each game keeps track of users playing by adding User Pointers to userHistory. It looks like this:\n\n`\"userHistory\": [`\n`{`\n`\"__type\": \"Pointer\",`\n`\"className\": \"_User\",`\n`\"objectId\": \"pv54RnXqqj\"`\n`},`\n`{`\n`\"__type\": \"Pointer\",`\n`\"className\": \"_User\",`\n`\"objectId\": \"Xqqpv33Rnj\"`\n`}\n`    ],`\n\nThat part still works fine since the migration.\n\nProblem is when I query on `userHistory`. For instance, I want to retrieve all games where a certain user has participated. When previously using Parse, I would simply:\n\n`gameQuery.equalTo(\"userHistory\", object);\n// where object is a pointer to a specific user`\n\nAnd that would work.\n\nQuerying for a specific pointer on an array of pointers doesn't seem to work with `equalTo()` as it used to.\nIt's giving me 0 results.\n\nWhat am I missing?\n\n**EDIT**\n_I worked around this for now by storing object ID's and not pointers. No problem with query.equalTo() on array of ids._\n"},{"labels":["bug"],"text":"When I am trying to login using the local parse-server and migrated mongoDB (on MongoLab), I am getting the following:\n{\"code\":111,\"error\":\"schema mismatch for _Session.createdWith; expected map but got object\"}\n\nplease advice. \n"},{"labels":["bug"],"text":"I have everything setup correctly \"so I say\". \n\nAny ideas?\n"}]