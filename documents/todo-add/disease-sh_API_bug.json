[{"labels":["bug"],"text":"There seems to be some inconsistency with the returned data for Deaths on the UK scraper, returned data does not match the GOV data webpage: https://coronavirus.data.gov.uk/deaths\r\n\r\nIt looks like the API call is missing the parameters: newDeaths28DaysByDeathDate & cumDeaths28DaysByDeathDate\r\n\r\nas shown here: \r\nhttps://api.coronavirus-staging.data.gov.uk/v1/data?filters=areaType=overview&structure=%7B%22areaType%22:%22areaType%22,%22areaName%22:%22areaName%22,%22areaCode%22:%22areaCode%22,%22date%22:%22date%22,%22newDeaths28DaysByDeathDate%22:%22newDeaths28DaysByDeathDate%22,%22cumDeaths28DaysByDeathDate%22:%22cumDeaths28DaysByDeathDate%22%7D&format=json&page=1\r\n\r\nI have noticed this inconsistency only over the last few days or so.\r\n\r\nI cannot see how the scraper is currently getting the TODAY figures as there does not seem to be any Deaths fields in the scraper structure:\r\n\r\n`const structure = {\r\n\t\t\tdate: 'date',\r\n\t\t\ttodayTests: 'newTestsByPublishDate',\r\n\t\t\ttests: 'cumTestsByPublishDate',\r\n\t\t\ttestCapacity: 'plannedCapacityByPublishDate',\r\n\t\t\tnewCases: 'newCasesByPublishDate',\r\n\t\t\tcases: 'cumCasesByPublishDate',\r\n\t\t\thospitalized: 'hospitalCases',\r\n\t\t\tusedVentilationBeds: 'covidOccupiedMVBeds',\r\n\t\t\tnewAdmissions: 'newAdmissions',\r\n\t\t\tadmissions: 'cumAdmissions'\r\n\t\t};`\r\n\r\n"},{"labels":["bug"],"text":"\"Cannot read property 'updated' of undefined\". See action logs from earlier this morning for more detail"},{"labels":["bug"],"text":"**Describe the bug**\r\nThe UK API has a staging and a prod endpoint. They keep breaking one, and leaving the other working.\r\n\r\n**To Reproduce**\r\nWhere the bug occurring? Examples:\r\n*CURRENTLY*\r\nThis endpoint hangs for 5 minutes before returning results: [prod endpoint](https://api.coronavirus.data.gov.uk/v1/data?filters=areaName=United%20Kingdom;areaType=overview&structure=%7B%22date%22:%22date%22,%22todayTests%22:%22newTestsByPublishDate%22,%22tests%22:%22cumTestsByPublishDate%22,%22testCapacity%22:%22plannedCapacityByPublishDate%22,%22newCases%22:%22newCasesByPublishDate%22,%22cases%22:%22cumCasesByPublishDate%22,%22hospitalized%22:%22hospitalCases%22,%22usedVentilationBeds%22:%22covidOccupiedMVBeds%22,%22newAdmissions%22:%22newAdmissions%22,%22admissions%22:%22cumAdmissions%22%7D)\r\n- this endpoint returns the most up-to-date data, including the current date\r\n\r\nThis endpoint works as expected: [staging endpoint](https://api.coronavirus-staging.data.gov.uk/v1/data?filters=areaName=United%20Kingdom;areaType=overview&structure=%7B%22date%22:%22date%22,%22todayTests%22:%22newTestsByPublishDate%22,%22tests%22:%22cumTestsByPublishDate%22,%22testCapacity%22:%22plannedCapacityByPublishDate%22,%22newCases%22:%22newCasesByPublishDate%22,%22cases%22:%22cumCasesByPublishDate%22,%22hospitalized%22:%22hospitalCases%22,%22usedVentilationBeds%22:%22covidOccupiedMVBeds%22,%22newAdmissions%22:%22newAdmissions%22,%22admissions%22:%22cumAdmissions%22%7D)\r\n- this endpoint returns up to yesterday's data\r\n\r\n**Expected behavior**\r\nOur UK scraper should first target the `prod` endpoint, and pass in a `timeout` config object to the `axios` request. If the request times out, then attempt hitting the `staging` endpoint. If both fail, let it hit the catch.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n"},{"labels":["bug"],"text":"Right now is prod is seems that a query to Redis on NYT or Apple data hangs because the keys are literally too big. This is causing the entire cache to become stale, so the fix could be splitting keys up for first NYT and seeing if that fixes the issue, then Apple. \r\n@Collin-St will work on this"},{"labels":["bug"],"text":"This issue is based on the work @neo7337 did for NYT endpoint having `lastDays` param to make serving JSON filed less resource intensive, and tests run faster. Te endpoint, however, has a bug where `lastDays=1` returns `[]` because we are behind the official data by around a day.\r\n"},{"labels":["bug"],"text":"`v3/covid-19/nyt/counties/cook` returns: \r\n```js\r\n(node:10918) UnhandledPromiseRejectionWarning: TypeError: Cannot read property 'filter' of undefined\r\n[start:devserver]     at router.get (/Users/Ethan/LocalDesktop/API/routes/v3/covid-19/apiNYT.js:29:27)\r\n[start:devserver]     at Layer.handle [as handle_request] (/Users/Ethan/LocalDesktop/API/node_modules/express/lib/router/layer.js:95:5)\r\n[start:devserver]     at next (/Users/Ethan/LocalDesktop/API/node_modules/express/lib/router/route.js:137:13)\r\n[start:devserver]     at Route.dispatch (/Users/Ethan/LocalDesktop/API/node_modules/express/lib/router/route.js:112:3)\r\n[start:devserver]     at Layer.handle [as handle_request] (/Users/Ethan/LocalDesktop/API/node_modules/express/lib/router/layer.js:95:5)\r\n[start:devserver]     at /Users/Ethan/LocalDesktop/API/node_modules/express/lib/router/index.js:281:22\r\n[start:devserver]     at param (/Users/Ethan/LocalDesktop/API/node_modules/express/lib/router/index.js:354:14)\r\n[start:devserver]     at param (/Users/Ethan/LocalDesktop/API/node_modules/express/lib/router/index.js:365:14)\r\n[start:devserver]     at Function.process_params (/Users/Ethan/LocalDesktop/API/node_modules/express/lib/router/index.js:410:3)\r\n[start:devserver]     at next (/Users/Ethan/LocalDesktop/API/node_modules/express/lib/router/index.js:275:10)\r\n[start:devserver]     at Function.handle (/Users/Ethan/LocalDesktop/API/node_modules/express/lib/router/index.js:174:3)\r\n[start:devserver]     at router (/Users/Ethan/LocalDesktop/API/node_modules/express/lib/router/index.js:47:12)\r\n[start:devserver]     at Layer.handle [as handle_request] (/Users/Ethan/LocalDesktop/API/node_modules/express/lib/router/layer.js:95:5)\r\n[start:devserver]     at trim_prefix (/Users/Ethan/LocalDesktop/API/node_modules/express/lib/router/index.js:317:13)\r\n[start:devserver]     at /Users/Ethan/LocalDesktop/API/node_modules/express/lib/router/index.js:284:7\r\n[start:devserver]     at Function.process_params (/Users/Ethan/LocalDesktop/API/node_modules/express/lib/router/index.js:335:12)\r\n[start:devserver] (node:10918) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)\r\n```"},{"labels":["bug"],"text":"States endpoint not updating.  Last update was several hours ago.  Country endpoint works but states aren't updating.  Todaycases and other data isn't updating.\r\n\r\nhttps://disease.sh/v3/covid-19/states"},{"labels":["bug"],"text":"Apple and NYT caches produce warnings on test runs because initially they are not filled"},{"labels":["bug"],"text":"On page refresh sometimes it returns old data, like on my website it would say 18,722,090 cases then it would jump back to 18,721,965 cases. I'm using the `/v3/covid-19/all` endpoint.\r\n\r\n**To Reproduce**\r\n- go to https://disease.sh/v3/covid-19/all?yesterday=false\r\n- hit refresh couple of times\r\n\r\n**Expected behavior**\r\nOnce new data is available it should not jump back to old one.\r\n\r\n**Screenshots**\r\nAs seen here:\r\n\r\n![se39841207b0](https://user-images.githubusercontent.com/54323745/89394193-679a0700-d729-11ea-84e5-d0cd25cd8561.gif)\r\n\r\n"},{"labels":["bug"],"text":"In their infinite wisdom the UK government has decided to change the API endpoints as of today & this has now broken the URLs in disease.sh.\r\n\r\n[https://disease.sh/v3/covid-19/countries/uk](https://disease.sh/v3/covid-19/countries/uk)\r\n\r\nreturns 0 deaths for today & the cumulative deaths figure is from yesterday.\r\n\r\n[https://disease.sh/v3/covid-19/gov/uk](https://disease.sh/v3/covid-19/gov/uk)\r\n\r\nonly returns data from 1st August as the latest result.\r\n"},{"labels":["bug"],"text":"Firstly, thanks for putting the time in to this API but I seem to getting some discrepancies between the data returned via the API v3 & the actual data which this API is scraping from the UK Government website.\r\n\r\nLooking at the historic data the API returns for the cumulative Deaths, is this:\r\n\r\n   \r\n      \"7/20/20\": 45397,\r\n      \"7/21/20\": 45507,\r\n      \"7/22/20\": 45586,\r\n      \"7/23/20\": 45639,\r\n      \"7/24/20\": 45762,\r\n      \"7/25/20\": 45823,\r\n      \"7/26/20\": 45837,\r\n      \"7/27/20\": 45844,\r\n      \"7/28/20\": 45963\r\n\r\nNow below is an excerpt from the UK Government website:\r\n`https://api.coronavirus-staging.data.gov.uk/v1/data?filters=areaName=United%2520Kingdom;areaType=overview&structure=%7B%22areaType%22:%22areaType%22,%22areaName%22:%22areaName%22,%22areaCode%22:%22areaCode%22,%22date%22:%22date%22,%22newDeathsByPublishDate%22:%22newDeathsByPublishDate%22,%22cumDeathsByPublishDate%22:%22cumDeathsByPublishDate%22%7D&format=json`\r\n\r\nthe same site that is scrapped to form the API, returns the following for the same time period:\r\n\r\n```\r\n{\r\n   \"length\":146,\r\n   \"maxPageLimit\":1000,\r\n   \"data\":[\r\n      {\r\n         \"areaType\":\"overview\",\r\n         \"areaName\":\"United Kingdom\",\r\n         \"areaCode\":\"K02000001\",\r\n         \"date\":\"2020-07-29\",\r\n         \"newDeathsByPublishDate\":83,\r\n         \"cumDeathsByPublishDate\":45961\r\n      },\r\n      {\r\n         \"areaType\":\"overview\",\r\n         \"areaName\":\"United Kingdom\",\r\n         \"areaCode\":\"K02000001\",\r\n         \"date\":\"2020-07-28\",\r\n         \"newDeathsByPublishDate\":119,\r\n         \"cumDeathsByPublishDate\":45878\r\n      },\r\n      {\r\n         \"areaType\":\"overview\",\r\n         \"areaName\":\"United Kingdom\",\r\n         \"areaCode\":\"K02000001\",\r\n         \"date\":\"2020-07-27\",\r\n         \"newDeathsByPublishDate\":7,\r\n         \"cumDeathsByPublishDate\":45759\r\n      },\r\n      {\r\n         \"areaType\":\"overview\",\r\n         \"areaName\":\"United Kingdom\",\r\n         \"areaCode\":\"K02000001\",\r\n         \"date\":\"2020-07-26\",\r\n         \"newDeathsByPublishDate\":14,\r\n         \"cumDeathsByPublishDate\":45752\r\n      },\r\n      {\r\n         \"areaType\":\"overview\",\r\n         \"areaName\":\"United Kingdom\",\r\n         \"areaCode\":\"K02000001\",\r\n         \"date\":\"2020-07-25\",\r\n         \"newDeathsByPublishDate\":61,\r\n         \"cumDeathsByPublishDate\":45738\r\n      },\r\n      {\r\n         \"areaType\":\"overview\",\r\n         \"areaName\":\"United Kingdom\",\r\n         \"areaCode\":\"K02000001\",\r\n         \"date\":\"2020-07-24\",\r\n         \"newDeathsByPublishDate\":123,\r\n         \"cumDeathsByPublishDate\":45677\r\n      },\r\n      {\r\n         \"areaType\":\"overview\",\r\n         \"areaName\":\"United Kingdom\",\r\n         \"areaCode\":\"K02000001\",\r\n         \"date\":\"2020-07-23\",\r\n         \"newDeathsByPublishDate\":53,\r\n         \"cumDeathsByPublishDate\":45554\r\n      },\r\n      {\r\n         \"areaType\":\"overview\",\r\n         \"areaName\":\"United Kingdom\",\r\n         \"areaCode\":\"K02000001\",\r\n         \"date\":\"2020-07-22\",\r\n         \"newDeathsByPublishDate\":79,\r\n         \"cumDeathsByPublishDate\":45501\r\n      },\r\n      {\r\n         \"areaType\":\"overview\",\r\n         \"areaName\":\"United Kingdom\",\r\n         \"areaCode\":\"K02000001\",\r\n         \"date\":\"2020-07-21\",\r\n         \"newDeathsByPublishDate\":110,\r\n         \"cumDeathsByPublishDate\":45422\r\n      },\r\n      {\r\n         \"areaType\":\"overview\",\r\n         \"areaName\":\"United Kingdom\",\r\n         \"areaCode\":\"K02000001\",\r\n         \"date\":\"2020-07-20\",\r\n         \"newDeathsByPublishDate\":11,\r\n         \"cumDeathsByPublishDate\":45312\r\n      }\r\n   ]\r\n}\r\n```\r\n\r\nStraight away the obvious error is that the current total of deaths 2020-07-29 is lower from the UK Government site than what the API displays for the previous day 2020-07-28.\r\n\r\nThis is doubly strange as when using the URL: \r\n`https://disease.sh/v3/covid-19/countries/UK`\r\n\r\nshows the total number of deaths for today 2020-07-29 as 45961, see below:\r\n\r\n\r\n```\r\n{\r\n  \"updated\": 1596045105410,\r\n  \"country\": \"UK\",\r\n  \"countryInfo\": {\r\n    \"_id\": 826,\r\n    \"iso2\": \"GB\",\r\n    \"iso3\": \"GBR\",\r\n    \"lat\": 54,\r\n    \"long\": -2,\r\n    \"flag\": \"https://disease.sh/assets/img/flags/gb.png\"\r\n  },\r\n  \"cases\": 301455,\r\n  \"todayCases\": 763,\r\n  \"deaths\": 45961,\r\n  \"todayDeaths\": 83,\r\n```\r\n\r\n\r\nand this does indeed match the official UK figure.\r\n\r\nI have checked the HISTORIC deaths totals returned by the API against the official totals for the last 10 days and the API has artificially increased each official total by 85.\r\n\r\nI have not bothered going back any further to check. \r\n"},{"labels":["bug"],"text":"**Describe the bug**\r\nhttps://disease.sh/v3/covid-19/gov/israel\r\nReturning 404 not fount with the message \"Country 'Israel' not found or no data found for country\"\r\n\r\n**To Reproduce**\r\nWhere the bug occurring? Examples:\r\n- https://disease.sh/v3/covid-19/gov/israel\r\n\r\n**Expected behavior**\r\nThis endpoint seems to be working fine:\r\nhttps://corona.lmao.ninja/v3/covid-19/gov/israel"},{"labels":["bug"],"text":"The API's are no longer working, the server seems down.\r\n![disease](https://user-images.githubusercontent.com/28037374/88493148-75e76680-cf64-11ea-9db9-28d1f02476c8.png)\r\nAlso getting plenty of CORS Policy errors. \r\n![errors](https://user-images.githubusercontent.com/28037374/88493188-a6c79b80-cf64-11ea-8089-225ad0cf770c.png)\r\nAnyone else getting these errors? \r\n\r\nThanks.\r\n\r\n\r\n"},{"labels":["bug"],"text":"At Australia historical endpoint, at the deaths section, in \"6/1/20\", the number of the deaths goes from 103 to 102\r\n\r\n**Endpoint**\r\nhttps://corona.lmao.ninja/v2/historical/Australia?lastdays=350\r\n\r\n**Screenshots**\r\n![Screenshot_2](https://user-images.githubusercontent.com/28724624/88274803-f5670280-cce4-11ea-8653-c7798f171a08.png)\r\n"},{"labels":["bug"],"text":"I'm getting 404 for Israel when using the following api, yesterday it worked but today it's not.\r\n\r\nraw response:\r\n\r\n```\r\n{\r\n  \"message\": \"Country 'Israel' not found or no data found for country\"\r\n}\r\n```"},{"labels":["bug"],"text":"**Describe the bug**\r\nJHU Spain subdivisions return incorrect data. For some subdivisions `deaths+recovered > confirmed` which can't possibly be correct. Even if the subdivision has 0 active cases, the total of deaths + recovered would become = confirmed, but never higher!\r\n\r\n**To Reproduce**\r\nWhere the bug occurring? Examples:\r\nhttps://corona.lmao.ninja/v3/covid-19/jhucsse\r\n**As of the time of reporting the bug:**\r\n  - Cantabria => \"confirmed\":2380,\"deaths\":216,\"recovered\":2287\r\n  - Galicia => \"confirmed\":9479,\"deaths\":619,\"recovered\":9204\r\n  **Number of recovered patients is higher than the total number of patients ever infected!**\r\n  - Murcia => \"confirmed\":1771,\"deaths\":148,\"recovered\":2180 \r\n  - Pais Vasco => \"confirmed\":14099,\"deaths\":1563,\"recovered\":16160\r\n  - Ceuta => \"confirmed\":164,\"deaths\":4,\"recovered\":163\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n`deaths+recovered =< confirmed`\r\n"},{"labels":["bug"],"text":"**Describe the bug**\r\nIsrael gov data endpoint (https://disease.sh/v3/covid-19/gov/Israel) returns 0 for updated time. \r\n`{\r\n  \"updated\": 0,\r\n  \"data\": {\r\n... \r\n  }\r\n}\r\n`\r\n\r\n**To Reproduce**\r\nWhere the bug occurring? Examples:\r\n- https://disease.sh/v3/covid-19/gov/Israel\r\n\r\n**Expected behavior**\r\nExpected to get updated time.\r\n`{\r\n  \"updated\": 1594569303303,\r\n  \"data\": {\r\n... \r\n  }\r\n}\r\n`\r\n\r\n**Additional context**\r\nI checked if the government API has changed the query or something but it looks the same.\r\n\r\nThen I checked the [scraper](https://github.com/disease-sh/API/blob/master/scrapers/covid-19/govScrapers/getIsrael.js) and I saw that in [this commit](https://github.com/disease-sh/API/commit/c969a8f8b628241bf905d2a6b3d256938f84ff64#diff-3990eaa03a337e3af1a6a50dd859c910L6) the line that is responsible for getting the updated timestamp was edited,\r\nI tested it on my local machine with this commit reverted and there was no issue.\r\nHey @puf17640, What was the reason for the query parameters to be stripped off? It seems to be causing the issue.\r\n \r\nThanks.\r\n"},{"labels":["bug"],"text":"**Description**\r\n`splitQuery `function is kind of uncomplete and does not treat all cases. It supposes that the parameter `query`  contains `|` or `,` as a splitter. But what if the query does not have both of the splitters.\r\n\r\n**Reproduction**\r\n`const splitQuery = (query) => query.indexOf('|') === -1 ? query.split(',') : query.split('|');`\r\n`const query=null`;\r\n`console.log(splitQuery(query))`\r\n\r\n**Expected behavior**\r\nAn array of characters or strings.\r\n\r\n**Real-world behavior**\r\n`Uncaught TypeError: Cannot read property 'indexOf' of null`\r\n\r\n\r\n**Additional context**\r\n`const splitQuery = (query) => query.indexOf('|') === -1 ? query.split(',') : query.split('|');`\r\n`const query=\"usa\"`;\r\n`console.log(splitQuery(query))`\r\n"},{"labels":["bug"],"text":"**Description**\r\n\r\nIn [stringUtils](https://github.com/disease-sh/API/blob/master/utils/stringUtils.js) script line `6` :\r\n`const wordsStandardize = (word) => word ? word.trim().toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : 'null';`\r\n\r\n**Expected**\r\n`null`\r\n\r\n**Found**\r\n`'null'`"},{"labels":["bug"],"text":"The endpoints are not accessible owing to CORS policy issue\r\n[](url)\r\n<img width=\"935\" alt=\"Sans titre\" src=\"https://user-images.githubusercontent.com/36894964/84677747-13dc2000-af27-11ea-86d8-96864d13d75f.png\">\r\n"},{"labels":[null,"bug"],"text":"Data which was returned for USA for June 13th does not seems correct (this was updated on June 14th, calling the [https://disease.sh/v2/countries?yesterday=true](https://disease.sh/v2/countries?yesterday=true) endpoint). I am not sure which results were returned during the day June 13th itself.\r\n\r\n...\r\n\"countryName\": \"USA\",\r\n\"cases\": 2117027,\r\n**\"todayCases\": 105,**\r\n\"deaths\": 116831,\r\n**\"todayDeaths\": 6,**\r\n..."},{"labels":["bug"],"text":"**Describe the bug**\r\nIn the file with the aliases of names, 'Laos' is one of the possible names of the country, 'Lao people''s democratic republic', with 'LA' and 'LAO' as iso2 and iso3. Those inputs, excluding the full country name, produce 404 on the endpoint.\r\n\r\n**To Reproduce**\r\nWhere the bug occurring? Examples:\r\nhttps://disease.sh/v2/countries/laos\r\nhttps://disease.sh/v2/countries/la\r\nhttps://disease.sh/v2/countries/lao\r\nNone work despite strict parameter.\r\n\r\n**Expected behavior**\r\nOutput of https://disease.sh/v2/countries/lao%20people%27s%20democratic%20republic"},{"labels":["bug"],"text":"**Describe the bug**\r\nThe accumulative \"recovered\" cases value is lower than the previous day\r\n\r\n**To Reproduce**\r\nMake a request to https://corona.lmao.ninja/v2/historical/all?lastdays=3\r\n\r\n**Expected behavior**\r\nThe accumulative \"recovered\" cases value for each day is equal or greater than the previous day.\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/3900123/83948194-0ff72200-a7f2-11ea-961d-58f1bce318a0.png)\r\n\r\n**Additional context**\r\nI'm using this approach of doing `today cases - yesterday cases` to calculate the \"new cases for today\", as suggested in one of the issues I found in the repo. Doing that for the recovered cases for today results in `-198987`."},{"labels":["bug"],"text":"**Describe the bug**\r\nIn the Worldometer Data the following Countries are missing: \r\n- Kosovo\r\n- Gaza \r\n\r\n**To Reproduce**\r\nThe following Requests don't show any data:\r\ncurl -X GET \"https://disease.sh/v2/countries/Kosovo\" -H  \"accept: application/json\"\r\ncurl -X GET \"https://disease.sh/v2/countries/Gaza\" -H  \"accept: application/json\"\r\n\r\n**Expected behavior**\r\nBoth Requests show the expected data.\r\n"},{"labels":["bug"],"text":"Hi! The data of active cases on endpoint /countries is wrong. I think worldometers changed its table."},{"labels":["bug"],"text":"From this endpoint: [https://disease.sh/v2/countries](https://disease.sh/v2/countries) I can see that the number of \"critical\" case is always the same with the number of \"active\" cases, which does not seems right.\r\n\r\n![critical](https://user-images.githubusercontent.com/4018803/83225504-38db3f80-a180-11ea-8f64-1a1420e07f7c.png)\r\n\r\nThe same applies for all the countries."},{"labels":["bug"],"text":"1. Response body appears to be mixed up for some fields. Continents used to return a string for a specific region e.g. \"Asia\", \"Europe\", \"North America\", etc; now returns a number string for what appears to be the country's population. \r\n\r\n2. ~~todayCases and todayDeaths return only 0 for both true/false yesterday queries.~~\r\n\r\n3. Population, tests, testsPerOneMilion, recoveredPerOneMillion also do not seem correct; there may be additional fields that are incorrect.\r\n\r\n4. There is a new field name undefined returning an integer in the response body that wasn't there previously."},{"labels":["bug"],"text":"When trying to call iso2 and iso3 it says it's undefined.\r\nMaking the on development environment. It happens when I try to call All Countries and a Specific Country."},{"labels":["bug",null],"text":"Hi,\r\nendpoint v2/continents shows yesterday's data for ?yesterday=false and today's data for ?yesterday=true.\r\n"},{"labels":["bug"],"text":"`/v2/continents/` does not set property `countries` and tests fail because of this. Oh and worldometer added a `population` field and removed `continent` field\r\n@puf17640 "},{"labels":["bug",null],"text":"Hello, the endpoints have not been updated for the last 2 hours. Thank you!"},{"labels":["bug"],"text":"The number params in /v2/countries are both returning todays data, but the boolean params are working fine and returning yesterdays correct data. \r\n\r\nYesterday = false image\r\n![image](https://user-images.githubusercontent.com/30350506/80436186-93a52100-88cc-11ea-9c4c-41e23813ee1d.png)\r\n\r\nYesterday = true image\r\n\r\n![image](https://user-images.githubusercontent.com/30350506/80436226-ac153b80-88cc-11ea-8ea6-a91d2e57da4d.png)\r\n\r\n\r\nYesterday = 1\r\n![image](https://user-images.githubusercontent.com/30350506/80436260-be8f7500-88cc-11ea-9e86-87d0c2a2f9f1.png)\r\n\r\n\r\nYesterday = 0\r\n\r\n![image](https://user-images.githubusercontent.com/30350506/80436280-ca7b3700-88cc-11ea-808f-01590f36a766.png)\r\n\r\nThe problem is visible in cases"},{"labels":["bug"],"text":"I have checked the newsletter submission for both https://corona.lmao.ninja/ and https://disease.sh/, the newsletter submission isn't working.\r\nWatch this [video](https://www.loom.com/share/3398ea027b2a4307bb4fabc01a122799) I recorded the response.\r\nThanks"},{"labels":["bug"],"text":"https://corona.lmao.ninja/ on mobile view has a strange looking header."},{"labels":["bug",null],"text":"`/v2/nyt/usa`, `/v2/nyt/states`, `/v2/nyt/counties` and all of their respective filters all report strings for `fips` (not applicable for `/v2/nyt/usa`), `cases` and `deaths`.\r\n\r\nIt would seem more logical and make more sense to cast these to integers/numbers instead of strings."},{"labels":["bug"],"text":"The response from endpoint https://corona.lmao.ninja/v2/jhucsse is returning incorrect data like a number for country, negative value for updatedAt and date for province.\r\n![covid-api](https://user-images.githubusercontent.com/30733798/79083993-15cf0a80-7d4f-11ea-8553-00314fcace4d.png)\r\n  "},{"labels":["bug"],"text":"i will start working on this right now, i will sum all countries tests for tests\r\ntestsPerOneMillion will be a bit harder, i will have to calculate population based on every countries tests and testsPerOneMillion values and sum those up to be able to calculate the whole worlds testsPerOneMillion"},{"labels":["bug"],"text":"Canada recovered historical data is all 0."},{"labels":["bug",null,null],"text":"- [x] /yesterday is still returning the world row from worldometers\r\n- [x] /yesterday does not support sorting\r\n- [x] /yesterday/{country} is missing\r\n\r\n- [x] /states does not support sorting\r\n- [x] /states/{state} is missing"},{"labels":["bug"],"text":"A province is called \"bonaire, sint eustatius and saba\" in `/v2/historical`, which is the \"Caribbean Netherlands\" in `/countries` is not accessible because of the comma in the name.\r\nSo `/v2/historical/NL/bonaire%2C%20sint%20eustatius%20and%20saba` won't work, `/v2/historical/NL/BX` and `/v2/historical/NL/Caribbean%20Netherlands` neither."},{"labels":["bug"],"text":"Some countries are displayed as provinces of a country.\r\nFor example, Aruba, Curaçao and Sint Maarten are countries within the kingdom of the Netherlands, but they are displayed as a province of the Netherlands. The numbers of those three countries are also added to the main country info. When you request `/v2/historical/NL` you get the numbers of the country the Netherlands plus the numbers of Aruba, Curaçao and Sint Maarten, which should be separated. https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv shows a separate row for the country, but that one can't be accessed via the api right now, only the one with all the countries added together."},{"labels":["bug"],"text":"For example \"Hong Kong\" is displayed as \"hong kong\".\r\nAlso `/v2/historical/CN/Hong%20Kong` doesn't work, `/v2/historical/CN/hong%20kong` does."},{"labels":["bug"],"text":"Countries that can't be accessed by `/v2/historical/{{ ISO2 }}` are for example:\r\n- Brunei (BN)\r\n- Bolivia (BO)\r\n- Belarus (BL)\r\n- Chad (TC)"},{"labels":["bug"],"text":"Some countries are spelled completely different in `/v2/histoical` than in `/countries`, some examples:\r\n- 'faroe islands' instead of 'Faeroe Islands'\r\n- 'macau' instead of 'Macao'\r\n- 'curacao' instead of 'Curaçao'\r\n- 'st martin' instead of 'Saint Martin'\r\n- 'Congo (Kinshasa)' instead of 'DRC'"},{"labels":["bug"],"text":"ex: Kosovo"},{"labels":["bug"],"text":"* Australia (should be AUS or AU)\r\n* Austria (should be AUT or AT)\r\n* Philippines (return no result for PHL)"},{"labels":["bug",null],"text":"\"Macedonia, the former Yugoslav Republic of\" should be renamed to \"North Macedonia\".\r\n"},{"labels":["bug",null],"text":"When cases per million are above 999 they are parsed as their most significant digit only. For example 1234 is parsed to 1. That's because numbers above 999 have a comma in them. I suggest removing the comma similar to the way you remove it for the other columns. The bug is also present for the deathsPerOneMillion column. \r\n\r\nMore concretely this:\r\nhttps://github.com/NovelCOVID/API/blob/890eff851b65ee81f762e2180ed6716cb75c32f0/funcs/getCountries.js#L126\r\nshould also benefit from this treatment:\r\nhttps://github.com/NovelCOVID/API/blob/890eff851b65ee81f762e2180ed6716cb75c32f0/funcs/getCountries.js#L119\r\n\r\nFurthermore casesPerMillion is an integer. For example Italy currently has a population of 60 million (according to google) and 74,386 cases, so casesPerMillion is 74386/60 = 1239 (in worldometer it is 1,230 because they probably used another value for the population), not 1.239. Meaning it is rounded to the nearest integer. So perhaps parseInt should be used instead of parseFloat."},{"labels":["bug",null],"text":"some countries doesn't have the country ISO codes in the data."},{"labels":["bug"],"text":"From JHU repo: \r\n```\r\n---DEPRICATED WARNING---\r\nThe files below will no longer be updated. With the release of the new data structure, we are updating our time series tables to reflect these changes. Please reference time_series_covid19_confirmed_global.csv and time_series_covid19_deaths_global.csv for the latest time series data.\r\n\r\ntime_series_19-covid-Confirmed.csv\r\ntime_series_19-covid-Deaths.csv\r\ntime_series_19-covid-Recovered.csv\r\n```\r\nbasically historical data will not be update until a fix is made"},{"labels":["bug"],"text":"This is happening in `/historical/countryName` due to redundant data for a country having multiple provinces. Some sort of logic is needed when parsing the response from `/historical` to fix this."},{"labels":["bug"],"text":"In all countries data `czechia` exists but if you request it via single country API it does not.\r\n\r\nhttps://corona.lmao.ninja/countries/czechia"}]