[{"labels":["enhancement"],"text":"Actually I downloaded the library and tried an hour to implement it later I found that java is not supported at all. There should be a clear note about this in your README.md file which can save some time for developers who are working on java based projects."},{"labels":["enhancement"],"text":"I check a history of ReadMe file and I can see you update version in ReadMe file manualy. I recommend you to use [GitHub Actions ](https://github.com/GoodReadMe/GoodReadMeAction) for automate the process. \r\nIs it interest for you? I can create a PR for this."},{"labels":["enhancement"],"text":"**What module does this apply to?**\r\n\r\nDateTime\r\n\r\n**Description what you'd like to happen:**\r\n\r\nDate picker allows selecting max date, and the same functionality should be available in DateTime picker. Currently, DateTime picker only allows to specify current and minimal date.\r\n\r\n**Describe alternatives you've considered:**\r\n\r\nThere are no alternative solutions for this problem.\r\n"},{"labels":["enhancement"],"text":"*Please consider making a Pull Request if you are capable of doing so.*\r\n\r\n**What module does this apply to?**\r\n\r\nCore? Input? Files? Color?\r\n\r\n**Description what you'd like to happen:**\r\n\r\nA clear description if the feature or behavior you'd like implemented.\r\n\r\n**Describe alternatives you've considered:**\r\n\r\nA clear description of any alternative solutions you've considered.\r\n"},{"labels":["enhancement"],"text":"**What module does this apply to?**\r\n\r\nCore\r\n\r\n**Description what you'd like to happen:**\r\n\r\nIn our apps we want to show a dialog which contains a title, message and two buttons.  \r\nThe message is similar to \"Do you want to start Action A or Action B?\".  \r\nThe buttons contain \"Start Action A\" and \"Start Action B\".  \r\nAs both texts are so long, in some device & language combinations they don't fit one line and get stacked.\r\n\r\nThe problem with them being stacked, is that the button order is now different. It shows like this:\r\n\r\n|Do you want to start Action A or Action B|\r\n|---:|\r\n|Action B|\r\n|Action A|\r\n\r\nSo to sum up, I'd love a property like \"order\" which makes sure a specific button is always shown either at the top or the left.\r\n\r\n**Describe alternatives you've considered:**\r\n\r\nThe alternative would be to use the listItems thing. With the default list the buttons are left-aligned, which (without icon) is not Android-style. I could of course implement my own recyclerview and view for it, but the overhead of doing so, just to have the button orders fixed/specified, is huge."},{"labels":["enhancement"],"text":"Beautiful library with a huge set of features and easy to customisation. I uses this library in all of my projects and really appreciate your work! Please, fix FUNDING.yml that people would support this library!"},{"labels":["enhancement"],"text":"Hi,\r\n\r\nLibrary Version : 3.3.0\r\nModule : date/time\r\n\r\nOn the datePicker, the display format date is \"EEE, MMM dd.\". (ex : Wed., apr. 22)\r\nIn France, it's better to have a format like that \"EEE, dd MMM.\".\r\nIt is possible to add a functionality to custom the date format. or init the date format corresponding to the local ? \r\n"},{"labels":["enhancement"],"text":"Hi,\r\n\r\nLibrary version : 3.3.0\r\nModule :  date/time \r\n\r\nTo simplify the date selection, it would be a must have if the proposed list of years is reduced to the possible years, corresponding to minDate and maxDate if present.\r\n\r\n\r\n"},{"labels":["enhancement"],"text":"Hi, everything is perfect in input dialog is perfect, I just want you to add these two options, if I don't want to show counter, and restrict the length of the input field also"},{"labels":["enhancement"],"text":"I use listItemsSingleChoice,so I want Change RadioButton's color ,Can I do itï¼Ÿ,if can,How I do ? thanks"},{"labels":["enhancement"],"text":"hi I want the user to be able to select only 3 options And after selecting the third item, I want the other items to be disabled Is this possible? \r\n\r\n```\nMaterialDialog(context!!).show {\r\n            title(R.string.select_region)\r\n            listItemsMultiChoice(\r\n                R.array.server,\r\n                disabledIndices = if ()intArrayOf(1, 3)\r\n            ) { _, indices, text ->\r\n               \r\n            }\r\n            positiveButton(R.string.select_location)\r\n        }\n```"},{"labels":["enhancement"],"text":"hi is there any way to change gravity of title in dialog and bottom sheet?"},{"labels":["enhancement"],"text":"When using Material Components each widget in there uses the shape defined by the theme (as well as color etc.). Since material-dialogs is often used in addition to using such themes and widgets, it would be great if the material-dialogs dialogs would use the same shape as well (in addition to the colors, fonts etc. which seems already supported).\r\n\r\n- https://material.io/design/shape/about-shape.html\r\n- https://material.io/develop/android/theming/shape/\r\n\r\n"},{"labels":["enhancement"],"text":"Like I get it, the whole _\"Always follow the material guideline principles\"_ and blah blah, but is it too bad to have the user some option to change these if they want to?\r\n\r\nI've always used this library in all my projects so far, but now my senior wants to have the Title Text color changed to white & Title Layout background color set to primary, _\"in order to match the consistency theme of the app\"_ as so he says.\r\n\r\nMy issue? _Not a single method to change these attributes in any way possible!_\r\nLike come on, I thought giving your users more options to customize was always a plus?\r\n\r\nAny plans of adding these methods? If not, please care to explain why not."},{"labels":["enhancement",null],"text":"Hi, thank you for your hard to do best library.\r\n\r\nI have to use Time Picker / Date Time Picker in my project, but may it's only support pick the hour and minute only and does not support to pick or input the second in Time Picker Dialog.\r\n\r\nCould we have any option to do this?"},{"labels":["enhancement",null],"text":"In Android 10 there is an flag that we enable to still use `legacy storage` with `read/write permissions`.\r\nBut in the coming version there will be no flag for this and all developers are forced to use `MediaStorage` or `SAF (Storage Access Framework)` to read/write files/directories.\r\n\r\nWill be any support by this lib for this ? \r\n\r\nI think that would be awesome to be supported by it as `helper` and parse the output from default `system chooser` based on the Android version of the user ?\r\n\r\nHope to understand my \"not good English\", and what i mean.\r\n\r\n**Thanks for the great and helpful library !**"},{"labels":["enhancement"],"text":"**What module does this apply to?**\r\n\r\nCore\r\n\r\n**Description what you'd like to happen:**\r\n\r\nHello,\r\n\r\nIt would be very handful to have the possibility to access the dialog's title view (and other views too).\r\n\r\n**Context:**\r\n\r\nAs reported on another [issue](https://github.com/enricocid/Reveal-fragment-example), I recently experienced visible vertical scrollbar on dialog's title and toolbar's subtitle when using AndroidX Preference library in my project.\r\n\r\nFor the toolbar the fix involves setting the proper subtitle's styling while on the dialogs it was necessary to disable the `PreferenceFragmentCompat`'s vertical scrollbar as it is not possible to access the title's view.\r\nThen, to disable scrollbars on material dialogs setting up a preference theme is needed:\r\n\r\n```xml\r\n<item name=\"preferenceTheme\">@style/PrefTheme</item>\r\n\r\n<style name=\"PrefTheme\" parent=\"PreferenceThemeOverlay\">\r\n        <item name=\"android:scrollbars\">none</item>\r\n </style>\r\n```\r\nThis will cause the scrollbar of `PreferenceFragmentCompat` not working.\r\n\r\nAs for the toolbar, I'd like to be able to disable scrollbars also on dialogs titles without having to disable `PreferenceFragmentCompat`'s vertical scrollbar.\r\n\r\nI'm already aware that it is possible to access the title's view from the dialog view, but I find this method tricky (is this a reliable method?).\r\n\r\n**Describe alternatives you've considered:**\r\n\r\nAn alternative solution could be to let developers define custom titles textAppearance\r\n"},{"labels":["enhancement",null],"text":"*Please consider making a Pull Request if you are capable of doing so.*\r\n\r\n**What module does this apply to?**\r\n\r\nBottom sheets\r\n\r\n**Description what you'd like to happen:**\r\n\r\nExpose the title `TextView` of the `GridIconDialogAdapter` in `GridItem` so we can change the attributes of the text via the `gridItems()` handler \r\n\r\n**Describe alternatives you've considered:**\r\n\r\nCurrently, I have a custom implementation like the grid such that the image is replaced by a loading bar every time the user taps on an item (think of the chat color-changing dialog on Facebook Messenger). I also want to indicate the current grid item that is already \"selected\", and to do that I want to bold the text of a particular title, but since `GridItem.title` is a string, I can't set it. The only alternative would be to append a \"selected\" string to the current text or to create a custom view.\r\n\r\nCurrent implementation:\r\n\r\n```kotlin\r\ndata class ColorGridItem(\r\n    @DrawableRes val iconRes: Int,\r\n    override val title: String,\r\n    val context: Context\r\n) : GridItem {\r\n    private lateinit var iconImageView: ImageView\r\n    private lateinit var titleTextView: TextView // Does not exist and cannot be set\r\n    override fun populateIcon(imageView: ImageView) {\r\n        imageView.setImageResource(iconRes)\r\n        iconImageView = imageView\r\n    }\r\n    fun startLoading() {\r\n        val circularProgressDrawable = CircularProgressDrawable(context).apply {\r\n            strokeWidth = 5f\r\n            centerRadius = 30f\r\n            start()\r\n        }\r\n        iconImageView.setImageDrawable(circularProgressDrawable)\r\n    }\r\n}\r\n```\r\n"},{"labels":["enhancement",null],"text":"*Please consider making a Pull Request if you are capable of doing so.*\r\n\r\n**What module does this apply to?**\r\n\r\nDateTime\r\n\r\n**Description what you'd like to happen:**\r\n\r\nAdd a maxDateTime argument to the dialog. The argument allows to restrict the maximum date/time to be set by the user.\r\n\r\n**Describe alternatives you've considered:**\r\n\r\nN/A\r\n"},{"labels":["enhancement",null],"text":"![Screenshot_20191102_092935](https://user-images.githubusercontent.com/27875141/68064191-75160100-fd53-11e9-9516-f805126747cd.jpg)\r\n"},{"labels":["enhancement",null],"text":"1. BottomSheet prohibit sliding\r\n2. Display according to custom view height\r\n\r\nLibrary Version: 3.1.1"},{"labels":["enhancement",null],"text":"**What module does this apply to?**\r\n\r\nCore\r\n\r\n**Description what you'd like to happen:**\r\nCurrently the only option I see to set message line spacing is to call lineSpacing() on every message.\r\n```kotlin\r\nmessage(R.string.video_download_for_partners_only) {\r\n    lineSpacing(1.2f)\r\n}\r\n```\r\n\r\nI would love to see an option to set a default line spacing across all dialogs. For example:\r\n```xml\r\n<style name=\"AppTheme.Custom\" parent=\"Theme.AppCompat\">\r\n\r\n  <item name=\"md_message_line_spacing\">1.2</item>\r\n    \r\n</style>\r\n```\r\n\r\n**Describe alternatives you've considered:**\r\n/\r\n"},{"labels":["enhancement",null],"text":"I'm using the latest version of the library and want to use manual gravity for message text.\r\nFor example, I want to set text gravity to the right side without paying attention to phone language.\r\nIn fact, I have only persian texts in my application and want to be set in the right side always.\r\nHow can I do it?"},{"labels":["enhancement",null],"text":"*Please consider making a Pull Request if you are capable of doing so.*\r\n\r\n**What module does this apply to?**\r\n\r\nInput\r\n\r\n**Description what you'd like to happen:**\r\n\r\nIn addition to the maxLength field\r\n\r\n``` kotlin\r\ninput(prefill = defaultString, maxLength = maxLength, allowEmpty = false, waitForPositiveButton = false)\r\n```\r\n\r\nI would enjoy seeing the minLength field again. We had inputRangeRes in older versions of the library.\r\n\r\n``` kotlin\r\ninput(prefill = defaultString, minLength = minLength, maxLength = maxLength, allowEmpty = false, waitForPositiveButton = false)\r\n```\r\n\r\n**Describe alternatives you've considered:**\r\n\r\nCurrently, I will validate the OK button visibility on each input change. Works fine, but I would love to have a X/YY counter below the input field to communicate minimum length to users, as before."},{"labels":["enhancement"],"text":"I'm converting an app to utilize this library and running into a problem. The old list uses SpannableString in a single selection dialog (it has a Badge on 'Premium' options to indicate). Is there really no way to use SpannableStrings with this library?"},{"labels":["enhancement"],"text":"**What module does this apply to?**\r\nCore\r\n\r\n**Description what you'd like to happen:**\r\nList Dialogs should be able to accept CharSequence items instead of Strings\r\n\r\nSimple usecase - spanned items (size, typeface, etc..)"},{"labels":["enhancement",null],"text":"Noticed in the library today when I was attempting to get a reference to R.id.datetimeDatePicker and R.id.datetimeTimePicker that both can only be grabbed via findViewById. Would you be able to add in public getters for both? Seems like a safe feature that could be added!\r\n"},{"labels":["enhancement"],"text":"Is there any way to provide custom dialog dimensions (width/height) when using layoutRes like in 0.9.6.0 version ?"},{"labels":["enhancement",null],"text":"Is there any provision to input maxDateTime for DateTimePicker?\r\n\r\nRequires changes to https://github.com/afollestad/date-picker."},{"labels":["enhancement",null],"text":"All my vector drawables are black. When I run in my dark theme I would like them to appear in white.\r\n\r\nFor the rest of my app I apply a tint to the black vectors - i.e. for the menu system. Since I can only pass a resource ID to the dialog it would be nice there was support for passing a drawable. \r\n\r\nWould rather not double up all the vector drawables - one white and one black - as that gets to be a maintenance nightmare. Similar to how you allow string ID vs. actual string for title and message."},{"labels":["enhancement",null],"text":"Hi,\r\nthanks for your effort developing this library.\r\n\r\nI found a behaviour that I believe should be different.\r\n\r\n**Library Version:**\r\n\r\n3.1.0\r\n \r\n**Describe the Bug:**\r\n\r\nAdding custom view with flags `scrollable = true, noVerticalPadding = true` adds bottom padding of `24dp`. This is especially noticeable if you don't add positive/negative buttons.\r\n\r\n**Expected Behavior:**\r\n\r\nDialogScrollView with zero bottom padding, if `noVerticalPadding = true`.\r\n\r\nIs there a way to control this?\r\n\r\nAt the moment, I am using:\r\n```kotlin\r\ndialog.view.findViewById<View>(R.id.md_scrollview_content)\r\n    ?.apply { setPadding(0, 0, 0, 0) }\r\n```\r\n"},{"labels":["enhancement"],"text":"**Library Version:**\r\n\r\n3.0.2\r\n \r\n**Describe the Bug:**\r\n\r\nCustom views do not apply correct padding around them (any more since v3? not sure about this currently) + `md_dialog_frame_margin_horizontal` is marked as private although I need this dimension for custom views.\r\n\r\n**Expected Behavior:**\r\n\r\nCheck this old issue: https://github.com/afollestad/material-dialogs/issues/1446\r\n\r\nI would expect that the above dimension is public or that I get a flag like described in my old issue"},{"labels":["enhancement"],"text":"**What module does this apply to?**\r\n\r\n`datetime`\r\n\r\n**Description what you'd like to happen:**\r\n\r\nA dialog that allows to pick time duration (ex: countdown timer)\r\n\r\n**A clear description if the feature or behavior you'd like implemented.**\r\n \r\n-  Like this : https://github.com/svenwiegand/time-duration-picker\r\n-  In addition add support to change the time by using spinners for hours, minutes, second scales. ex: see left side in this [image](https://i.stack.imgur.com/H4gJ0.jpg)\r\n-  Allow to disable seconds scale\r\n\r\n**Describe alternatives you've considered:**\r\n\r\nhttps://github.com/svenwiegand/time-duration-picker\r\n\r\n"},{"labels":["enhancement"],"text":"*Please consider making a Pull Request if you are capable of doing so.*\r\n\r\n**Library Version:**\r\n\r\n3.0.0-rc4\r\n \r\n**Affected Device(s):**\r\n \r\nGoogle Pixel 3 XL with Android 9.0\r\nand Pixel XL 10 (Beta)\r\n \r\n**Describe the Bug:**\r\n\r\nThe Date window within a bottom sheet does not fill the dialog up all the way, width wise. \r\n\r\nTime Dialog is fine.\r\n\r\n![Capture](https://user-images.githubusercontent.com/4994318/59806824-63a7ed00-92bb-11e9-8f31-edb0b5405d4c.PNG)\r\n\r\n**To Reproduce:**\r\n1. Implement the date/time dialog in a bottom sheet or install the sample app.\r\n2. Open said dialog. \r\n3. Observe :)\r\n\r\n**Expected Behavior:**\r\n\r\nThe Date window should fill the dialog up as much as it can.\r\n\r\nThanks!"},{"labels":["enhancement"],"text":"The `checkBoxPromt` function has a `@CheckResult` annotation, unlike all the other builder methods.\r\nAs the function mutates the builder, this is not necessary and leads to false positives.\r\n\r\n![image](https://user-images.githubusercontent.com/743462/59245510-6e0e1b00-8c19-11e9-86f0-511ba34afdcf.png)\r\n"},{"labels":[null,"enhancement"],"text":"**Library Version:**\r\n3.0.0-rc3\r\n \r\n**Affected Device(s):**\r\nAndroid 4.3\r\nAndroid >= 5.0\r\n \r\n**Describe the Bug:**\r\nAndroid 4.3: when I'm opening standard MaterialDialog, background is translucent (which is correct in my opinion):\r\n\r\n![ss](https://user-images.githubusercontent.com/30559158/59150897-0ccc2900-8a1a-11e9-9dae-38ac0f70d00b.png)\r\n\r\nBut if I'm opening BottomSheetDialog, background is fully transparent:\r\n\r\n![device-2019-06-08-200416](https://user-images.githubusercontent.com/30559158/59150901-12c20a00-8a1a-11e9-9641-47378539a5c2.png)\r\n\r\nAndroid >= 5.0: when I'm opening standard MaterialDialog, status bar is translucent:\r\n\r\n![material](https://user-images.githubusercontent.com/30559158/59150907-253c4380-8a1a-11e9-9df0-6bdee65d85d7.png)\r\n\r\nBut if I'm opening BottomSheetDialog, status bar turns to white color:\r\n\r\n![bottom](https://user-images.githubusercontent.com/30559158/59150916-41d87b80-8a1a-11e9-949f-5069ad256a54.png)\r\n\r\n(I don't change background and statusbar color in my code)\r\n\r\n**Expected Behavior:**\r\nAndroid 4.3: Background color of BottomSheetDialog should be translucent, like in MaterialDialog\r\nAndroid >= 5.0: Statusbar color should be translucent, like in MaterialDialog"},{"labels":["enhancement"],"text":"Hi,\r\nHow can I set height for the BottomSheet\r\nThanks"},{"labels":["enhancement"],"text":"**What module does this apply to?**\r\n\r\nDateTime\r\n\r\n**Description what you'd like to happen:**\r\n\r\nImplement an option, which enables support for automatically switching viewpager page to time picker, after the date is selected.\r\nThis would be great, especially since the swipe gesture to switch pages does only work in the upper area of the date picker as the calendar view uses the swipe gesture for sliding through months.\r\n\r\n**Describe alternatives you've considered:**\r\n\r\nAnother option would be a next button (e.g. neutral button) which switches the page."},{"labels":["enhancement",null],"text":"**Library Version:**\r\n\r\n2.7.0\r\n \r\n**Affected Device(s):**\r\n \r\nGoogle Pixel with Android 9.0\r\n \r\n**Describe the Bug:**\r\n\r\nButton colour is not changed.\r\n\r\n**To Reproduce:**\r\n```kotlin\r\nMaterialDialog(context).title(R.string.ok)\r\n    .positiveButton(R.string.ok) { whatever() }\r\n    .apply {\r\n        getActionButton(WhichButton.POSITIVE).updateTextColor(Color.BLUE)\r\n    }\r\n    .show()\r\n```\r\n\r\nButton colour is still black\r\n\r\n**Expected Behavior:**\r\n\r\nButton colour should be blue"},{"labels":["enhancement"],"text":"**Library Version:** 2.7.0/datetime\r\n \r\n**Describe the Bug:**\r\n\r\nThough setting the parameter `requireFutureDateTime` to true, it is not sure whether the dialog will return a future datetime, e.g. the minute switches during the user is in the dialog, since there is no validation on dialog positive button click.\r\n\r\nI'd suggest to move the check for future-datetime's to the onclick event, and display a `Snackbar` to inform the user instead.\r\n\r\n**To Reproduce:**\r\n1. Open DateTime Picker dialog\r\n2. Select future datetime (1 min ahead of current datetime)\r\n3. Wait a minute, now the datetime in not in the future anymore.\r\n\r\nIf you agree with this change, I'll implement it."},{"labels":["enhancement"],"text":"Using version 2.6, the input edit text does not have any custom styling.\r\n\r\nThe hint and the edit text don't any of of the `md_font` and `md_color` attributes.\r\n\r\nIt would be great if you could implement that as it looks inconsistent now."},{"labels":["enhancement"],"text":"I can style the title, message and buttons of my dialog using:\r\n\r\n* md_color_title\r\n* md_color_content\r\n* md_color_button_text\r\n* md_font_title\r\n* md_font_body\r\n* md_font_button\r\n\r\nHowever when I use `checkBoxPrompt`, the Checkbox is tinted grey and does not use my custom fonts and colors.\r\n\r\nIt would be great if you could style the checkbox promt too."},{"labels":["enhancement"],"text":"**Library Version:**\r\n\r\n2.3.0\r\n \r\n**Describe the Bug:**\r\n\r\nThe ripple color of a dialogs action button should be tinted with the primary color, here it is gray."},{"labels":["enhancement"],"text":"**Library Version:**\r\n\r\n2.1.0\r\n \r\n**Affected Device(s):**\r\n \r\nGoogle Pixel 2 XL with Android 9.0\r\n \r\n**Describe the Bug:**\r\n\r\nThe dialog width changed (got smaller) when upgrading from 2.0.3 to 2.1.0.\r\n\r\n Does this have a particular reason?\r\nHow can I change the width of the dialog, as the new width is a bit too small (for me)?"},{"labels":["enhancement"],"text":"I'm not quite sure if it is optional, but according to the material design docs, dialog action buttons shall use primary color, not the accent color anymore.\n[https://material.io/design/components/dialogs.html#theming](https://material.io/design/components/dialogs.html#theming)"},{"labels":["enhancement"],"text":"**What module does this apply to?**\r\n\r\nNew Module: datetime\r\n\r\n**Description what you'd like to happen:**\r\n\r\nAs Android does not provide a comfortable and modern version of a combinded date-time-picker dialog, I started looking for a solution, without success.\r\nAs I'm using this library, I thought it'd be great if this library would offer a simple solution.\r\nTherefore, I started implementing it in my fork, but came across an issue with theming (Material Design TabLayout won't inflate), and though searching for it on google, I couldn't find a solution.\r\n\r\nFurthermore, there should be the possibility to only select either the date or the time dialog.\r\n\r\nMy fork:\r\nhttps://github.com/guger/material-dialogs\r\n"},{"labels":["enhancement"],"text":"\r\n**What module does this apply to?**\r\n\r\nColor\r\n\r\n**Description what you'd like to happen:**\r\n\r\nUse something like this:\r\n```Kotlin\r\nMaterialDialog(context)\r\n  .colorChooser() { ... }\r\n  .show()\r\n```\r\nand all material colors are shown.\r\n\r\n**Describe alternatives you've considered:**\r\n\r\nOtherwise we need to copy ColorPalette from the demo into project and use this:\r\n\r\n```Kotlin\r\nMaterialDialog(context)\r\n  .colorChooser(PRIMARY_COLORS, PRIMARY_COLORS_SUB) { ... }\r\n  .show()\r\n```\r\n"},{"labels":["enhancement"],"text":"**What module does this apply to?** Core Module\r\n\r\n**Description what you'd like to happen:**\r\n\r\nI'd like it if the ability to choose the dialog case existed, like in Google's modern Material Theme, and in Google's version of Android 9 Pie, available on the Pixels. I know back with Material Design 1, dialog options were always uppercase, but the ability to make them normal case or any case one would like, would be a nice addition. \r\n"},{"labels":["enhancement"],"text":"**Library Version:**\r\n\r\n2.0.0-rc11\r\n \r\n**Affected Device(s):**\r\n \r\nNexus 6P\r\n\r\n![device-2019-02-06-231402](https://user-images.githubusercontent.com/887462/52377436-3291f300-2a65-11e9-95d6-5c97c9718bd4.png)\r\n \r\n**Describe the Bug:**\r\n\r\nIs there any way to avoid positive button changing color when color is selected?\r\n\r\n**To Reproduce:**\r\n1. Just use `colorChooser` \r\n\r\n**Expected Behavior:**\r\n\r\npositive button not change when color is selected"},{"labels":["enhancement"],"text":"I don't like to use `dialog.getCustomView() ?: return`. It gets really ugly when inside scopes, and sometimes you need to check multiple times. [Even you](https://github.com/afollestad/mnml/blob/1d9e5b9f0439aea19fc11c2cec1f50d456921f80/app/src/main/java/com/afollestad/mnmlscreenrecord/ui/settings/SettingsExt.kt#L45) ends up putting multiple checks on the same function. \r\n\r\nI don't understand all the intrinsic parts of the library, but I never seen a case where getCustomView was null (maybe when layout is wrong? But thats another scenario). I think you easily could make a `requireCustomView()`, much the same as `requireContext()`, and it would help you, me, everybody that is tired of the checks when the layout is not null.\r\n\r\nEdit: there is the requireNotNull() from Kotlin, so it could be a one liner solution.\r\n\r\nThe `requireContext()` code is really simple:\r\n<img width=\"659\" alt=\"screen shot 2019-01-06 at 14 54 04\" src=\"https://user-images.githubusercontent.com/351125/50739134-f4ce5000-11c2-11e9-8dd9-f12811959eed.png\">\r\n\r\n"},{"labels":["enhancement"],"text":"*Please consider making a Pull Request if you are capable of doing so.*\r\n\r\n**What module does this apply to?** Core\r\n\r\n**Description what you'd like to happen:**\r\n\r\nOffer minimal touch area of 48dp height in order to comply to this: https://support.google.com/accessibility/android/answer/7101858.\r\nCurrently I do get many warnings in the automated UI checks about the touch size of material dialog elements to be to small:\r\n\r\n![image](https://user-images.githubusercontent.com/1724223/50562090-497c5180-0d11-11e9-9efa-486fafcac0e6.png)\r\n\r\nThis example shows the checkbox, but also many other touch elements are giving the warning.\r\n\r\n**Describe alternatives you've considered:**\r\n\r\nNone.\r\n"},{"labels":["enhancement"],"text":"**What module does this apply to?**\r\n\r\nFiles\r\n\r\n**Description what you'd like to happen:**\r\n\r\nSince file/folder chooser dialog is not wrapped in `DialogFragment`, so I need to implement by myself with this code:\r\n\r\n        override fun onCreateDialog(savedInstanceState: Bundle?): Dialog {\r\n            return MaterialDialog(context!!)\r\n                    .folderChooser(File(arguments!!.getString(\"folder\")), allowFolderCreation = true){ _, file ->\r\n                        // some code\r\n                    }\r\n        }\r\n\r\nBut when I rotate my device, it returns to initial path. I want to save the current path so that when users rotate their device, they don't need to browse the same folder again.\r\n\r\n**Describe alternatives you've considered:**\r\n\r\nI did the following alternative by setting `waitForPositiveButton = false`:\r\n\r\n        override fun onCreateDialog(savedInstanceState: Bundle?): Dialog {\r\n            return MaterialDialog(context!!)\r\n                    .folderChooser(File(arguments!!.getString(\"folder\")), allowFolderCreation = true, waitForPositiveButton = false){ _, file ->\r\n                        arguments!!.putString(\"folder\", file.absolutePath)\r\n                    }\r\n        }\r\n\r\nBut now, I cannot detect if user pressed positive button which tells me that they have selected a folder.\r\n\r\nThen, I added my own positive button callback, but there is a new problem. `FileChooserAdapter` is an internal class, so I cannot access field `selectedFile`:\r\n\r\n        override fun onCreateDialog(savedInstanceState: Bundle?): Dialog {\r\n            return MaterialDialog(context!!)\r\n                    .folderChooser(File(arguments!!.getString(\"folder\")), allowFolderCreation = true, waitForPositiveButton = false){ _, file ->\r\n                        arguments!!.putString(\"folder\", file.absolutePath)\r\n                    }\r\n                    .positiveButton {\r\n                        val adapter = it.getListAdapter() as FileChooserAdapter // error, this class is marked as internal\r\n                        val selectedFile = adapter.selectedFile\r\n                        if (selectedFile != null) {\r\n                            // some code...\r\n                        }\r\n                    }\r\n        }\r\n\r\nSo, would you like to add this feature?"},{"labels":["enhancement"],"text":"I use the latest version of Input Dialog :\r\n\r\n`implementation 'com.afollestad.material-dialogs:core:2.0.0-rc5'`\r\n\r\nI could not find a way to allow Positive button to stay activated when the input field is empty\r\n\r\ncould be like an additional parameter to `Input(... allowEmpty : Boolean )` ?\r\n\r\n"},{"labels":["enhancement"],"text":"(`[x]` becomes a filled in checkbox, `[ ]` is an empty one)\r\n\r\n- [x] I have verified there are [no duplicate active or recent bugs, questions, or requests](https://github.com/afollestad/material-dialogs/issues?q=is%3Aissue+is%3Aclosed)\r\n- [x] I understand that versions below 2.0.0 will no longer be supported for updates.\r\n- [x] I have given my issue a non-generic title.\r\n- [x] I have [read over the documentation](https://github.com/afollestad/material-dialogs/blob/master/README.md) (before asking questions on how to do something).\r\n\r\nHow do i you set ripple color just for the dialog in 2.0.0. This feature was in the pervious 1.X version. While i might be able to set it system wide in the styles.xml, It would be great to have an md_control_highlight to set it just for dialogs."},{"labels":["enhancement"],"text":"While creating a folder or a file the user could input the character \"/\", an emoji, or something else that may not actually create the directory or cause an error. "},{"labels":["enhancement"],"text":"You're changes introduced 2 issues:\r\n\r\n1) no issue, but probably the decision should be rethought:\r\nWhy do you limit the alpha value of the ARGB color dialog to be at least 1? I want to allow fully transparent colors as well... I don't see any reason to disallow this...\r\n\r\n2) you removed the scrolling of the seekbars, this is necessary though, otherwise you can't enable alpha on most phones as the *B* value will be unaccessible in this case..."},{"labels":["enhancement"],"text":"I'm using the latest version of material dialogs 2 (rc1) and I've noticed something.\r\n\r\nTo me, the file/folder chooser seems weird, It doesn't look uniform with the beautiful and smooth design of every other component of the library.\r\n\r\nI'll explain myself better.\r\n\r\n<img src=\"https://i.imgur.com/QiTmrq0.jpg\" width=\"200\"/>\r\n\r\nThe back icon, the tree dots, the text \"new folder\", the folder empty text that isn't exactly between the new folder view and the action buttons, everything looks a little messy to me in this empty folder view (I'm sorry if it's just subjective).\r\nBut more than messy, I guess there is a better what to build the same interface.\r\n\r\nMy issue is that. I've thought about a possible solution, that doesn't seem right either, but that may look better, if you want you can share your opinion about it.\r\nMy idea is:\r\n- \"New folder\" button moved to an action button\r\n- \"This folder is empty!\" replaced with an icon in the middle of the dialog showing an empty directory, and optionally a smaller textview below it\r\n- Changing the icon to \"go up\" to something less extended (I don't mean reducing image size) and cleaner, also if the official guidelines are providing an icon for this behavior, I thought that [arrow_back_ios](https://material.io/tools/icons/?icon=arrow_back_ios&style=baseline), [icon_back](https://material.io/tools/icons/?icon=arrow_back&style=baseline), [chevron_left](https://material.io/tools/icons/?icon=chevron_left&style=baseline) or the \"../\" text may be our best choices.\r\n- Alternatively, we can put the \"New folder\" and \"Go up\" button in the same view, divided in the half so it takes less room and it is more compact and clean, so that you can also remove the ... text from the go up view and the next \"New folder\".   "},{"labels":["enhancement"],"text":"We've shortly talked about that already: color dialogs in landscape mode do not work currently if we enable the argb selector...\r\n\r\nI need this the next week so instead of readding my own old solution again I could use the time to implement something we both are content with.\r\n\r\n**Idea 1:**\r\n\r\n* don't use a `ViewPager` in landscape mode but add a \"...\", \"ARGB\" or maybe some special icon (e.g. https://fontawesome.com/icons/sliders-h?style=solid) circle (like you currently add a \"<-\" circle to move up one level) at the end of the grid to switch to the argb color selector instead\r\n* adjust landscape argb layout to show the color at the left and the 3/4 sliders at the right"},{"labels":["enhancement"],"text":"- [x] I have verified there are [no duplicate active or recent bugs, questions, or requests](https://github.com/afollestad/material-dialogs/issues?q=is%3Aissue+is%3Aclosed)\r\n- [x] I understand that versions below 2.0.0 will no longer be supported for updates.\r\n- [x] I have given my issue a non-generic title.\r\n- [x] I have [read over the documentation](https://github.com/afollestad/material-dialogs/blob/master/README.md) (before asking questions on how to do something).\r\n\r\n---\r\n\r\n###### Include the following:\r\n\r\n - Material Dialogs version: `2.0.0-beta4`\r\n \r\n---\r\n \r\n###### Description:\r\n\r\nWhen using showing an icon in the title, the spacing between the icon and the content is too small for a single line title.\r\n\r\nIt looked better in the previous versions ...\r\n\r\nCan you please increase it a bit or force the icon to be a bit smaller?\r\n\r\nThanks in advance.\r\n\r\n![screenshot_20181108-212258](https://user-images.githubusercontent.com/10360816/48239775-39de2d80-e39e-11e8-8416-94121cc327ca.png)\r\n\r\n\r\n![img_20181108_212505_953_1](https://user-images.githubusercontent.com/10360816/48239742-161ae780-e39e-11e8-8951-52a606fc1e66.jpg)\r\n"},{"labels":["enhancement"],"text":"- [x] I have verified there are [no duplicate active or recent bugs, questions, or requests](https://github.com/afollestad/material-dialogs/issues?q=is%3Aissue+is%3Aclosed)\r\n- [x] I understand that versions below 2.0.0 will no longer be supported for updates.\r\n- [x] I have given my issue a non-generic title.\r\n- [x] I have [read over the documentation](https://github.com/afollestad/material-dialogs/blob/master/README.md) (before asking questions on how to do something).\r\n\r\n---\r\n\r\n###### Include the following:\r\n\r\n - Material Dialogs version: `2.0.0-beta4`\r\n \r\n---\r\n \r\n###### Description:\r\nThis issue is probably related to #1163 and your answer was \"That's android behavior\"\r\n\r\nDo you think you could try using `android:overScrollMode=\"ifContentScrolls\"` to see if it gets disabled?\r\n\r\n![img_20181108_211933_796_1](https://user-images.githubusercontent.com/10360816/48239706-f08dde00-e39d-11e8-8af3-f56d984f3ba4.jpg)\r\n"},{"labels":["enhancement"],"text":"- [x] I have verified there are [no duplicate active or recent bugs, questions, or requests](https://github.com/afollestad/material-dialogs/issues?q=is%3Aissue+is%3Aclosed)\r\n- [x] I understand that versions below 2.0.0 will no longer be supported for updates.\r\n- [x] I have given my issue a non-generic title.\r\n- [x] I have [read over the documentation](https://github.com/afollestad/material-dialogs/blob/master/README.md) (before asking questions on how to do something).\r\n\r\n---\r\n\r\n###### Include the following:\r\n\r\n - Material Dialogs version: `2.0.0-beta4`\r\n \r\n---\r\n \r\n###### Description:\r\n\r\nCan you please increase the end margin of the last button to look the same as the bottom margin? It looks a bit too close to the right side (I know they are the same right now, but the button text padding make them look different).\r\n\r\nThanks in advance.\r\n\r\n![screenshot_20181108-211237_1](https://user-images.githubusercontent.com/10360816/48239550-4746e800-e39d-11e8-951d-643fc1d1b57b.png)\r\n"},{"labels":["enhancement"],"text":"- [x] I have verified there are [no duplicate active or recent bugs, questions, or requests](https://github.com/afollestad/material-dialogs/issues?q=is%3Aissue+is%3Aclosed)\r\n- [x] I understand that versions below 2.0.0 will no longer be supported for updates.\r\n- [x] I have given my issue a non-generic title.\r\n- [x] I have [read over the documentation](https://github.com/afollestad/material-dialogs/blob/master/README.md) (before asking questions on how to do something).\r\n\r\n---\r\n\r\n###### Include the following:\r\n\r\n - Material Dialogs version: `2.0.0-beta4`\r\n \r\n---\r\n \r\n###### Description:\r\n\r\nOn previous versions of MaterialDialogs one could send a `StringRes` that was actually an HTML string, and the dialog would be shown properly and even links would work.\r\n\r\nDo you think you could bring back said functionality? Or maybe making the content clickable? (I'm sending the formatted `CharSequence` but the links clicks do not work).\r\n\r\nThanks"},{"labels":["enhancement"],"text":"- [x] I have verified there are [no duplicate active or recent bugs, questions, or requests](https://github.com/afollestad/material-dialogs/issues?q=is%3Aissue+is%3Aclosed)\r\n- [x] I understand that versions below 2.0.0 will no longer be supported for updates.\r\n- [x] I have given my issue a non-generic title.\r\n- [x] I have [read over the documentation](https://github.com/afollestad/material-dialogs/blob/master/README.md) (before asking questions on how to do something).\r\n\r\n - Material Dialogs version: `2.0.0.beta4`\r\n\r\nI'm creating a dialog with custom view. This dialog is used often, i need it to be quick, but the view itself is pretty heavy. So, in version 1 of material dialog i created a builder and then every time when i needed to display popup i could just replace some values on view, setup positive button callback and show dialog again. But now i can't do that right now since `positiveButton` adds new callback to listeners list. \r\n\r\nCan we have some function to replace actual listeners? Or maybe to remove all listeners so far? I could do a PR if you approve of this idea\r\n\r\n---\r\n \r\n###### Reproduction Steps\r\n\r\n1. Create a material dialog by `setupPointsDialog` and then call `showMoveDialog` to display it\r\n```kotlin\r\n    private fun showMoveDialog(score: Score) {\r\n        val dialogView = dialog.getCustomView() ?: return\r\n        val input = dialogView.findViewById<EditText>(R.id.dialog_points_input)\r\n        input.setText(\"0\")\r\n        val nameTextView = dialogView.findViewById<TextView>(R.id.dialog_points_player)\r\n        nameTextView.text = score.playerName\r\n        dialog.positiveButton {\r\n            viewModel.addMove(score.playerId, input.text.toString().toInt())\r\n        }\r\n        dialog.show()\r\n    }\r\n\r\n    private fun setupPointsDialog(){\r\n        dialog = MaterialDialog(requireContext())\r\n                .customView(R.layout.dialog_points)\r\n                .negativeButton(R.string.cancel)\r\n                .positiveButton(R.string.add)\r\n\r\n        val dialogView = dialog.getCustomView() ?: return\r\n\r\n        val input = dialogView.findViewById<EditText>(R.id.dialog_points_input)\r\n\r\n        fun setNewValue(button: View){\r\n            val delta = button.tag.toString().toInt()\r\n            val points = input.text.toString().toInt() + delta\r\n            input.setText(points.toString())\r\n        }\r\n\r\n        val llAdd = dialogView.findViewById<LinearLayout>(R.id.dialog_points_ll_add)\r\n        val llSub = dialogView.findViewById<LinearLayout>(R.id.dialog_points_ll_sub)\r\n\r\n        for (i in 0..llAdd.childCount){\r\n            val buttonAdd = llAdd.getChildAt(i) as Button?\r\n            val buttonSub = llSub.getChildAt(i) as Button?\r\n            buttonAdd?.setOnClickListener {\r\n                setNewValue(it)\r\n            }\r\n            buttonSub?.setOnClickListener {\r\n                setNewValue(it)\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\n---\r\n\r\n###### Expected Result\r\n\r\nDialog with new onClick event\r\n\r\n---\r\n\r\n###### Actual Result\r\n\r\nOn positive calls all previous registered callbacks\r\n\r\n**EDIT:**\r\n\r\nFor now i use simple hack like this (and it seems to be working fine):\r\n```kotlin\r\ndialog.getActionButton(WhichButton.POSITIVE).setOnClickListener {\r\n    viewModel.addMove(score.playerId, input.text.toString().toInt())\r\n    dialog.dismiss()\r\n}\r\n```"},{"labels":["enhancement"],"text":"We want the user to be able to select on, many or none tags from the multiChoise dialog. \r\n\r\nBut the positive button only gets activated when the user selects at least one item.\r\nIs there an option to change that?"},{"labels":["enhancement"],"text":"- [x] I have verified there are [no duplicate active or recent bugs, questions, or requests](https://github.com/afollestad/material-dialogs/issues?q=is%3Aissue+is%3Aclosed)\r\n- [x] I understand that versions below 2.0.0 will no longer be supported for updates.\r\n- [x] I have given my issue a non-generic title.\r\n- [x] I have [read over the documentation](https://github.com/afollestad/material-dialogs/blob/master/README.md) (before asking questions on how to do something).\r\n\r\n---\r\n\r\n###### Include the following:\r\n\r\n - Material Dialogs version: `2.0.0-beta3`\r\n - Affected device: All\r\n\r\nCurrently the dialog does not allow to use a `RecyclerView` and a message at the same time, because adding a message wraps the view in a `ScrollView` and afterwards you can't add the `RecyclerView` anymore...\r\n\r\nI think it would make sense to allow this, some non scrollable information above a list (e.g. a counter that shows how many items are selected or similar) is very useful. This was easily achieveable in v1.\r\n\r\nMaybe it would make sense to allow to add a message without wrapping it in a scrollview which than can be used with a `RecyclerView` or list?"},{"labels":["enhancement"],"text":"I am using Material Dialogs with RecyclerView and it got super weird on top and bottom. Check below comparison between before and now.\r\n\r\nMost of the code is really standard and [my app is open source](https://github.com/bernaferrari/ChangeDetection) (but I still haven't pushed the changes).\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<android.support.v7.widget.RecyclerView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:id=\"@+id/defaultRecycler\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/windowBackground\"\r\n    app:layoutManager=\"android.support.v7.widget.LinearLayoutManager\" />\r\n```\r\n\r\n```kotlin\r\nval materialDialog = MaterialDialog(activity)\r\n            .customView(R.layout.recyclerview)\r\n            .noAutoDismiss()\r\n            .negativeButton(R.string.cancel) { it.dismiss() }\r\n            .positiveButton(R.string.save) { dialog ->\r\n                ...\r\n            }\r\n\r\n        materialDialog.getCustomView()?.findViewById<RecyclerView>(R.id.defaultRecycler)?.apply {\r\n            this.overScrollMode = View.OVER_SCROLL_NEVER\r\n            this.layoutManager = LinearLayoutManager(this.context)\r\n            this.adapter = GroupAdapter<ViewHolder>().apply {\r\n                add(dialogItemTitle)\r\n                add(Section(listOfItems))\r\n                add(dialogItemColorPicker)\r\n            }\r\n        }\r\n\r\n        materialDialog.show()\r\n```\r\n0.96\r\n![screenshot_20180914-205837_change detection](https://user-images.githubusercontent.com/351125/45900425-23602080-bdb6-11e8-8af2-d5493fa0c86b.jpg)\r\n\r\n2.0\r\n![screenshot_20180921-154421_change detection](https://user-images.githubusercontent.com/351125/45900420-20fdc680-bdb6-11e8-9852-ce54cd5c27fd.jpg)\r\n"},{"labels":["enhancement"],"text":"Right now having a transparent color makes the circle in the grid show the dialog background. We should instead make it obvious it represents transparent, like with a grid."},{"labels":["enhancement"],"text":"(`[x]` becomes a filled in checkbox, `[ ]` is an empty one)\r\n\r\n- [x] I have verified there are [no duplicate active or recent bugs, questions, or requests](https://github.com/afollestad/material-dialogs/issues?q=is%3Aissue+is%3Aclosed)\r\n- [x] I understand that versions below 2.0.0 will no longer be supported for updates.\r\n- [x] I have given my issue a non-generic title.\r\n- [x] I have [read over the documentation](https://github.com/afollestad/material-dialogs/blob/master/README.md) (before asking questions on how to do something).\r\n\r\n---\r\n\r\n###### Include the following:\r\n\r\n - Material Dialogs version: `2.0.0-alpha09`\r\n - Affected device: All\r\n\r\nAlso, please wrap your code with correct syntax highlighting (not just indents).\r\n\r\n```kotlin\r\nMaterialDialog(this)\r\n                        .title(R.string.attention)\r\n                        .message(R.string.choose_screen)\r\n                        .positiveButton(android.R.string.ok)\r\n                        .show()\r\n```\r\n\r\n```xml\r\n<item name=\"android:textColorPrimary\">@color/black</item>\r\n<item name=\"android:textColorSecondary\">@color/white</item>\r\n```\r\n \r\n---\r\n \r\n###### Reproduction Steps\r\n\r\nObsolete, happens always\r\n\r\n---\r\n\r\n###### Expected Result\r\n\r\nText should be a darker color\r\n\r\n---\r\n\r\n###### Actual Result\r\n\r\nText is either white or transparent\r\n\r\n\r\nThis happens with all dialogs we implemented, and we just can't figure out why. We checked all styles, colors and Kotlin files for wrong configurations, but all seems to be fine.\r\n\r\n<img src=\"https://user-images.githubusercontent.com/5941636/45509644-758eb980-b798-11e8-9db4-1af1aed34b95.png\" width=\"250px\"></img>"},{"labels":["enhancement"],"text":"- [x] I have verified there are [no duplicate active or recent bugs, questions, or requests](https://github.com/afollestad/material-dialogs/issues?q=is%3Aissue+is%3Aclosed)\r\n- [x] I understand that versions below 2.0.0 will no longer be supported for updates.\r\n- [x] I have given my issue a non-generic title.\r\n- [x] I have [read over the documentation](https://github.com/afollestad/material-dialogs/blob/master/README.md) (before asking questions on how to do something).\r\n\r\n---\r\n\r\n - Material Dialogs version: `2.0.0-alpha09`\r\n\r\nI was thinking that maybe an option to create a new folder option should be available in the Folder Chooser Dialog. There are many use cases in many different apps that can use this feature and including this in the builder would be a great addition to this library in my opinion"},{"labels":["enhancement"],"text":"I have used multiplechoice list(checkboxes). I have a case when user selected 1st checkbox, the rest of checkboxes should get checked too, and vice versa. How to perform this? Do I have to make custom recyclerview to do this?"},{"labels":["enhancement"],"text":"In previous version there was an opportunity to set dialogs background by parameter md_background_color. But now how to set global material dialogs background in res/styles for dark theme?"},{"labels":["enhancement"],"text":"(`[x]` becomes a filled in checkbox, `[ ]` is an empty one)\r\n\r\n- [x] I have verified there are [no duplicate active or recent bugs, questions, or requests](https://github.com/afollestad/material-dialogs/issues?q=is%3Aissue+is%3Aclosed)\r\n- [x] I understand that versions below 2.0.0 will no longer be supported for updates.\r\n- [x] I have given my issue a non-generic title.\r\n- [x] I have [read over the documentation](https://github.com/afollestad/material-dialogs/blob/master/README.md) (before asking questions on how to do something).\r\n\r\nI would like a feature where we can prevent dismissal of dialog if a tap occurs anywhere outside the dialog. This will be useful if we need some input from the dialog and it can't be ignored.\r\n\r\n - Material Dialogs version: `2.0.0-alpha6`\r\n\r\n\r\n\r\n\r\n"},{"labels":["enhancement"],"text":"Right to left support needs to be re-implemented."},{"labels":["enhancement"],"text":"- [x] I have verified there are [no duplicate active or recent bugs, questions, or requests](https://github.com/afollestad/material-dialogs/issues?q=is%3Aissue+is%3Aclosed)\r\n- [X] I understand that versions below 2.0.0 will no longer be supported for updates.\r\n- [X] I have given my issue a non-generic title.\r\n- [X] I have [read over the documentation](https://github.com/afollestad/material-dialogs/blob/master/README.md) (before asking questions on how to do something).\r\n\r\n---\r\n\r\nIn library dimens: radius of the dialogs are not according to [New Material Design Specs](https://material.io/design/components/dialogs.html#theming).\r\n\r\nEx: \r\nIn Library - Corner Radius is **2dp**\r\nNew Material Design Specs - Corner Radius is **16dp** \r\n\r\nReference: https://material.io/design/components/dialogs.html#theming"},{"labels":["enhancement"],"text":"Since support library v27 there is a new way of using custom fonts in our apps (without Calligraphy).\r\n\r\nCurrently for dialogs you can specify the typeface every time with the builder pattern or by using `md_medium_font` and `md_regular_font` tags in styles but the issue is that it takes fonts only from assets folder. \r\n\r\nCan we have an option to get it from the res/font folder ?\r\nI'm asking this because I'll need duplicate font files or add typefaces to every dialog builder in the app and I would like to keep it short and simple.\r\n"},{"labels":["enhancement"],"text":"- [x] I have verified there are no duplicate active or recent bugs, questions, or requests\r\n- [x] I have verified that I am using the latest version of Material Dialogs.\r\n- [x] I have given my issue a non-generic title.\r\n- [x] I have read over the documentation (before asking questions on how to do something).\r\n\r\n###### Include the following:\r\n - Material Dialogs version: `0.9.6.0`\r\n \r\n###### Reproduction Steps\r\n\r\n1. Configuring a Input Dialog using the builder pattern\r\n\r\n###### Expected Result\r\n\r\nSome way to specify custom InputFilters (which are helpful if input must match a certain regex).\r\n\r\n###### Actual Result\r\n\r\nNo APIs to specify a custom input filter, yet InputFilters are used internally to handle the min/max length."},{"labels":["enhancement"],"text":"- [x] I have verified there are no duplicate active or recent bugs, questions, or requests\r\n- [x] I have verified that I am using the latest version of Material Dialogs.\r\n- [x] I have given my issue a non-generic title.\r\n- [x] I have read over the documentation (before asking questions on how to do something).\r\n\r\n###### Include the following:\r\n\r\n - Material Dialogs version: `0.9.4.7`\r\n - Device OS version: `8.0`\r\n - Device Manufacturer: `Google`\r\n - Device Name: `Nexus 5X`\r\n\r\n###### Issue\r\n\r\nI'm having a hard time trying to add enter and exit animations to preference dialogs (MaterialDialogPreference and MaterialListPreference).\r\n\r\nThe showDialog method in those classes already builds and shows the dialog and I have no way to hook the animation up before the dialog shows up, as I do with the MaterialDialog class.\r\n\r\nIs there an option to do this with the library that I'm not aware of?"},{"labels":["enhancement"],"text":"- [x] I have verified there are no duplicate active or recent bugs, questions, or requests\r\n- [x] I have verified that I am using the latest version of Material Dialogs.\r\n- [x] I have given my issue a non-generic title.\r\n- [x] I have read over the documentation (before asking questions on how to do something).\r\n\r\n - Material Dialogs version: `0.9.5.0`\r\n - Device OS version: `7.1.1`\r\n - Device Manufacturer: `Google`\r\n - Device Name: `Pixel XL`\r\n\r\nCan we have theming options for `FolderChooserDialog.Builder` similar to `MaterialDialog.Builder`, say `postiveColor(int color)`, etc."},{"labels":["enhancement"],"text":"- [x] I have verified there are no duplicate active or recent bugs, questions, or requests\r\n- [X] I have verified that I am using the latest version of Material Dialogs.\r\n- [X] I have given my issue a non-generic title.\r\n- [X] I have read over the documentation (before asking questions on how to do something).\r\n\r\n###### Include the following:\r\n - Material Dialogs version: `0.9.4.7`\r\n\r\n\r\n"},{"labels":["enhancement"],"text":"* Material Dialogs version: 0.9.2.5\r\n* API: 26\r\n* Device Manufacturer: Android\r\n* Device Name: Samsung S6\r\n\r\nI would like to have following small extension:\r\n\r\n```java\r\n    new MaterialDialog.Builder(getActivity())\r\n\t\t.customView(view, false, <boolean>)\r\n```\r\n\r\nOr an alternative extra method for keeping the backwards compatibility. The additional parameter should have the effect that the default margins are set to the custom view. So that I don't have to do following manually:\r\n    \r\n```java\r\n    View view = new CustomView(context);\r\n    MaterialDialog dlg = new MaterialDialog.Builder(getActivity())\r\n\t\t.title(R.string.info)\r\n\t\t.customView(view, false)\r\n\t\t.positiveText(android.R.string.ok)\r\n\t\t.show();\r\n\r\n    // this should be done automatically if desired\r\n\tint horizontalMargin = (int)getActivity().getResources().getDimension(R.dimen.md_dialog_frame_margin);\r\n\t((ViewGroup.MarginLayoutParams)view.getLayoutParams()).leftMargin = horizontalMargin;\r\n\t((ViewGroup.MarginLayoutParams)view.getLayoutParams()).rightMargin = horizontalMargin;\r\n```\r\n"},{"labels":["enhancement"],"text":"- [x] I have verified there are no duplicate active or recent bugs, questions, or requests\r\n- [x] I have verified that I am using the latest version of Material Dialogs.\r\n- [x] I have given my issue a non-generic title.\r\n- [x] I have read over the documentation (before asking questions on how to do something).\r\n\r\nI'm missing a small feature for the color dialog, it would be nice to support resource strings and normal strings for titles/subtitles. Just like the default `MaterialDialog.Builder() .title(<string or res string>)` does support it"},{"labels":["enhancement"],"text":"hi, \r\nhow to set typeface for title and positive and negative buttons of ColorChooserDialog?"},{"labels":["enhancement"],"text":""},{"labels":["enhancement"],"text":" - Material Dialogs version: `0.9.2.3`\r\n - API: `25`\r\n - Device Manufacturer: `Android`\r\n - Device Name: `Nexus 7` / `Android Emulator`\r\n\r\nI invoke a MaterialDialog with my custom view:\r\n\r\n```java\r\n   new MaterialDialog.Builder(myActivity)\r\n   .customView(view, false)\r\n   .negativeText(R.string.dialog_user_profile_button)\r\n   .title(user.getHandle())\r\n   .show();\r\n```\r\n\r\nThe problem is that the contents isn't wrapped, i.e. I the right margin is wider than the left. \r\n\r\n(This is a problem in AppCompat AlertDialog also).\r\n\r\n \r\n\r\n\r\n"},{"labels":["enhancement"],"text":""},{"labels":["enhancement"],"text":"@afollestad \r\nIs there a problem with the latest build tools version, or did you just forget to update it? I noticed that our builds are still requiring the older version of build tools despite updating to latest material dialogs."},{"labels":["enhancement"],"text":"- [X] I have verified there are no duplicate active or recent bugs, questions, or requests\r\n- [X] I have verified that I am using the latest version of Material Dialogs.\r\n- [X] I have given my issue a non-generic title.\r\n- [X] I have read over the documentation (before asking questions on how to do something).\r\n\r\n - Material Dialogs version: `0.9.1.0`\r\n - Device OS version: `7.0`\r\n - Device Manufacturer: `Huawei`\r\n - Device Name: `Nexus 6P`\r\n\r\nThe dialog radio buttons are being tinted using textColorSecondary instead of colorControlNormal. This has been reported by a few people in #1153. There seems to be some kind of issue with Android's RadioButtons as the first answer in this [StackOverflow thread](http://stackoverflow.com/questions/26843098/android-appcompat-v721-0-0-change-material-checkbox-colors) also confirms this issue. My MaterialDialog's radio buttons are having this issue but my Android SDK RadioButtons are not and are correctly tinted using colorControlNormal. \r\n\r\nSince you can already set the colors for a bunch of stuff, I think you should just allow us to supply our own colors or ColorStateList to override the widget state colors. That provides more flexibility and allows us to not have to depend on Android's theming system which I find to be buggy and convoluted.\r\n"},{"labels":["enhancement"],"text":"- [x] I have verified there are no duplicate active or recent bugs, questions, or requests\r\n- [x] I have verified that I am using the latest version of Material Dialogs.\r\n- [x] I have given my issue a non-generic title.\r\n- [x] I have read over the documentation (before asking questions on how to do something).\r\n\r\n###### Include the following:\r\n - Material Dialogs version: `0.9.1.0`\r\n - Device OS version: `7.0`\r\n - Device Manufacturer: `Google`\r\n - Device Name: `Nexus 5X`\r\n\r\n###### Issue Description:\r\n\r\nThis is more a feature request than a bug report.\r\nIt would be nice to have the possibility to set a unique id for a dialog when using the `MaterialDialog.Builder`.\r\nThis allows encapsulating multiple dialogs in a separate class with a single `SingleButtonCallback` implementation to handle all different kind of callback invocations depending on the Dialog's id.\r\n\r\nAny feedback on that is appreciated."},{"labels":["enhancement"],"text":"- [x] I have verified there are no duplicate active or recent bugs, questions, or requests\r\n- [x] I have verified that I am using the latest version of Material Dialogs.\r\n- [x] I have given my issue a non-generic title.\r\n- [x] I have read over the documentation (before asking questions on how to do something).\r\n\r\n###### Device Info:\r\n - Material Dialogs version: `0.9.1.0`\r\n - Device OS version: `6.0.1`\r\n - Device Manufacturer: `LG`\r\n - Device Name: `Nexus 5`\r\n\r\nI was trying to obtain something similar to the `showMultiChoiceLimited` preventing an unchecking action instead of a checking one.\r\nThe `onSelection` method from the `ListCallbackMultiChoice` it's called both when I check and uncheck the checkbox so I supposed that returning false would have prevented both the actions, but it does not.\r\nHave I missed something?\r\nThis is the tested code. \r\n\r\n```java\r\n/**\r\n * I would like to prevent an unselection action, so that the\r\n * newly unselected check box will not be actually unselected \r\n * if a condition is false.\r\n */\r\npublic void showMultiChoiceUncheckingLimited() {\r\n\tnew MaterialDialog.Builder(context)\r\n\t.title(\"Social:\")\r\n\t.items(Arrays.asList(\"Facebook\", \"Twitter\", \"G+\"))\r\n\t.itemsCallbackMultiChoice(new Integer[]{1}, new MaterialDialog.ListCallbackMultiChoice() {\r\n\t\t@Override\r\n\t\tpublic boolean onSelection(MaterialDialog dialog, Integer[] which, CharSequence[] text) {\r\n\t\t\tboolean allowUnSelection = which.length >= 1; // limit the unselection (instead of the selection)\r\n\t\t\tif (!allowUnSelection) {\r\n\t\t\t\tshowToast(R.string.selection_limit_reached);\r\n\t\t\t}\r\n\t\t\treturn allowUnSelection;\r\n\t\t}\r\n\r\n\t})\r\n\t.positiveText(\"Dismiss\")\r\n\t.alwaysCallMultiChoiceCallback() // the callback will always be called, to check if selection is still allowed\r\n\t.show();\r\n}\r\n```"},{"labels":["enhancement"],"text":"###### Include the following:\n- Material Dialogs version: `0.9.0.2'`\n- Device OS version: `any`\n- Device Manufacturer: `any`\n- Device Name: `any`\n\nIt would be nice, when this could be possible.\n###### Reproduction Steps\n\n``` xml\n<string name=\"crazy_string\">My %1$s <b>bold</b> text could be view as %2$s <i>italic</i>.</string>\n```\n\n``` java\nnew MaterialDialog.Builder(this)\n                    .content(R.string.crazy_string, \"happy\", \"angry\")\n                    .show();\n```\n\nWant to create dialog with Text like: \n\n> My happy **bold** text could be view as angry _italic_.\n###### Expected Result\n\nDialog with formated text: My happy **bold** text could be view as angry _italic_.\n###### Actual Result\n\nMy happy bold text could be view as angry italic.\n"},{"labels":["enhancement"],"text":"###### Include the following:\n- Material Dialogs version: `0.9.0.0`\n- Device OS version: `4.4.4`\n- Device Manufacturer: `Xiaomi`\n- Device Name: `Redmi 1s`\n\nPlease add support to StaggeredGridLayoutManager in the recyclerview.It currently supports only LinearLayoutManager and GridLayoutManager.\n"},{"labels":["enhancement"],"text":"- [X] I have verified there are no duplicate active or recent bugs, questions, or requests\n- [X] I have verified that I am using the latest version of Material Dialogs.\n- [X] I have given my issue a non-generic title.\n- [X] I have read over the documentation (before asking questions on how to do something).\n###### Include the following:\n- Material Dialogs version: `0.9.0.1`\n- Device OS version: `7.0`\n- Device Manufacturer: `LGE`\n- Device Name: `Nexus 5X`\n\nmime type filter is good, but sometimes it's not enough (mimetype doesn't exists)\n"},{"labels":["enhancement"],"text":"Code:\n\n```\n\nnew MaterialDialog.Builder(MainActivity.this)\n                        .checkBoxPrompt(\"I won't show\",true,null)\n                        .title(\"Change Language\")\n                        .items(new String[] {\"Chinese\", \"Martian\"})\n                        .positiveText(\"Change\")\n                        .onPositive(new MaterialDialog.SingleButtonCallback() {\n                            @Override\n                            public void onClick(@NonNull MaterialDialog dialog,\n                                                @NonNull DialogAction which) {\n                               return;\n\n                            }\n                        })\n                        .itemsCallbackSingleChoice(-1, new MaterialDialog.ListCallbackSingleChoice() {\n\n                            @Override\n                            public boolean onSelection(MaterialDialog dialog,\n                                                       View itemView,\n                                                       int which,\n                                                       CharSequence text) {\n                                return false;\n                            }\n                        })\n                        .negativeText(\"Dismiss\")\n                        .icon(ContextCompat.getDrawable(MainActivity.this,R.drawable.ic_locale))\n                        .show();\n\n```\n\nJust wrote this out quickly, I was expecting the checkbox to appear below the list but it didn't.\nAnything wrong with my code?\n"},{"labels":["enhancement"],"text":"- [x] I have verified there are no duplicate active or recent bugs, questions, or requests\n- [x] I have verified that I am using the latest version of Material Dialogs.\n- [x] I have given my issue a non-generic title.\n- [x] I have read over the documentation (before asking questions on how to do something).\n  - Material Dialogs version: `0.8.6.2`\n\nHi! First of all thank you for this great library, I'm really enjoy using it, but today I had 2 hours trying to find out why my dialogs content not showing in my new project. It turns out thats because R.id.content id defined both in my project and in your library. Project resources have priority over library resources, so when dilog tries to find content TextView, nothing found and no content shown as result. I'll suggest you to either to use default android ids (android.R.id.content), or to use prefix for your ids (R.id.md_content) to prevent such problems on others.\n"},{"labels":["enhancement"],"text":"``` java\n        MaterialDialog dialog = new MaterialDialog.Builder(this)\n                .title(\"Aanpassen\")\n                .items(\"Tijd\", \"Vak\", \"Leraar\", \"Lokaal\", \"Klas\")\n                .content(\"Kies wat moet worden weergegeven in de meldingen:\\n\" + \"8:00 - 9:00 - Bio - Kees - H1.10 - H3A\")\n                .alwaysCallMultiChoiceCallback()\n                .itemsCallbackMultiChoice(new Integer[]{0, 3}, new MaterialDialog.ListCallbackMultiChoice() {\n                    @Override\n                    public boolean onSelection(MaterialDialog dialog, Integer[] which, CharSequence[] text) {\n                        boolean shallIReturn = true;\n                        for (int id = 0; id < which.length; id++) {\n                            System.out.println(\"Hmmm\" + which[id] + \"Hmmm\");\n                            if (which[id] == 0 || which[id] == 3) {\n                                shallIReturn = false;\n                            } else {\n                                StringBuilder str = new StringBuilder();\n                                StringBuilder whichNumber = new StringBuilder();\n                                for (int i = 0; i < which.length; i++) {\n                                    if (i > 0) ;\n                                    whichNumber.append(which[i]);\n                                    switch (which[i]) {\n                                        case 0:\n                                            text[i] = \"8:00 - 9:00 -\";\n                                            break;\n                                        case 1:\n                                            text[i] = \" Bio -\";\n                                            break;\n                                        case 2:\n                                            text[i] = \" Kees -\";\n                                            break;\n                                        case 3:\n                                            text[i] = \" H1.10 -\";\n                                            break;\n                                        case 4:\n                                            text[i] = \" H3A \";\n                                            break;\n                                        default:\n                                            break;\n                                    }\n                                    str.append(text[i]);\n                                }\n                                prefs.edit().putString(\"NotificationCustoms\", whichNumber.toString()).apply();\n\n                                dialog.getContentView().setText(\"Kies wat moet worden weergegeven in de meldingen:\\n\" + str.toString());\n                                shallIReturn = true;\n                            }\n                        }\n                        return shallIReturn;\n                    }\n                })\n                .onNeutral(new MaterialDialog.SingleButtonCallback() {\n                    @Override\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\n                        dialog.clearSelectedIndices();\n                    }\n                })\n                .alwaysCallMultiChoiceCallback()\n                .positiveText(R.string.md_choose_label)\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\n                    @Override\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\n                        dialog.dismiss();\n                    }\n                })\n                .autoDismiss(false)\n                .neutralText(\"Clear\")\n                .build();\n        dialog.show();\n\n```\n\nIs it possible to disable an checkbox? (why? I would like to show it, but I also want to show the user that it is required). I tried to make an if statement that returns false when clicking on 0 or 3, but in that way, I can't check it, only uncheck it. I would like it to be permanently checked. \n\nI do not want an custom view, as I don't like custom views\n"},{"labels":["enhancement"],"text":"When creating a ColorChooserDialog, I get a dark background. The theme() attribute is missing in this case. How does one change the theme?\n"},{"labels":["enhancement"],"text":"Would be useful if we can have the option to add a checkbox like the one in the system permission dialog.\nThis can be used to have options like \"Never ask again\" or \"Save this preference\".\n"},{"labels":["enhancement"],"text":"Hi,\n\nIs there any way I can know which FolderChooserDialog called the callback onFolderSelection if there are more than one FolderChooserDialog builders in same activity ?\n\nPS: I can do it by creating static member in my activity and changing it before creating any FolderChooserDialog but still I would like to confirm if there exists something in API which I am not aware of.\n"},{"labels":["enhancement"],"text":"Could you add this option to FileChooserDialog? Thanks\n"},{"labels":["enhancement"],"text":"Would be nice to be able to have an option to create folders via the `FolderChooserDialog`. Maybe a simple plus in the title toolbar would be perfect for this functionality...\n"},{"labels":["enhancement"],"text":"Hi Aidan,\n\nI'm styling my preferences through styles.xml instead of custom layouts. The problem is since version 8.4.0 these styles are overriden by the library preference layout resource.\n\nIs there any way I can avoid using the library layout without having to create a custom layout for my preferences? Or in other words, could it be possible to make the use of the library preference layout optional?\n"},{"labels":["enhancement"],"text":"I can't get the icon of the dialog and change it, can I?\n\nI want to use the image loader I use everywhere else... Currently I display a default image and afterwards change the icon via reflection like following:\n\n``` java\nMaterialDialog dialog = builder.build();\ntry {\n            Field icon = dialog.getClass().getDeclaredField(\"icon\");\n            icon.setAccessible(true);\n            ImageView ivIcon = (ImageView)icon.get(dialog);\n            // load image into image view...\n} catch (NoSuchFieldException e) {\n            L.e(this, e);\n} catch (IllegalAccessException e) {\n            L.e(this, e);\n}\n```\n"},{"labels":["enhancement"],"text":"Layout in md_stub_colorchooser_custom.xml has LinearLayout as root, thus is not scrollable.\nSimple solution would be to wrap it in ScrollView.\n\nCheers!\n"},{"labels":["enhancement"],"text":"The color pallete dialog shows a cancel button.\n<img width=\"205\" alt=\"screenshot 2015-11-08 16 45 45\" src=\"https://cloud.githubusercontent.com/assets/13274079/11020031/5f816a14-8638-11e5-8e55-f07e3f98cf48.png\">\n\nThe custom input dialog does not.\n<img width=\"204\" alt=\"screenshot 2015-11-08 16 45 32\" src=\"https://cloud.githubusercontent.com/assets/13274079/11020032/5fbc988c-8638-11e5-9266-6ee3760da5cf.png\">\n\nNot a exactly a bug, but consistency would be good :)\n"},{"labels":["enhancement"],"text":"That will cause the problem when I set positive color to white, the links will be invisible. Please add a new  attribute for links color\n"},{"labels":["enhancement"],"text":"MaterialDialogs doesn't have a drop shadow on dialogs for KitKat and below. I think it would make it look much nicer.\n\nGreat work by the way. Such an impressive library.\n"},{"labels":["enhancement"],"text":"Can we have a method in MaterialListPreference - getListVIew() , because right now the only way to get it is ListView list = ((MaterialDialog) pref.getDialog()).getListView(); Would be nice if we have a explicit method for that.\n"},{"labels":["enhancement"],"text":""},{"labels":["enhancement"],"text":"Like Toolbar items: https://android.googlesource.com/platform/frameworks/support/+/master/v7/appcompat/src/android/support/v7/internal/view/menu/ActionMenuItemView.java#230\n"},{"labels":["enhancement"],"text":"Kind of like how Screener does it.\n"},{"labels":["enhancement"],"text":"Google over [here](https://www.google.com/design/spec/components/dialogs.html#dialogs-simple-dialogs) suggests to change row size for wrapped list items, but the library does not supports this\n"},{"labels":["enhancement"],"text":"Currently it is only possible to determine if the `ColorChooseDialog` is in accent color mode or not. It would be helpful if you could define an ID to distinguish between the dialogs.\n"},{"labels":["enhancement"],"text":"Is it possible to define own colors for the ColorChooseDialog?\n"},{"labels":["enhancement"],"text":"How can I change the ripple color ?\nIt's gray.\nThe button is the color of ColorAccent, it's ok but for the ripple ?\n\nThank you\n"},{"labels":["enhancement"],"text":"Now that you've broken up the project into core and commons components, I'd like to have a folder selector dialog added to commons, similar to the one in your example app.\n"},{"labels":["enhancement"],"text":"how can i  put select all option in multi choice dailog\n"},{"labels":["enhancement"],"text":"Hi!\nI really like the library, and use it extensively in the applications I develop. Currently I'm working on a passcode input dialog, and I found that I can specify `inputMaxLength` to a `MaterialDialog.Builder`, but there is no `inputMinLength`, which would be useful for my use-case (the passcode must have exactly a specified length).\n\nCould you add an `inputMinLength` setting, which validates the input the same way as the `inputMaxLength` (disabling the positive button and coloring the EditText red, or the specified color, when not having enough characters entered, and displaying the character count as well)?\n"},{"labels":["enhancement"],"text":"Hi,\n\nIt would be nice having also a \"CANCEL\" button in ColorChooser dialog, in order to be able to close the dialog without confirming the choosed color.\n\nAlso is there a way to localize/customize buttons' text? My phone localization is Italian, but I see buttons with English text.\n\nWhat do you think about this?\nThanks in advance\n"},{"labels":["enhancement"],"text":"I suggest to add preferences (like MaterialListPreference) that extend from `android.support.v7.preference.ListPreference` instead of `android.preference.ListPreference` so the library works with the latest AppCompat [Preference Library](http://developer.android.com/reference/android/support/v14/preference/PreferenceFragment.html).\n"},{"labels":["enhancement"],"text":"Similar to how we do our [BottomSheet](https://github.com/flipboard/bottomsheet) library and the direction that RxAndroid is taking now. \n\nSince the library has grown a fair bit with a lot of extra resources and custom implementations, I think it would make sense to split the library into `core` and `commons` modules. `Core` would just be the main dialog code and necessary components for the core features, and `commons` would include the custom ready-out-of-the-box implementations people can use if they want (prefs, progress, color picker, etc). \n\nThis could then also open the door for others to contribute their own custom implementations to commons if they want, without the ambiguity of wondering if it really belongs in the library.\n\nThoughts?\n"},{"labels":["enhancement"],"text":"Im using following code to clear the selection of a Multi Choice List Dialog:\n\n``` Java\n@Override\npublic void onNeutral(MaterialDialog dialog) {\n    super.onNeutral(dialog);\n    dialog.setSelectedIndices(new Integer[0]);\n }\n```\n\nThe problem is that with a new choice the colors of the CheckBox no longer match their state (see attached screenshot). Instead, the colors of the previous selection are displayed. If you scroll a CheckBox out of view and in again, everything is like it should be.\n\n![screenshot_2015-07-04-19-03-51](https://cloud.githubusercontent.com/assets/9412633/8508836/43c761a4-2281-11e5-9d99-ba833ebfd5d2.png)\n"},{"labels":["enhancement"],"text":"Is there an alternative to `ProgressDialog.setProgressNumberFormat()` method in your library? (can't find it if there's one).\n\nhttp://developer.android.com/reference/android/app/ProgressDialog.html#setProgressNumberFormat(java.lang.String)\n"},{"labels":["enhancement"],"text":"Sorry for creating a new issue for that, but the previous issue I've reported as been marked as invalid, I can't reopen it, and as it has been closed, I'm not sure you read my comments after you've closed it.\n\nCan you read my last comments and look at it again please? https://github.com/afollestad/material-dialogs/issues/572\n\nI'm pretty sure it's not invalid. Maybe it's a feature you don't want to implement, but if it's the case, can you tell me? Because that's the missing feature preventing me to migrate to this library: for a file download, if network is unavailable, we should be able to put an horizontal seekbar dialog in indeterminate state (not with a spinner!), as we can with default Android APIs.\n\nThank you.\n"},{"labels":["enhancement"],"text":"Hi.\n\nI have a code that looks like:\n\n``` java\n.callback(new MaterialDialog.ButtonCallback() {\n                        @Override\n                        public void onPositive(MaterialDialog dialog) {\n                            doSomeStuff();\n                            ...\n                          }\n\n                        @Override\n                        public void onNegative(MaterialDialog dialog) {\n                            doSomeStuff();\n                            ...\n                        }\n\n                        @Override\n                        public void onNeutral(MaterialDialog dialog) {\n                            doSomeStuff();\n                            ...\n                        }\n                    }\n```\n\nAnd it's tedious to add the call to `doSomeStuff()` to each of this callbacks.\n\nIs there any way to do something as default? Something like:\n\n``` java\n.callback(new MaterialDialog.ButtonCallback() {\n                        @Override\n                        public void defaultCallback(MaterialDialog dialog) {\n                            doSomeStuff();\n                            ...\n                          }\n\n                        @Override\n                        public void onPositive(MaterialDialog dialog) {\n                            ...\n                          }\n\n                        @Override\n                        public void onNegative(MaterialDialog dialog) {\n                            ...\n                        }\n\n                        @Override\n                        public void onNeutral(MaterialDialog dialog) {\n                            ...\n                        }\n                    }\n```\n"},{"labels":["enhancement"],"text":"This is more like enhancement. Other than the 3 Material preferences, we should have `MaterialDialogPreference`, for users to override in place of `DialogPreference`.\n\nA simple example I tried that seems to work fine is \nhttps://gist.github.com/yukuku/99faed8f8bf48bb33294\n"},{"labels":["enhancement"],"text":"Original `setProgress` and `setMax` methods from the `android.widget.ProgressBar` handles being invoked from another thread than the UI thread.\n\n`MaterialDialogs.setProgress/setMaxProgress` should do the same no ?\n"},{"labels":["enhancement"],"text":"Hi,\nVery impressed with your work here, I'm looking for the ability to set maxLength for the text and/or tell the user how many characters left have to enter.\n\nPD: I've used a custom UI to do that, but it would be much better to implement using your library.\n\nBest Regards,\nWalter\n"},{"labels":["enhancement"],"text":"I've to set my typeface for every dialog that I show. It will be nice to have support for global typefaces in addition to the existing colour ones!\n"},{"labels":["enhancement"],"text":"MDTintHelper is no longer needed\n"},{"labels":["enhancement"],"text":"Some weeks ago, dialogs had a nice shadow as borders that gave the idea of elevation. However, now dialogs don't have shadows at all, and background outside dialog is not darkened. I'm using Xperia Z with Android 4.4.4\nYou can see in the screenshot that dialog background is exactly the same as activity background (the icons on the navigation bar are just from a Xperia theme).\nPS: open animation now looks worse (alpha instead of resize), but it follows Material Design guidelines...\n![screenshot_2015-04-18-19-46-51](https://cloud.githubusercontent.com/assets/2737599/7216577/7945faac-e604-11e4-9b18-d6186489903f.png)\n"},{"labels":["enhancement"],"text":"Is it possible to remove fonts from aar?\nIf for example I want to use default or my own font, it would be nice to save 300kb apk size.\n\nMaybe separate font and library in different aar's?\n"},{"labels":["enhancement"],"text":"Using the ProgressDialog on Android Lollipop with material design puts the percentage and the counter below the ProgressBar [1].\nUsing your excellent library puts them next to the ProgressBar [2].\nI like the percentage being on the right, but would like the values to be below the progress bar (closer to \"stock\" material design).\n\n[1] ![1](https://cloud.githubusercontent.com/assets/3263955/7134162/8ad2bf66-e29a-11e4-89ea-615c6710fff8.png)\n\n[2] ![2](https://cloud.githubusercontent.com/assets/3263955/7134161/8ad28eba-e29a-11e4-98d5-1f41969458a6.png)\n"},{"labels":["enhancement"],"text":"http://www.google.com/design/spec/components/dialogs.html\n"},{"labels":["enhancement"],"text":"Like design guidelines and 5.1 dialogs (though they didn't add enough padding so it looks weird).\n"},{"labels":["enhancement"],"text":""},{"labels":["enhancement"],"text":"The original Android 5.0/5.1 text content style is `TextAppearance.Material.Subhead`, which resolves to \n\n```\n    <item name=\"textSize\">@dimen/text_size_subhead_material</item>\n    <item name=\"fontFamily\">@string/font_family_subhead_material</item>\n    <item name=\"textColor\">?attr/textColorPrimary</item>\n```\n\nand the value of `text_size_subhead_material` is `16sp`. The MaterialDialogs look really huge on 320dp screen because it's using 18sp as the default text size. It should be 16sp if you want to follow the original dialogs.\n"},{"labels":["enhancement"],"text":"There is no way to control the list item's gravity, can you please add support for it?\n"},{"labels":["enhancement"],"text":"Is there a way that the single choice item list can auto-scroll to the initially selected item (in a large list where selected is part-way down)?\n"},{"labels":["enhancement"],"text":"When using `AlertDialogWrapper.Builder` and calling `alwaysCallMultiChoiceCallback`, `OnMultiChoiceClickListener.OnClick` will be only called the first time an item is checked. It won't be called on unchecking or re-checking items. Using `AlertDialog.Builder` it is called every time an item is checked or unchecked.\n"},{"labels":["enhancement"],"text":"You have put all the stuffs in one layout, thus make the inflation time too long\n"},{"labels":["enhancement"],"text":"Not exactly an issue, but a feature request: what about adding the ability for setting a maximum of checks on a MultiChoice dialog?\nI have a list of 5 options, but you can only check 2 of them.\nThanks!\n"},{"labels":["enhancement"],"text":"Stock EditTextPreference has a getText method which is missing in MaterialEditTextPreference\n"},{"labels":["enhancement"],"text":"Now we have MaterialListPreference for ListPreference.\nBut no substitution for MultiSelectListPreference.\n"},{"labels":["enhancement"],"text":"Hi,\nSince the new version 0.6.4.0,\nthe listview callback obtained with dialogZonas.getListView() doesn't work.\n\nIt was useful since I could use the Id of the cursor to perform updates.\n\nIt's possible add this parameter in the adapter's callback?\n\nThanks.\n"},{"labels":["enhancement"],"text":"Gingerbread shows an ugly sort of checkmark on ListPreferences, newer android version removed this image at all, you can get rid of it by adding this code in the MaterialListPreference constructors\n\n```\n    if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.GINGERBREAD_MR1)\n        setWidgetLayoutResource(0);\n```\n"},{"labels":["enhancement"],"text":"In AlertDialog.Builder, setAdapter has 2 params, the adapter and the item click listener. However, in AlertDialogWrapper.Builder, the setAdapter method only specifies the adapter. \n\nThis makes migrating from AlertDialog to MaterialDialog is not simple as replacing AlertDialog.Builder with AlertDialogWrapper.Builder.\n"},{"labels":["enhancement"],"text":"Is there anyway to modify the size of the icon in the dialog so that it scales regardless of the actual dimensions of the drawable (ie: 48x48 vs 96x96 vs 129x128)?\n"},{"labels":["enhancement"],"text":"http://imgur.com/PzU7JZX\n\nToo much space?\n"},{"labels":["enhancement"],"text":"In a regular `EditTextPreference`, you can have four properties which are displayed in different areas:\n\n```\n <EditTextPreference\n        android:key=\"key1\"\n        android:title=\"aaa\"\n        android:summary=\"bbb\"\n        android:dialogTitle=\"ccc\"\n        android:dialogMessage=\"ddd\"\n        android:defaultValue=\"lorem ipsum\"\n        />\n```\n\nSo the preference appears like so (`title`, `summary`)\n\n![image](https://cloud.githubusercontent.com/assets/746276/6379308/21d0b46e-bd29-11e4-90c1-2bc33a9ec85e.png)\n\nAnd on clicking the preference, the dialog appears like so (`dialogTitle`, `dialogMessage`)\n\n![image](https://cloud.githubusercontent.com/assets/746276/6379298/107b6a92-bd29-11e4-9b5f-17b47a97c39d.png)\n\nCurrently the MaterialEditTextPreference does not show `dialogMessage` property when the dialog opens.\n\n![image](https://cloud.githubusercontent.com/assets/746276/6379729/49161df4-bd2c-11e4-8d93-3c31efdf7df9.png)\n\nTHanks for all your work on this library, it has made life so much better. \n"},{"labels":["enhancement"],"text":"Hi there!\n\nNot sure if this is intended behaviour or not,\nbut if you set both `.content()` and `.itemsCallbackMultiChoice()` on your dialog,\nthe content will never be shown.\n\nI would expect it to be displayed above the multi-choice options.\n\nYour thoughts?\n"},{"labels":["enhancement"],"text":"It would be great to also have a ProgressDialog equivalent\n"},{"labels":["enhancement"],"text":"The material spec doesn't exactly specify that it shouldn't _not_ be end-aligned, and it would be a nice control to have if the three buttons' texts are generally short.\n"},{"labels":["enhancement"],"text":"I noticed in `TypefaceHelper` that it assumes that all passed in Typefaces follow the `fonts/<name>.ttf` scheme, but that's not always the case. We use `.otf`, so this breaks things for us. Could we have a little more flexibility with this?\n"},{"labels":["enhancement"],"text":"Due to bc3b3b3 (removal of hard-coded Roboto fonts), the action buttons no longer have the medium font.\nFix: use \"sans-serif-medium\" fontFamily on 5.0+ by default and bold style on <5.0 by default.\n\nSee `fonts.xml`  in `values` and `values-v21` folders in Cabinet (which I implemented): https://github.com/afollestad/cabinet/tree/master/app/src/main/res\n"},{"labels":["enhancement"],"text":"We're using [Calligraphy](https://github.com/chrisjenx/Calligraphy) to set a custom font globally in our application. However [MaterialDialog](https://github.com/afollestad/material-dialogs/blob/master/library/src/main/java/com/afollestad/materialdialogs/MaterialDialog.java#L97) sets the font hardcoded to Roboto when no found has been specified through the builder. We would like to not have to specify the custom font again just for MaterialDialog.\n\nMaterialDialog should not force the dialog to use the Roboto font. The typeface should only be explicitly set when a typeface has been specified through the builder.\n"},{"labels":["enhancement"],"text":"Dialog buttons (positive, negative, neutral) should be focusable because they don't respond to keyboard navigation (you can try it in emulator or by attaching bluetooth or usb keyboard to your device)\n"},{"labels":["enhancement"],"text":"Hello,\n\nThis picture is a good example:\n\n![Screenshot](http://www.androidheadlines.com/wp-content/uploads/2014/11/2014-11-02-16.45.40-e1414955592422.png)\n"},{"labels":["enhancement"],"text":"I just had a head scratching moment where I built a dialog, called `show()`, and it wasn't displayed.\n\nIt looks to be an issue with me calling this from a non-ui thread. As soon as I put the call in a runOnUiThread runnable, it worked. \n\nI'd expect either the app to crash or at least some sort of error logged indicating this. \n"},{"labels":["enhancement"],"text":"Right now, the dialog will fill the full screen regardless of whether or not it needs it. This is especially noticeable on tablets.\n\n![screenshot-2015-01-06_22 38 52 606](https://cloud.githubusercontent.com/assets/1361086/5641903/d1100b74-95f5-11e4-93a4-a9dde56a696c.png)\n![screenshot-2015-01-06_22 39 34 772](https://cloud.githubusercontent.com/assets/1361086/5641902/d1101600-95f5-11e4-99a3-2caf63cd3c56.png)\n"},{"labels":["enhancement"],"text":""},{"labels":["enhancement"],"text":""},{"labels":["enhancement"],"text":"A previous pull request was made for this, but it had to be undone due to too many issues.\n\n![one](https://cloud.githubusercontent.com/assets/1820165/5601174/437f2250-92b6-11e4-886f-8c1317f9d38f.png)\n\n![two](https://cloud.githubusercontent.com/assets/1820165/5601196/3e8a7dac-92b7-11e4-8271-25abff5517a9.png)\n\nI choose not to allow customization of the button and list selector for now because that causes many complications and shouldn't be necessary, since selectors should generally be neutral on Android 4.4 and above. This maintains easy ripple support on API 21, also. If you make the background color a dark color (like the one shown in the screenshots above): you should also apply the dark theme, so that list and button selectors use the lighter variation, and so that the title and list item text colors are lighter by default.\n"},{"labels":["enhancement"],"text":"Hi,\nIt'd be cool if we could align positive and negative buttons with some methods like what's shown below, to force them to be in a specific alignment:\n\n``` java\npositiveButtonGravity(int)\nnegativeButtonGravity(int)\n```\n"},{"labels":["enhancement"],"text":"Library on top, AlertDialog in lollipop on bottom\nThe ripple in the library goes into the padding, unlike the native implementation and what the design specs describe.\n\n![screenshot_2014-12-05-16-46-22](https://cloud.githubusercontent.com/assets/6379975/5326015/261d99aa-7cb6-11e4-9eea-59d94b66afe2.png)\n![screenshot_2014-12-05-16-47-20](https://cloud.githubusercontent.com/assets/6379975/5326016/261dcaec-7cb6-11e4-9305-e4152a1bb35a.png)\n"},{"labels":["enhancement"],"text":"I think it would be nice for the default dialog title text color to inherit the value of android:colorPrimary in the material theme kind of how the action button text color inherits colorAccent.\n\nSpeaking of which, my accent color is too light for the background color.  Google suggests a fallback accent color in this situation, is there a way I can apply this with global theming?\n"},{"labels":["enhancement"],"text":"Is it possible to use \"materialization\" of ProgressDialog with the library?\n"},{"labels":["enhancement"],"text":"If a single item list contains enough items (starting range around 15-20), the performance plummets severely while waiting for all the view inflations to finish.\n"},{"labels":["enhancement"],"text":"Hey,\nthanks for awesome library :) Do you think it would be possible to have some global theming? I would  really appreciate to set button colours globally. So I don't have to set them it every time.\n\nThanks :)\n"},{"labels":["enhancement"],"text":"This would be helpful, for example displaying a changelog which is a custom list view of dynamic elements (ie, the helpful changeloglib), or displaying complex custom views which themselves may have scrollviews and don't support nesting (ie, the lollipop datepicker).\n"}]