[{"labels":["api",null,null,null,null],"text":"when i use web clipper and it access \"http://127.0.0.1:41184/tags\"\r\nthe response is that\r\n{\"error\":\"Internal Server Error: Cannot read property 'length' of undefined: \\n\\nTypeError: Cannot read property 'length' of undefined\\n    at Api.<anonymous> (/Applications/Joplin.app/Contents/Resources/app.asar/lib/services/rest/Api.js:290:31)\\n    at Api.action_tags (/Applications/Joplin.app/Contents/Resources/app.asar/lib/services/rest/Api.js:312:29)\\n    at Api.route (/Applications/Joplin.app/Contents/Resources/app.asar/lib/services/rest/Api.js:110:42)\\n    at execRequest (/Applications/Joplin.app/Contents/Resources/app.asar/lib/ClipperServer.js:160:39)\\n    at Server.<anonymous> (/Applications/Joplin.app/Contents/Resources/app.asar/lib/ClipperServer.js:203:7)\\n    at Server.emit (events.js:210:5)\\n    at parserOnIncoming (_http_server.js:745:12)\\n    at HTTPParser.parserOnHeadersComplete (_http_common.js:115:17)\"}\r\nso i can't use the web clipper\r\n\r\njoplin version mac 1.0.229\r\nsystem version mac catalina 10.15.5\r\n\r\n"},{"labels":["api",null],"text":"Could it be possible to move the usage of the token from the query parameter to a HEADER like X_JOPLIN_TOKEN or something like that, which could be little be more secure and avoiding to be exposed by intermediaries ?\r\n "},{"labels":["api",null],"text":"Hi,\r\ncurrently when requesting resources for a given note id like follow\r\n```\r\ncurl -XGET http://localhost:41184/notes/f5f101e5d57c4df6b1afff256da80b74/resources?token=<token>\r\n```\r\ngives\r\n```\r\n{\"error\":\"Internal Server Error: Cannot read property 'body' of undefined\"}\r\n```\r\n"},{"labels":["api",null],"text":"Today, the API does not allow us to get the resources of a given note something like `/note/:id/resources` could be helpful. \r\n\r\nThe hidden reason is to use the `store` of the JS framework to keep the resource for the note and avoid to trigger a request for each resource :)\r\n"},{"labels":["api",null,null],"text":"this\r\n``` \r\ncurl GET http://127.0.0.1:41184/folders/<noteid>/notes\r\n```\r\ndoes not return the body anymore :(\r\n\r\nsame with \r\n``` \r\ncurl GET http://127.0.0.1:41184/notes?token=xxx\r\n``` "},{"labels":["api",null,null],"text":"https://discourse.joplinapp.org/t/api-improvment-tags-of-note/2944"},{"labels":["api",null,null],"text":"https://discourse.joplinapp.org/t/api-improvment-nb-notes-per-folder-tag/2820/12"},{"labels":["api",null],"text":"### Operating system\r\n\r\n<!-- Please only leave those relevant to your request -->\r\n\r\n- macOS\r\n\r\n### Application\r\n\r\n<!-- Please only leave those relevant to your request -->\r\n\r\n- Desktop\r\n\r\n---\r\n\r\nI've just noticed that the API command to delete resources does not delete the resources from the sync target. Only the meta data files are deleted from the sync target.\r\n\r\nThis is the command I used:\r\n\r\n```\r\ncurl -X DELETE http://localhost:41184/resources/ecfef68586324b6a88149f651af58068?token=TOKEN\r\n```\r\n\r\nAfter syncing `ecfef68586324b6a88149f651af58068.md` is removed from the sync target, but `.resources/ecfef68586324b6a88149f651af58068` still remains."},{"labels":["api",null],"text":"related to this thread https://discourse.joplinapp.org/t/importing-notes-from-tiddlywiki-api-feature-request-for-timestamps/1952\r\n\r\nDates are ignored when creating note from importing them from something else."},{"labels":["api",null],"text":""},{"labels":["api",null,null],"text":""},{"labels":["api",null],"text":"https://discourse.joplin.cozic.net/t/api-error-500/1480"},{"labels":["api",null],"text":"note creation \r\n```\r\ncurl -H 'Content-Type: application/json' --data '{\"title\":\"my note\", \"body\":\"some markdown\", \"tags\": \"tags1,tag2,tag3\"}' http://127.0.0.1:41184/notes\r\n{\"title\":\"my note\",\"body\":\"some markdown\",\"parent_id\":\"0882e5b783b94f61baa428273147fbbf\",\"source\":\"joplin-desktop\",\"source_application\":\"net.cozic.joplin-desktop\",\"id\":\"a315850d76b54bd5960e05042f976eb7\"\r\n```\r\nupdating the tags looks fine \r\n```\r\n curl -X PUT -H 'Content-Type: application/json' --data '{\"title\":\"my note\", \"body\":\"some markdown\", \"tags\": \"tags1,tag2,tag3, tag4\"}' http://127.0.0.1:41184/notes/a315850d76b54bd5960e05042f976eb7/?token=my_long_token\r\n{\"id\":\"a315850d76b54bd5960e05042f976eb7\",\"parent_id\":\"0882e5b783b94f61baa428273147fbbf\",\"title\":\"my note\",\"body\":\"some markdown\",\"created_time\":1541081002837,\"updated_time\":1541081146841,\"is_conflict\":0,\"latitude\":\"0.00000000\",\"longitude\":\"0.00000000\",\"altitude\":\"0.0000\",\"author\":\"\",\"source_url\":\"\",\"is_todo\":0,\"todo_due\":0,\"todo_completed\":0,\"source\":\"joplin-desktop\",\"source_application\":\"net.cozic.joplin-desktop\",\"application_data\":\"\",\"order\":0,\"user_created_time\":1541081002837,\"user_updated_time\":1541081146841,\"encryption_cipher_text\":\"\",\"encryption_applied\":0,\"type_\":1,\"tags\":\"tags1,tag2,tag3, tag4\"}\r\n```\r\nbut if I look at the database \r\n```\r\nsqlite> select tags.title from note_tags,tags where note_id = 'a315850d76b54bd5960e05042f976eb7' and tag_id = tags.id;\r\ntags1\r\ntag2\r\ntag3\r\n```\r\nno `tag4`\r\n"},{"labels":["api",null,null],"text":"### Request\r\n\r\nDescribe REST API using [OpenAPI Specification](https://github.com/OAI/OpenAPI-Specification).\r\n\r\n### Why?\r\n\r\n- One source of truth for REST API\r\n- API documentation is generated from the specification. \r\n- Code can be generated to help interface with or implement the API.\r\n\r\n### How?\r\n\r\nUtilize the following [tools](https://swagger.io/tools/):\r\n\r\n- [swagger-inspector](https://swagger.io/tools/swagger-inspector/) - Gives you a good starting point from the existing implementation.\r\n- [swaggerhub](https://swagger.io/tools/swaggerhub/) - suite of tools focused on editing specification, \r\n visualizing results, and generating code.\r\n\r\n"},{"labels":["api",null],"text":"Hi,\r\n\r\nToday the API works great with existing endpoints, but search endpoint is missing I think.\r\nmaybe that will be the moment to think about searching keyword to facilitate this point ?\r\nfor example : [evernote query search](https://help.evernote.com/hc/en-us/articles/208313828-How-to-use-Evernote-s-advanced-search-syntax)\r\n"}]