[{"labels":["documentation"],"text":"**Bug description**\n\nIn the PeerAuthentication (and possibly other pages), the doc is broken for Workload Selector: https://istio.io/latest/docs/reference/config/security/peer_authentication/#PeerAuthentication\n\n\n[ ] Configuration Infrastructure\n[x] Docs\n[ ] Installation\n[ ] Networking\n[ ] Performance and Scalability\n[ ] Policies and Telemetry\n[ ] Security\n[ ] Test and Release\n[ ] User Experience\n\n**Expected behavior**\n\nThe link should go to an actual HTML page which exists. :-)\n\n**Steps to reproduce the bug**\n\n1. Go to https://istio.io/latest/docs/reference/config/security/peer_authentication/#PeerAuthentication\n2. Scroll down and try finding the link for `WorkloadSelector`\n3. Click that link\n4. Shows 404 Page\n\n**Version (include the output of `istioctl version --remote` and `kubectl version`)**\n\nIt's a docs issue, not required.\n\n**How was Istio installed?**\n\nIt's a docs issue, not required.\n\n**Environment where bug was observed (cloud vendor, OS, etc)**\n\nIt's a docs issue, not required."},{"labels":[null,"documentation",null],"text":"\n**Describe the feature request**\n`ObjectMeta` field to be added to `AuthorizationPolicy` struct [here](https://github.com/istio/api/blob/master/security/v1beta1/authorization.pb.go#L229).\nSimilar to [Istio Go Client](https://github.com/istio/client-go/blob/master/pkg/apis/security/v1beta1/types.gen.go#L73)\n\nThis will ensure the api is consistent with the rest of the documentation. \n\n**Describe alternatives you've considered**\nWith objectMeta field missing, early validation of yaml in the pipeline fails. \n\n\n[x] Configuration Infrastructure\n[x] Docs\n[ ] Installation\n[ ] Networking\n[ ] Performance and Scalability\n[ ] Policies and Telemetry\n[ ] Security\n[ ] Test and Release\n[ ] User Experience\n\n**Additional context**"},{"labels":[null,"documentation",null,null],"text":"**Describe the feature request**\n\nThe documentation on [RBAC](https://istio.io/docs/reference/config/security/istio.rbac.v1alpha1/) should be extended, to explain the impact of the namespace used on `ServiceRole` and `ServiceRoleBinding` objects. It took me quite a while to realize that these objects should be placed in the same namespace as the services I'm trying to access.\n\nAlso, it is unclear whether it is possible to create an RBAC rule that targets multiple, or all namespaces.\n\n**Describe alternatives you've considered**\n\nNone.\n\n\n[ ] Configuration Infrastructure\n[x] Docs\n[ ] Installation\n[ ] Networking\n[ ] Performance and Scalability\n[ ] Policies and Telemetry\n[ ] Security\n[ ] Test and Release\n[ ] User Experience\n\n**Additional context**\n\nHere's a concrete example of what I've been working on:\n\nI have services in namespace `foo` which should be scraped by Prometheus, which is running in a different namespace, `telemetry`. Initially, I'd set up the RBAC objects in the `telemetry` namespace, but that didn't work. Finally, I ended up with the following, which seems to work:\n\n```yaml\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ServiceRole\nmetadata:\n  name: metrics-scraper\n  namespace: foo\nspec:\n  rules:\n  - services: [ \"*\" ]\n    methods: [ \"GET\" ]\n    paths: [ \"/metrics\" ]\n---\napiVersion: rbac.istio.io/v1alpha1\nkind: ServiceRoleBinding\nmetadata:\n  annotations:\n  name: prometheus-scrape-metrics\n  namespace: foo\nspec:\n  subjects:\n  - user: '*'\n  roleRef:\n    kind: ServiceRole\n    name: metrics-scraper\n```\n\nThe documentation didn't really make it clear that the namespace had to be the same as the application I'm trying to access - I had to figure that out myself through experimentation.\n\nAdditionally, it's not clear if there's a way to make a more general rule that will apply to all namespaces, or if I have to create rules for all other namespaces I also want to scrape."},{"labels":[null,"documentation"],"text":"**Bug description**\n\n(originally reported to me by @jcomputer)\n\nField `gateways` in HTTPMatchRequest is not documented:\n\nhttps://github.com/istio/api/blob/master/networking/v1alpha3/virtual_service.proto#L711\n\nI understand fields that are undocumented are considered experimental. However the public docs use the 'gateways' field under HTTPMatchRequest in an example:\n\nhttps://istio.io/docs/tasks/traffic-management/egress/egress-gateway/#egress-gateway-for-http-traffic\n\nEither we should label the usage of this field as experimental (which isn't currently mentioned on the docs page) or we should document the field.\n\n\n[ ] Configuration Infrastructure\n[X] Docs\n[ ] Installation\n[ ] Networking\n[ ] Performance and Scalability\n[ ] Policies and Telemetry\n[ ] Security\n[ ] Test and Release\n[ ] User Experience"},{"labels":[null,"documentation",null],"text":"\n**Bug description**\nThe deny-all example authorization policy as described on this page does not work: https://istio.io/docs/reference/config/security/authorization-policy/\n\nWhen applying it, the following error is thrown:\n\n> The AuthorizationPolicy \"deny-all\" is invalid: []: Invalid value: map[string]interface {}{\"apiVersion\":\"security.istio.io/v1beta1\", \"kind\":\"AuthorizationPolicy\", \"metadata\":map[string]interface {}{\"annotations\":map[string]interface {}{\"kubectl.kubernetes.io/last-applied-configuration\":\"{\"apiVersion\":\"security.istio.io/v1beta1\",\"kind\":\"AuthorizationPolicy\",\"metadata\":{\"annotations\":{},\"name\":\"deny-all\",\"namespace\":\"rkl\"},\"spec\":null}\\n\"}, \"creationTimestamp\":\"2019-11-28T13:10:18Z\", \"generation\":1, \"name\":\"deny-all\", \"namespace\":\"foo\", \"uid\":\"6cd403b8-11e0-11ea-b8c3-42010a210004\"}, \"spec\":interface {}(nil)}: validation failure list:\n    spec in body must be of type object: \"null\"\n\n\n\n[ ] Configuration Infrastructure\n[X] Docs\n[ ] Installation\n[ ] Networking\n[ ] Performance and Scalability\n[X] Policies and Telemetry\n[ ] Security\n[ ] Test and Release\n[ ] User Experience\n\n**Expected behavior**\nExamples should work\n\n**Steps to reproduce the bug**\nCopy/paste example from documentation and try to apply it.\n\n**Version (include the output of `istioctl version --remote` and `kubectl version`)**\n1.4.0\n\n**How was Istio installed?**\nHelm\n\n**Environment where bug was observed (cloud vendor, OS, etc)**\nGKE 1.14"},{"labels":[null,"documentation",null],"text":"\r\n\r\n**Describe the feature request**\r\nExclude some paths in rules of ServiceRole. Maybe this is not a feature request because it has been implemented according to code implementation. I want to know if this feature(not_path field) is stable and why not_path field should be hidden in istio docs?\r\n\r\n**Describe alternatives you've considered**\r\n\r\n\r\n**Affected product area (please put an X in all that apply)**\r\n\r\n[ ] Configuration Infrastructure\r\n[X] Docs\r\n[ ] Installation\r\n[ ] Networking\r\n[ ] Performance and Scalability\r\n[ ] Policies and Telemetry\r\n[X] Security\r\n[ ] Test and Release\r\n[ ] User Experience\r\n\r\n**Additional context**\r\n"},{"labels":[null,"documentation"],"text":"(NOTE: This is used to report product bugs:\r\n  To report a security vulnerability, please visit <https://istio.io/about/security-vulnerabilities/>\r\n  To ask questions about how to use Istio, please visit <https://discuss.istio.io>\r\n)\r\n\r\n**Bug description**\r\nIn the markdown grammar, `*` is treated as italic marker, so that `*`s are displayed correctly, which is misleading to me and many other istio users. I thought that the same string could be matched as a prefix and suffix at the same time.üòÖ After reading the code, I found that the document was written incorrectly.\r\n\r\n**Affected product area (please put an X in all that apply)**\r\n\r\n[ ] Configuration Infrastructure\r\n[X ] Docs\r\n[ ] Installation\r\n[ ] Networking\r\n[ ] Performance and Scalability\r\n[ ] Policies and Telemetry\r\n[ ] Security\r\n[ ] Test and Release\r\n[ ] User Experience\r\n\r\n**Expected behavior**\r\nAnd actual content should be:\r\n\r\nRequired. A list of service names. Exact match, prefix match, and suffix match are supported for service names. For example, the service name ‚Äúbookstore.mtv.cluster.local‚Äù matches ‚Äúbookstore.mtv.cluster.local‚Äù (exact match), or ‚Äúbookstore\\*‚Äù (prefix match), or ‚Äú\\*.mtv.cluster.local‚Äù (suffix match). If set to [‚Äú\\*‚Äù], it refers to all services in the namespace.\r\n\r\n**Steps to reproduce the bug**\r\nsee:\r\nhttps://istio.io/docs/reference/config/authorization/istio.rbac.v1alpha1/#AccessRule\r\n\r\n**Version (include the output of `istioctl version --remote` and `kubectl version`)**\r\n1.1.x\r\n\r\n**How was Istio installed?**\r\n/\r\n\r\n**Environment where bug was observed (cloud vendor, OS, etc)**\r\n/\r\n\r\nAdditionally, please consider attaching a [cluster state archive](http://istio.io/help/bugs/#generating-a-cluster-state-archive) by attaching\r\nthe dump file to this issue.\r\n\r\n"},{"labels":[null,"documentation"],"text":"https://istio.io/docs/reference/config/networking/v1alpha3/destination-rule/#OutlierDetection\r\n\r\nUnder consecutiveErrors: 502, 503, and 504s only, 500 codes will not trigger the outlier detection\r\n\r\nBut in the docs above:\r\n\r\nFor HTTP services, hosts that continually return 5xx errors for API calls are ejected from the pool for a pre-defined period of time.\r\n\r\nSo sounds like the docs are incorrect here. It will only work for 502/503/504 from looking at the code and https://github.com/istio/api/pull/617\r\n"},{"labels":[null,"documentation"],"text":"_sidecar.proto_ says \"The `namespace` can also be set to `*` to select a particular service from any available namespace\".\r\n\r\nhttps://github.com/istio/istio/blob/master/pilot/pkg/model/validation.go#L650 says the namespace can be *, or ., or ~.\r\n\r\nWe should either document the '.' and '~' cases as official or note that they are experimental."},{"labels":["documentation"],"text":"An example Sidecar CRD in _networking/v1alpha3/sidecar.proto_ is invalid.\r\n\r\nIt's the example that starts at line 77.  It is generated into https://preliminary.istio.io/docs/reference/config/networking/v1alpha3/sidecar/ .  If I take that example and use _istioctl validate -f_ the error response is\r\n\r\n```\r\n* error validating resource (networking.istio.io/v1alpha3, Kind=Sidecar Name=default Namespace=): sidecar: the egress listener with empty port should be the last listener in the list\r\n```\r\n\r\nThe same error appears in 1.1 RC 3 if I do\r\n```\r\nkubectl create ns prod-us1\r\nkubectl apply -f /tmp/sidecar.yaml\r\n```\r\n\r\nPerhaps there is an extra `-` dash in the YaML?"},{"labels":["documentation",null],"text":"Many proto types and fields in istio/api are undocumented and result in blank spots in the published docs for our product. These all need to be filed in.\r\n\r\nYou can see the undocumented fields by doing \"make clean\" followed by \"make\".\r\n\r\nOnce all undocumented fields are documented, we can enable a checkin gate to prevent new undocumented stuff from being introduced.\r\n"},{"labels":["documentation",null],"text":"istio/api now has a spell checker and has many spelling errors. The errors need to be fixed, or the words need to be added to the custom dictionary.\r\n\r\nOnce the errors are fixed, we should enable spell checking as a checkin gate.\r\n\r\n"},{"labels":[null,"documentation"],"text":"Document MCP protocol semantics. MCP is conceptually aligned with [xDS](https://github.com/envoyproxy/data-plane-api/blob/master/XDS_PROTOCOL.md), but behavior may different slightly as the protocols evolve. "},{"labels":[null,"documentation"],"text":"- gRPC return status\r\n- context reporter\r\n- anything else that gets added to the end of the dictionary..."},{"labels":[null,"documentation"],"text":"no comment found for istio.mixer.v1\r\nmixer/v1/attributes.proto:76:6: no comment found for string_value\r\nmixer/v1/attributes.proto:77:6: no comment found for int64_value\r\nmixer/v1/attributes.proto:78:6: no comment found for double_value\r\nmixer/v1/attributes.proto:79:6: no comment found for bool_value\r\nmixer/v1/attributes.proto:80:6: no comment found for bytes_value\r\nmixer/v1/attributes.proto:81:6: no comment found for timestamp_value\r\nmixer/v1/attributes.proto:82:6: no comment found for duration_value\r\nmixer/v1/attributes.proto:83:6: no comment found for string_map_value\r\nmixer/v1/attributes.proto:89:4: no comment found for entries\r\nmixer/v1/check.proto:59:0: no comment found for CheckResponse\r\nmixer/v1/check.proto:60:2: no comment found for PreconditionResult\r\nmixer/v1/check.proto:84:2: no comment found for QuotaResult\r\nmixer/v1/attributes.proto:109:2: no comment found for int64s\r\nmixer/v1/attributes.proto:110:2: no comment found for doubles\r\nmixer/v1/attributes.proto:111:2: no comment found for bools\r\nmixer/v1/attributes.proto:112:2: no comment found for timestamps\r\nmixer/v1/attributes.proto:113:2: no comment found for durations\r\nmixer/v1/attributes.proto:114:2: no comment found for bytes\r\nmixer/v1/attributes.proto:115:2: no comment found for string_maps\r\nmixer/v1/check.proto:115:2: no comment found for AttributeMatch\r\nmixer/v1/report.proto:60:0: no comment found for ReportResponse\r\nmixer/v1/attributes.proto:121:2: no comment found for entries\r\n"},{"labels":[null,"documentation"],"text":"1) Why is the `mode` field in `TLSSettings` REQUIRED?\r\n  ```\r\n  // REQUIRED: Indicates whether connections to this port should be secured\r\n  // using TLS. The value of this field determines how TLS is enforced.\r\n  TLSmode mode = 1;\r\n  ```\r\n  Since the `TLSSettings` themselves are NOT required, there must be a default mode (DISABLE) when the tls settings are not provided at all.\r\n\r\n2) Why even is there a DISABLE value for `mode`? Seems that the only reason one needs to provide a TLSSettings field is to configure tls (SIMPLE or MUTUAL), the other fields in TLSSettings are only applicable for those cases. So, \"no tls settings == disable\" seems all that's needed."}]