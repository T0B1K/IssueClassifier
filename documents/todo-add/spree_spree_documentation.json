[{"labels":[null,"documentation",null,null],"text":"I'm not sure if this can be considered a bug or it is intentional:\r\n\r\nWhenever I send a request to the checkout update endpoint, spree generates a new address entry although the address did not change at all. This behaviour is not as described or expected in https://guides.spreecommerce.org/api/v2/storefront#operation/Update%20Checkout (to be fair: no behaviour is described for this).\r\n\r\nI think it would be good to check if the address attributes for bill and / or ship are exactly the same / unchanged even if included in the request and do not create a new address entry. Also maybe it makes sense to define what parameters should trigger a \"new\" address entry and what parameters just update the existing one. My main concern is, that the database is bloating a lot with this and the user also has a lot of duplicate addresses in his address book this way.\r\n\r\nHappy to hear your thoughts and maybe we convert this into an issue / bug if it was not intentional."},{"labels":["documentation",null],"text":"<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Context\r\n<!--- Provide a more detailed introduction to the issue itself -->\r\n<!--- How has this issue affected you? What were you trying to accomplish? -->\r\n\r\nWhile browsing the Getting Started documentation, one is invited to discover the internals of Spree, but the provided link is not worknig.  \r\n\r\n## Expected Behavior\r\n<!--- Tell us what should happen -->\r\nGetting the documentation to learn more about Spree internals\r\n\r\n## Actual Behavior\r\n<!--- Tell us what happens instead -->\r\n404 Page couldn't be found\r\n\r\n## Possible Fix\r\n<!--- Not obligatory, but suggest a fix or reason for the issue -->\r\nPoint to the correct page or remove the hint.\r\n\r\n## Steps to Reproduce\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this issue include code to reproduce, if relevant -->\r\n1. Go at https://guides.spreecommerce.org/developer/tutorials/getting_started_tutorial.html#wrapping-up \r\n2. click Core section.\r\n\r\n## Your Environment\r\n\r\nNot relevant for this issue."},{"labels":["documentation",null],"text":"<!--- Provide a general summary of the issue in the Title above -->\r\n\r\nAfter upgrading to spree4.0.0.beta from spree3.6,   executing `rails db:migrate:reset` will result in `uninitialized constant ChangeCollationForSpreeTagNames::ActsAsTaggableOn`\r\n\r\nThis behavior may not be a bug because it only runs in the development|test environment.\r\n\r\nHowever, some developers may see it, so I report this issue.\r\n\r\nMaybe  https://github.com/spree/spree/pull/9491 related.\r\n\r\n## Context\r\n\r\n\r\nI often execute ` RAILS_ENV=test rails db:environment:set db:migrate:reset`,  to reset test DB.\r\n\r\n\r\n\r\n<!--- Provide a more detailed introduction to the issue itself -->\r\n<!--- How has this issue affected you? What were you trying to accomplish? -->\r\n\r\n## Expected Behavior\r\n\r\nMigration is completed with no errors.\r\n\r\n## Actual Behavior\r\n\r\nMigration is failed.\r\n\r\n```\r\nrails aborted!\r\nStandardError: An error has occurred, all later migrations canceled:\r\n\r\nuninitialized constant ChangeCollationForSpreeTagNames::ActsAsTaggableOn\r\n```\r\n\r\n\r\n\r\n## Possible Fix\r\n<!--- Not obligatory, but suggest a fix or reason for the issue -->\r\n\r\nIf you have a migration file like below:\r\n\r\n```ruby\r\n# This migration comes from spree (originally 20160511072249)\r\n# This migration is added to circumvent issue #623 and have special characters\r\n# work properly\r\nclass ChangeCollationForSpreeTagNames < ActiveRecord::Migration[4.2]\r\n  def up\r\n    if ActsAsTaggableOn::Utils.using_mysql?\r\n      execute(\"ALTER TABLE spree_tags MODIFY name varchar(255) CHARACTER SET utf8 COLLATE utf8_bin;\")\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nBecause acts_as_taggable_on gem is no longer installed, you might update the migration file.\r\n\r\nfor example;\r\n\r\n```diff\r\n-   if ActsAsTaggableOn::Utils.using_mysql?\r\n+   if defined?(ActsAsTaggableOn) && ActsAsTaggableOn::Utils.using_mysql?\r\n```\r\n\r\n\r\n\r\n\r\n## Steps to Reproduce\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this issue include code to reproduce, if relevant -->\r\n\r\nHow to reproduce:\r\n\r\n1. (I have spree3.6 app)\r\n2. Upgrade to spree4.0.0beta\r\n    * update `Gemfile`\r\n3. `$ bundle update` (with some args)\r\n4. `$ bin/rails railties:install:migrations RAILS_ENV=test`\r\n5. `$ bin/rails db:environment:set db:migrate:reset RAILS_ENV=test`\r\n    * error occured\r\n\r\n<details><summary>here is backtrace:</summary>\r\n\r\n\r\n```\r\n(...snip...)\r\n== 20190214113549 ActsAsTaggableOnSpreeMigration: migrating ===================\r\n-- create_table(:spree_tags, {:options=>\"ENGINE=InnoDB\", :id=>:integer})\r\n   -> 0.0081s\r\n-- create_table(:spree_taggings, {:options=>\"ENGINE=InnoDB\", :id=>:integer})\r\n   -> 0.0083s\r\n-- add_index(:spree_tags, :name, {:unique=>true})\r\n   -> 0.0090s\r\n-- add_index(:spree_taggings, [:tag_id, :taggable_id, :taggable_type, :context, :tagger_id, :tagger_type], {:unique=>true, :name=>\"spree_taggings_idx\"})\r\n   -> 0.0118s\r\n== 20190214113549 ActsAsTaggableOnSpreeMigration: migrated (0.0374s) ==========\r\n\r\n== 20190214113550 ChangeCollationForSpreeTagNames: migrating ==================\r\nrails aborted!\r\nStandardError: An error has occurred, all later migrations canceled:\r\n\r\nuninitialized constant ChangeCollationForSpreeTagNames::ActsAsTaggableOn\r\nDid you mean?  ActsAsTaggableOnSpreeMigration\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/db/migrate/20190214113550_change_collation_for_spree_tag_names.spree.rb:6:in `up'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/migration.rb:831:in `exec_migration'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/migration.rb:812:in `block (2 levels) in migrate'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/migration.rb:811:in `block in migrate'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/connection_adapters/abstract/connection_pool.rb:465:in `with_connection'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/migration.rb:810:in `migrate'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/migration.rb:1001:in `migrate'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/migration.rb:1311:in `block in execute_migration_in_transaction'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/migration.rb:1364:in `ddl_transaction'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/migration.rb:1310:in `execute_migration_in_transaction'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/migration.rb:1282:in `block in migrate_without_lock'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/migration.rb:1281:in `each'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/migration.rb:1281:in `migrate_without_lock'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/migration.rb:1229:in `block in migrate'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/migration.rb:1382:in `with_advisory_lock'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/migration.rb:1229:in `migrate'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/migration.rb:1061:in `up'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/migration.rb:1036:in `migrate'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/tasks/database_tasks.rb:238:in `migrate'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/railties/databases.rake:85:in `block (3 levels) in <top (required)>'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/railties/databases.rake:83:in `each'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activerecord-6.0.0/lib/active_record/railties/databases.rake:83:in `block (2 levels) in <top (required)>'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/railties-6.0.0/lib/rails/commands/rake/rake_command.rb:23:in `block in perform'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/railties-6.0.0/lib/rails/commands/rake/rake_command.rb:20:in `perform'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/railties-6.0.0/lib/rails/command.rb:48:in `invoke'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/railties-6.0.0/lib/rails/commands.rb:18:in `<top (required)>'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:22:in `require'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:22:in `block in require_with_bootsnap_lfi'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/loaded_features_index.rb:92:in `register'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:21:in `require_with_bootsnap_lfi'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `require'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0/lib/active_support/dependencies.rb:325:in `block in require'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0/lib/active_support/dependencies.rb:291:in `load_dependency'\r\n/Users/hoshino/go/src/github.com/hoshinotsuyoshi/shop/vendor/bundle/ruby/2.5.0/gems/activesupport-6.0.0/lib/active_support/dependencies.rb:325:in `require'\r\nbin/rails:4:in `<main>'\r\n\r\nCaused by:\r\nNameError: uninitialized constant ChangeCollationForSpreeTagNames::ActsAsTaggableOn\r\nDid you mean?  ActsAsTaggableOnSpreeMigration\r\n(...snip...)\r\n\r\n```\r\n\r\n\r\n\r\n</details>\r\n\r\n## Your Environment\r\n\r\n<!--- Include as many relevant details about the environment you experienced the issue in -->\r\n\r\n* Version used: `4.0.0.beta`\r\n* Gemfile and Gemfile.lock as text in a Gist: https://gist.github.com/hoshinotsuyoshi/660d0313dc4c1cc9fc3f37aec3f0a7a1\r\n\r\n\r\n\r\n\r\n<!--- Please remember to format code using triple backticks (`)\r\n\t  so that it is neatly formatted when the issue is posted. -->\r\n\r\n<!--- In 99% of cases, this information is enough to determine the cause and\r\n\t  solution to the problem that is being described.\r\n\r\n\t  Any issue that is open for 14 days without actionable information or\r\n\t  activity will be marked as \"stalled\" and then closed. Stalled issues\r\n\t  can be re-opened if the information requested is provided. -->\r\n\r\n-----\r\n\r\nThank you !"},{"labels":[null,"documentation"],"text":"I want to create a new resource vendor. \r\nWhat are steps should I follow to add vendor controller, routes, Serializer etc?\r\n"},{"labels":["documentation"],"text":"This is not really a bug with Spree, more of an issue with image caching and using a CDN for images served through Rails 5.2 Active Storage, but I figured it might be useful to have a documented solution on this issue for other Spree users.\r\n\r\n## Issue\r\nActive Storage is simple to set up and get working, but offers no out of the box solution for serving your public facing images through a content delivery network or browser caching, with images having a signed link that expires after 5 minutes, this is great for secure files and download paid for content links, but not ideal for real world usage when serving website product images.\r\n\r\n## Solution\r\nThis solution uses CloudFlare for the CDN and caching.\r\n\r\n## Work Around\r\nWith Spree using active_storage/representations to display images you can simply monkey patch the following file in Rails 5.2.1:\r\n```rails-5.2.1/activestorage/app/controllers/active_storage/representations_controller.rb```\r\n\r\nWith the following code\r\n\r\n```\r\n# frozen_string_literal: true\r\n\r\n# Take a signed permanent reference for a blob representation and turn it into an expiring service URL for download.\r\n# Note: These URLs are publicly accessible. If you need to enforce access protection beyond the\r\n# security-through-obscurity factor of the signed blob and variation reference, you'll need to implement your own\r\n# authenticated redirection controller.\r\nclass ActiveStorage::RepresentationsController < ActiveStorage::BaseController\r\n  include ActiveStorage::SetBlob\r\n\r\n  def show\r\n    expires_in 5.year, public: true\r\n    variant = @blob.representation(params[:variation_key]).processed\r\n    send_data @blob.service.download(variant.key),\r\n              type: @blob.content_type || DEFAULT_SEND_FILE_TYPE,\r\n              disposition: 'inline'\r\n  end\r\nend\r\n```\r\n\r\nThis will then give you Active Storage images served with a public accessible file with a 5 year expire date, if you are running your new Spree app through CloudFlare you can now change your active_storage/* page rule from bypass cache to:\r\n\r\n<img width=\"799\" alt=\"cf\" src=\"https://user-images.githubusercontent.com/1240766/46920404-a2c3c700-cfe5-11e8-84c7-2b569fa59f98.png\">\r\n\r\nAnd that should do it, your files will be served through the CloudFlare CDN with browser caching.\r\n\r\nPlease be aware that this fix may be outdated as Rails updates past version 5.2.1"}]