[{"labels":["enhancement"],"text":"We can safely increase range to `2*`"},{"labels":["enhancement",null],"text":"**Is your feature request related to a problem? Please describe.**\r\nTests take a long time to complete\r\n\r\n**Describe the solution you'd like**\r\nI would like to check the PR code, and if it only touches a certain file(s) then we will only run the tests for those files. \r\n\r\n## Possible Solution\r\n1. Pass PR ID by environment variable to docker testing container\r\n2. Write new testing script to call github API and get files changed (`npm run intelligent-test`)\r\n    - https://developer.github.com/v3/pulls/#list-pull-requests-files\r\n3. Map to testing files for changed files\r\n4. Run this script \"mocha $1 --exit --timeout 60000\" passing in multiple tests as one parameter separated by space\r\n\r\n"},{"labels":["enhancement"],"text":"We will have a cloud function periodically checking the live API to see if data is out of date. In the event it is, we will send a message in a discord channel dedicated to reporting this.\r\nThis will in the end be hosted serverless by Greymatter on an AWS Lambda function cron job.\r\nPR#: #849 "},{"labels":["enhancement",null,null],"text":"https://disease.sh/v3/covid-19/nyt/counties endpoint takes a very long time to load, and while testing, sometimes causes timeouts. Only returning the last 15-30 days (will need to experiment with what is quicker) by default will be much better performance wise than returning the full data set. This will also speed up testing, while not sacrificing testing data correctness. \r\nWe also have a `lastDays` param for the historical endpoint, so the logic can be copied. "},{"labels":["enhancement",null],"text":"Instead of parsing huge JSON files with time table data and then replacing the whole Redis key/val pair (NYT/JHU), we can simply get the last row and append it to the Redis value. This is more optimal, but not required. "},{"labels":["enhancement"],"text":"Whenever an error is returned from a scraper, instead of returning an error client side, we should use the last valid scraped values from the persistent Redis cache hosted in prod. The logic should be like:\r\n```md\r\nscrape data\r\nif data valid && no error\r\n  update data in Redis\r\nelse\r\n  keep current value in Redis\r\n```\r\nThe main issue here is how we handle errors in gov scrapers, but the every scraping process should be standardized to use one function.\r\nThis will require writing middle-ware for all scrapers that will be called in a catch block"},{"labels":["enhancement"],"text":"**Is your feature request related to a problem? Please describe.**\r\nNo\r\n\r\n**Describe the solution you'd like**\r\n- An endpoint for Therapeutics data based on the chart on this page: https://www.raps.org/news-and-articles/news-articles/2020/3/covid-19-therapeutics-tracker\r\n- a csv with the full chart's data is available by hitting this URL: https://www.raps.org/RAPS/media/news-images/data/20200807-tx-tracker-chart-Craven.csv (~65 kb)\r\n\r\n**Additional context**\r\n- This is per request by a community member.\r\n- Have to keep an eye on that csv URL for a few days to make sure that date doesn't change. If it does then maybe the page can just be scraped instead, but the table data seems to be loading dynamically.\r\n"},{"labels":["enhancement"],"text":"**Is your feature request related to a problem? Please describe.**\r\nNo.\r\n\r\n**Describe the solution you'd like**\r\nAdd data from the Google mobility reports (COVID-19). \r\n\r\n**Additional context**\r\nThe API has the mobility information from Apple, this feature is for the Google reports.\r\nThe official Google reports are here: https://www.google.com/covid19/mobility/\r\nAlso this CSV could be useful: https://github.com/owid/covid-19-data/tree/master/public/data/gmobility\r\n\r\n\r\n"},{"labels":["enhancement"],"text":"**Is your feature request related to a problem? Please describe.**\r\nThere is extra data to be added to our response.\r\n\r\n**Describe the solution you'd like**\r\nI will add additional information to the response for `getMexico` to account for current Active, Suspect, and Negative cases for National and State (if available).\r\n\r\n**Additional context**\r\n- Same source, just extra parsing\r\n- This is per request from a community member\r\n"},{"labels":["enhancement"],"text":"**Is your feature request related to a problem? Please describe.**\r\nNo\r\n\r\n**Describe the solution you'd like**\r\nA /gov endpoint for Mexico data\r\n\r\n**Additional context**\r\nSource: https://coronavirus.gob.mx/datos/\r\n- Gathering the cases/deaths for national and state totals requires making ~4 requests to their server with specific form-data. I can share a postman collection with the requests laid out.\r\n\r\nTerms of Service: https://www.gob.mx/salud/documentos/datos-abiertos-152127\r\n- this page states that this data source is open for free use, reuse, and redistribution.\r\n"},{"labels":["enhancement",null],"text":"**Is your feature request related to a problem? Please describe.**\r\nCurrently, we have an API endpoint that is from Worldometers that gets Covid-19 totals for a specific set of countries in which you can load specific countries in just adding query parameters such as multiple country names, iso2, iso3, or country IDs separated by commas which is like this `https://disease.sh/v3/covid-19/countries/PH%2C%20USA`.\r\nWe also have that loads all of the data of all continents which is this `https://disease.sh/v3/covid-19/continents` and that loads a specific for a continent which is this `https://disease.sh/v3/covid-19/continents/North%20America`.\r\n\r\n**Describe the solution you'd like**\r\nNow we can have an endpoint putting query parameters for continents separated by a comma and that should look like this. `https://disease.sh/v3/covid-19/continents/Asia%2CNorth%20America`,  and that should only load the data of a specific set of continents.\r\n"},{"labels":["enhancement"],"text":"Source: https://www.raps.org/news-and-articles/news-articles/2020/3/covid-19-vaccine-tracker\r\nCopyright notes: \r\n- [x] Identify the author;\r\n- [x] Prominently attribute the content to RAPS; and\r\n- [x] If made available online, include a hyperlink back to the original publication on RAPS’ website.\r\n\r\nTodo: \r\n- [x] Scraper\r\n- [x] Routes\r\n- [x] Tests\r\n- [x] Docs (copyright)\r\n- [ ] Email notification\r\n"},{"labels":["enhancement"],"text":"Hi, I am using the following url to get statistics for the country I live at, but I would also like to get history of cases by specific datetime, is it possible? \r\n\r\n`https://disease.sh/v3/covid-19/countries/israel`\r\n\r\nI've seen this model\r\n\r\n\r\ncountry | string\r\n-- | --\r\nprovince | string\r\n\r\nBut I'm not sure how to construct it with the current url i'm using, thanks. (POST maybe?)"},{"labels":["enhancement",null],"text":"### Source\r\ncountryUtils\r\n\r\n### Line\r\n87\r\n\r\n### Found\r\n```\r\nconst countryExceptions = ['UK', 'UAE', 'DR'];\r\n/**\r\n * Check for country exception when searching countries\r\n * @param \t{string} \tcountryname \tname of the country to be searched\r\n * @returns {boolean}\r\n */\r\nconst isCountryException = (countryname) => !!countryExceptions.find(exception => stringUtils.wordsStandardize(countryname) === stringUtils.wordsStandardize(exception));\r\n```\r\n### What-If\r\n`\r\nconst isCountryException = (countryname, countryExceptions = ['UK', 'UAE', 'DR'])`\r\n"},{"labels":["enhancement"],"text":"### Source\r\nPackage.json\r\n\r\n### Found\r\n`eslint ./**/*.js --fix --ignore-pattern node_modules/\"`\r\n\r\n### Suggested\r\n- [x] Create `.eslintignore.js` file. \r\n- [x] Add folders and files that will be ignored."},{"labels":["enhancement",null],"text":"**Is your feature request related to a problem? Please describe.**\r\nNo.\r\n\r\n**Describe the solution you'd like**\r\nAdd continent coordinates.\r\n\r\n**Additional context**\r\n```json\r\n{\r\n  \"NorthAmerica\": { \"lat\": 31.6768272, \"long\": -146.4707474 },\r\n  \"SouthAmerica\": { \"lat\": -15.6551563, \"long\": -100.7484231 },\r\n  \"Asia\": { \"lat\": 23.7027273, \"long\": 62.3750637 },\r\n  \"Europe\": { \"lat\": 25.771324, \"long\": -35.6012256 },\r\n  \"Africa\": { \"lat\": 1.7383867, \"long\": -16.3094636 },\r\n  \"Oceania\": { \"lat\": -8.6599161, \"long\": 91.1469847 }\r\n}\r\n```"},{"labels":["enhancement",null],"text":"**Is your feature request related to a problem? Please describe.**\r\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\r\nIsrael gov scraper, with links sent on discord: \r\n[Dashboard](https://datadashboard.health.gov.il/COVID-19/)\r\n[Translation](https://media.discordapp.net/attachments/727682901881389137/727930855451918496/Hebrew_translation.png)\r\n\r\n\r\n**Describe the solution you'd like**\r\nI’m going to write the scraper, this is so I don’t forget."},{"labels":["enhancement"],"text":"**Description :**\r\n\r\nAfter checking the `public/assets/img` folder I've noticed that it contains `png` and `jpg` images instead of `webp` or `svg`\r\n\r\n*Expected issues:**\r\n\r\n * Lose quality in small screens.\r\n * Large size and low performance.\r\n * Impossible to redesign the same file ( Image \r\n\r\n"},{"labels":["enhancement"],"text":"**Is your feature request related to a problem? Please describe.**\r\nMany government websites are too hard to scrape for detailed COVID-19 country data for various reasons (constantly changing formats, data posted as images etc). The official COVID-19 data sources from South Africa is an example of this.\r\n\r\nAlso, since the current NovelCOVID API endpoints do not provide granular country-level data, I had to go look for another reliable source for detailed South African COVID-19 data.\r\n\r\n**Describe the solution you'd like**\r\nhttps://en.wikipedia.org/wiki/Template:COVID-19_pandemic_data/South_Africa_medical_cases (click \"show\") lists some COVID-19 data per province within South Africa. Replacing \"South_Africa\" within the URL with other country names brings up their equivalents. **Note**: I only checked a few countries and found most of them to return something, but in different formats.\r\n\r\nI am only really interested in more granular South African data, which that Wikipedia source provides to some degree in what looks to be a scraper friendly format! Wikipedia could be used to scrape data for other countries as well, however, that would require a custom scraper to be coded for each country plus the maintenance work that goes along with it.\r\n\r\nAll-in-all what I am saying is that I am planning to write code to scrape the South African Wikipedia data myself, but why not write the scraper for this API rather then? It could serve as a data source for the **/gov/SouthAfrica** endpoint?\r\n\r\n\r\nLet me know your thoughts, if approved I'll go ahead with writing it for this API.\r\n"},{"labels":["enhancement"],"text":"Support data from Colombia government\r\n\r\nAdd this information in /v2/gov/colombia\r\n\r\nThis will return a json object like the other supported countries\r\n"},{"labels":["enhancement"],"text":"**Is your feature request related to a problem? Please describe.**\r\nTo reduce myself having to query `/countries/:query` each time I want to find a country, that can have aliases, having a way to view the possible names of a country will allow me to simply query the `/countries` endpoint once (when cached), and find the country in the array of countries.\r\n\r\n**Describe the solution you'd like**\r\nUsing `possibleNames` array from [`utils/countries.js`](https://github.com/NovelCOVID/API/blob/master/utils/countries.js).\r\n`/countries/:query` and `/countries` endpoint:\r\nNo data:\r\n```json\r\n\"countryInfo\": {\r\n    \"_id\": null,\r\n    \"iso2\": null,\r\n    \"iso3\": null,\r\n    \"lat\": 0,\r\n    \"long\": 0,\r\n    \"flag\": \"https://disease.sh/assets/img/flags/unknown.png\",\r\n    \"possibleNames\": []\r\n  },\r\n```\r\nWith data (UK for example):\r\n```json\r\n\"countryInfo\": {\r\n    \"_id\": 826,\r\n    \"iso2\": \"GB\",\r\n    \"iso3\": \"GBR\",\r\n    \"lat\": 54,\r\n    \"long\": -2,\r\n    \"flag\": \"https://disease.sh/assets/img/flags/gb.png\",\r\n    \"possibleNames\": [\"England\", \"United Kingdom\"]\r\n  },\r\n```\r\nPlease don't standardize the possible names.\r\n**Additional context**\r\nBefore, I'd have to fetch `/countries/england` each time, but now with my already cached `/countries/` data, I can just search the array of countries that meet the possible names.\r\n\r\nProbably something like this in [`utils/countryUtils.js`](https://github.com/NovelCOVID/API/blob/master/utils/countryUtils.js).\r\n```javascript\r\nreturn countryFound ? {\r\n\t\t_id: countryFound.id,\r\n\t\tcountry: countryFound.country,\r\n\t\tiso2: countryFound.iso2,\r\n\t\tiso3: countryFound.iso3,\r\n\t\tlat: countryFound.lat,\r\n\t\tlong: countryFound.long,\r\n\t\tflag: `https://disease.sh/assets/img/flags/${countryFound.iso2.toLowerCase()}.png`,\r\n                possibleNames: countryFound.possibleNames || []\r\n\t} : nullReturn;\r\n```\r\nHaving the no possible names as an empty array is just making it easier when searching client-side, but I'm OK with it being `null`."},{"labels":[null,"enhancement"],"text":"Add CONTRIBUTION guideline for improved collaboration in the open source project. It enables a self-onboarding concept for developers."},{"labels":["enhancement",null],"text":"Could the gov data have some sort of consistency to their keys and the way they are accessed?\r\nIn my app I was going to frequently fetch the list of countries with available gov data so as to not have the user update the app when the new gov data is available.\r\nBut I realized the response for each gov data is very different so I wouldn't be able to avoid the issue.\r\nI was thinking while scraping you parsed the data in a way that all the common data is in the same place and have the same key. Data such as name of regions, number of cases, number of deaths, number of recovered.\r\nI noticed some of the responses are just arrays of the objects and some have regions in an array object with different keys alongside other data. \r\nMay I propose you have an array for all the regions in an array object with the and then they have the cases number and the rest inside them using the same keys across gov data."},{"labels":["enhancement",null],"text":"Data obtained from www.covid19india.org. "},{"labels":["enhancement",null],"text":"I saw [this article on the Verge](https://www.theverge.com/2020/4/28/21240546/apple-maps-covid-19-testing-sites-mobility-trends) about Apple Maps including testing site locations - I was wondering if that's something that's accessible that you all might consider being able to provide as part of the API?\r\n\r\nI'm not sure how that fits in with the other endpoints as they're mostly statistics, but I'm imagining it as something that could be a helpful use case and given its location-based information, could be a nice addition."},{"labels":[null,"enhancement"],"text":"Move states endpoint to v2 base URL. Also merging this with #481 since yesterday data is available for US states but it doesn't list as a function.\r\n\r\n- [ ] Update JSDOC\r\n- [ ] Update Docs\r\n- [ ] Write more tests"},{"labels":["enhancement"],"text":"https://www.worldometers.info/coronavirus/country/us/\r\nYesterday data is available for US states but it doesn't list as a function."},{"labels":[null,"enhancement",null],"text":"Requested by @ebwinters, we should add to the documentation how often the API is updated, since it is asked frequently on the Discord server."},{"labels":["enhancement"],"text":"TODO\r\n- [x] DOCS\r\n- [x] JSDOC\r\n- [x] ADD TESTS"},{"labels":["enhancement",null],"text":"https://www.worldometers.info/coronavirus/ added two new columns to the table, Total tests and tests/ 1M pop. Is it possible to make them available in the API?"},{"labels":[null,"enhancement",null],"text":"- [x] /yesterday is still returning the world row from worldometers\r\n- [x] /yesterday does not support sorting\r\n- [x] /yesterday/{country} is missing\r\n\r\n- [x] /states does not support sorting\r\n- [x] /states/{state} is missing"},{"labels":["enhancement",null],"text":"Adding API call for historical data  (all and country) per Month"},{"labels":["enhancement"],"text":"As title"},{"labels":["enhancement"],"text":"I was asked about a use case where someone would like to make a clone of http://my-coronavirus-map.netlify.com/ which uses your API for a specific continent which includes multiple countries. Would it be possible to use the `/countries/{query}` endpoint with a delimited list of country codes?\r\n\r\nfor instance, if I wanted to look up North America, I would be able to do something like `/countries/us,ca,mx` theoretically\r\n\r\nIn the meantime, I'm just going to do a static list of the countries and filter the data which isn't bad, but thought that might be a nice native API feature.\r\n\r\nThanks"},{"labels":["enhancement"],"text":"Having an API call that would pull historical data for multiple countries at once would be extremely useful. Something like https://corona.lmao.ninja/v2/historical/usa,italy,france for names as parameters, or https://corona.lmao.ninja/v2/historical/840,380,250 for ids as parameters, or however you choose to implement it. "},{"labels":["enhancement"],"text":"I've just seen the way you guys managed to approach getting real-time data. However, when there's a change the users also have use ```setInterval``` to get the incoming data.\r\n\r\nI would recommend using [Socket.io](https://socket.io/) to emit events for a better user experience"},{"labels":["enhancement"],"text":"Now that we added recovered data, add it to all"},{"labels":["enhancement",null],"text":"I see that [time series data](https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series), which doesn't have city/county level data, is currently being used to back this API. In order to make retrieving more specific data possible, one could use [daily reports](https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_daily_reports/03-28-2020.csv) to update a local data source formatted in accordance to current requirements. This would initially require backfilling all the daily reports and ensuring there are no discrepancies between the new data source and the time series data (which shouldn't occur because the the time series data should rely on daily reports). If this feature is added, this API can be used for cases that require specific data. Also, this issue is similar to #56, #285 and #5, which shows people want this feature."},{"labels":["enhancement",null],"text":"https://www.arcgis.com/apps/opsdashboard/index.html#/f94c3c90da5b4e9f9a0b19484dd4bb14\r\n\r\nAdd to countries/uk a `countyData` field, and we can begin building this functionality for others once we have time and sources"},{"labels":["enhancement"],"text":"This is really great API! Thanks for developing it.\r\n\r\nThe `countries` endpoint now supports the ISO country codes in the search (#229 ). However, the v2 `historical` does not support the same. Would it be possible to add it, as ISO codes are sometimes easier to use?"},{"labels":["enhancement"],"text":"It would be sweet if there was an endpoint to pull historical data for the world numbers as well. Something like: https://corona.lmao.ninja/v2/historical/world. :) "},{"labels":["enhancement"],"text":""},{"labels":["enhancement"],"text":"current sample data from v2 end point. \r\n```json\r\n\"country\": \"afghanistan\",\r\n        \"province\": null,\r\n        \"timeline\": {\r\n            \"cases\": {\r\n                \"1/22/20\": 0,\r\n                \"1/23/20\": 0,\r\n                \"1/24/20\": 0,\r\n                \"1/25/20\": 0,\r\n                \"1/26/20\": 0,\r\n                \"1/27/20\": 0,\r\n                \"1/28/20\": 0,\r\n                \"1/29/20\": 0,\r\n                \"1/30/20\": 0,\r\n                \"1/31/20\": 0,\r\n              }\r\n          } \r\n```\r\nsuggest to put cases into a list and use \"date\" and \"value\" key instead of using actual date as key.\r\n```json\r\n\"country\": \"afghanistan\",\r\n        \"province\": null,\r\n        \"timeline\": {\r\n            \"cases\": [\r\n                {\"date\" : \"1/22/20\", \"value\": 0 },\r\n                {\"date\" : \"1/22/20\", \"value\": 0 },\r\n                {\"date\" : \"1/22/20\", \"value\": 0 },\r\n                ]\r\n          } \r\n```\r\n\r\n\r\n\r\n"},{"labels":[null,"enhancement",null],"text":"# Goals\r\n1. Set up a build pipeline for new infrastructure so that on merge API is updated live\r\n2. Give more trusted contributors merge access, allowing faster hot fixes with build pipeline  "},{"labels":["enhancement"],"text":"Hello, please add ISO2 code of all countries in the request https://corona.lmao.ninja/v2/historical"},{"labels":["enhancement",null],"text":"Data for people who have recovered has been removed from version 2"},{"labels":["enhancement"],"text":"Instead of adding yesterday's data we can add a date slider range to filter out data."},{"labels":["enhancement",null,null],"text":"I was messing about with some of the original API code from when you first released it publicly,\r\nI managed to get a scraper working for the 'yesterdays statistics' simply by doing:\r\n\r\n```js\r\n let response;\r\n    try {\r\n      response = await axios.get(\"https://www.worldometers.info/coronavirus/#nav-yesterday\");\r\n      if (response.status !== 200) {\r\n        console.log(\"Error\", response.status);\r\n      }\r\n    } catch (err) {\r\n      return null;\r\n    }\r\n  \r\n    // to store parsed data\r\n    const result = [];\r\n  \r\n    // get HTML and parse death rates\r\n    const html = cheerio.load(response.data);\r\n    const countriesTable = html(\"table#main_table_countries_yesterday\");\r\n    const countriesTableCells = countriesTable\r\n      .children(\"tbody\")\r\n      .children(\"tr\")\r\n      .children(\"td\");\r\n  \r\n     // NOTE: this will change when table format change in website\r\n     const totalColumns = 10;\r\n     const countryColIndex = 0;\r\n     const casesColIndex = 1;\r\n     const todayCasesColIndex = 2;\r\n     const deathsColIndex = 3;\r\n     const todayDeathsColIndex = 4;\r\n     const curedColIndex = 5;\r\n     const activeColIndex = 6;\r\n     const criticalColIndex = 7;\r\n     const casesPerOneMillionColIndex = 8;\r\n     const deathsPerOneMillionColIndex = 9;\r\n```\r\n\r\nI think this should be added to the API, unless the JHU endpoint does the same functionality.\r\nCerberus.\r\n[Full Scraper Code](https://github.com/NovelCOVID/API/files/4381369/message.txt)\r\n"},{"labels":["enhancement"],"text":"It would be great to be able to drill down into state data or even further by county or city data. Currently you can only see the overall status of the country of USA, when I see the source website you're getting data from has state information available to scrape.\r\n\r\nExample, on the worldometers site when you select USA, I see state information: https://www.worldometers.info/coronavirus/country/us/"},{"labels":["enhancement"],"text":"It would be great if we have an endpoint or data from yesterday's table, We can use it to visualize more to the Users. \r\n"},{"labels":["enhancement"],"text":"It would be great if you can add some more fields to /all endpoints so we show more information to the users. i.e. TotalNewCases, TotalNewDeaths.\r\n![image](https://user-images.githubusercontent.com/40605124/77029998-52fbe300-69c3-11ea-9e49-04f4ccc92801.png)\r\n"},{"labels":["enhancement"],"text":"Please add ISO code"},{"labels":["enhancement"],"text":"![image](https://user-images.githubusercontent.com/11762429/76786579-35960180-6796-11ea-80b2-f42561f3a484.png)"},{"labels":["enhancement"],"text":"I am working on a site (using your data) right now that users could search by country by typing in the country name and results for that country would be returned. i'll keep you up to date."},{"labels":["enhancement"],"text":"How could we get data city wise ?"}]