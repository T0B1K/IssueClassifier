[{"classified_as": "enhancement", "text": "Did the option to set the config for booleanValues change? The readme still references it.\n"}, {"classified_as": "bug", "text": "createdAt and updatedAt are fields which rarely miss from collections of modern applications.\r\n\r\nI suggest implementing this through a toggle parameter which when enabled, a trait would be injected in the model to implement those additional fields, and also bind to the lifecycle events to ensure the values are created/updated automatically.\r\n\r\njson\r\n{\r\n  \"connection\": \"default\",\r\n  \"collectionName\": \"\",\r\n  \"timestamps\": true,\r\n  \"info\": {\r\n    \"name\": \"testimonial\",\r\n    \"description\": \"\"\r\n  },\r\n  \"attributes\": {\r\n    \"client\": {\r\n      \"type\": \"string\",\r\n      \"required\": true\r\n    },\r\n    \"position\": {\r\n      \"type\": \"string\"\r\n    },\r\n    \"context\": {\r\n      \"type\": \"text\",\r\n      \"required\": true\r\n    }\r\n  }\r\n}\r\n \r\n\r\nMore examples at https://laravel.com/docs/master/eloquent#defining-models under the Timestamps sub-section "}, {"classified_as": "enhancement", "text": "Hi\n\nI can't make my cloud function working with addUnique:\n\nmyVal = {\"a\":\"A\",\"b\":\"B\"};\n\nmyClass.addUnique(\"myArrayfield\", myVal);\n\nIt gives me bad request response.\n\nIt only works if myVal is a string but I want to save a JSON object. Furthermore, if I try to stringify, it adds symbols in my expression.\n"}, {"classified_as": "enhancement", "text": "Since the new upgrade check (#6385) we're getting a significant flood of upgrade requests. The problem is that some clients are stuck in restart loops, for various reasons, and hammer the upgrade server. We can of course offload this in various ways (CDNs and whatnot) but it still seems like an oversight that we should handle better...\r\n\r\nServer side rate limiting at the HTTPS level isn't enormously useful as the main cost is in the TLS handshake to begin with."}, {"classified_as": "enhancement", "text": "When choosing xml or json response types, the options are being lost\n"}, {"classified_as": "bug", "text": "*Note: This is not an actual feature request, but I wasn't sure what issue category to select.*\r\n\r\nHi, I'm a new contributor looking to help out, and I saw that the [perltodo](https://github.com/Perl/perl5/blob/blead/Porting/todo.pod#profile-installman) included an item requesting someone profile the installman script to see what it was doing that was taking so long, so I built the latest development release and profiled it.\r\n\r\nThe original data contained 1207 distinct functions, most of which contributed negligibly to the runtime duration, so I've included only the top 100 functions. Please let me know if I can provide any additional information.\r\n\r\n# Profiling\r\n\r\nThe profiling was conducted using the following command:\r\n\r\n    perf record --event=\"{cycle_activity.stalls_total,duration_time,instructions,cpu-cycles,cache-references,cache-misses,branch-misses,context-switches,page-faults,major-faults,kmem:kmalloc,kmem:kfree,kmem:mm_page_alloc,kmem:mm_page_free}\" ./installman\r\n\r\n## Results\r\n\r\nThe following table contains the results of the profiling.\r\n\r\n | cycle_activity.stalls_total   | instructions  | cpu-cycles  | cache-references  | cache-misses          | function |\r\n | :-: | :-: | :-: | :-: | :-: | :-: |\r\n | 9.36%   | 33.62%  | 20.47%  | 5.40%  | 2.49%          | S_regtry |\r\n | 5.48%   | 3.68%  | 4.73%  | 8.95%  | 5.45%          | Perl_hv_common |\r\n | 5.20%   | 2.49%  | 4.45%  | 6.16%  | 4.44%          | Perl_pp_multideref |\r\n | 4.32%   | 1.31%  | 2.73%  | 5.10%  | 4.27%          | Perl_pp_entersub |\r\n | 3.49%   | 3.68%  | 3.28%  | 2.87%  | 1.98%          | Perl_sv_setsv_flags |\r\n | 3.41%   | 1.67%  | 2.82%  | 3.55%  | 3.27%          | Perl_pp_padsv |\r\n | 3.13%   | 6.78%  | 4.54%  | 1.58%  | 1.31%          | Perl_leave_scope |\r\n | 2.70%   | 1.92%  | 3.06%  | 3.76%  | 3.48%          | Perl_pp_nextstate |\r\n | 2.28%   | 2.06%  | 2.21%  | 1.99%  | 1.93%          | Perl_sv_clear |\r\n | 2.21%   | 0.62%  | 1.29%  | 0.42%  | 0.12%          | Perl_utf8_length |\r\n | 1.80%   | 0.96%  | 1.46%  | 1.92%  | 1.11%          | Perl_pp_and |\r\n | 1.62%   | 0.52%  | 1.10%  | 1.61%  | 0.93%          | Perl_pp_method_named |\r\n | 1.61%   | 0.83%  | 1.13%  | 1.05%  | 1.92%          | libc-2.31.so  | __memmove_avx_unaligned_erms |\r\n | 1.51%   | 1.80%  | 1.77%  | 2.06%  | 0.85%          | Perl_regexec_flags |\r\n | 1.46%   | 0.96%  | 1.22%  | 1.36%  | 0.94%          | Perl_pp_rv2av |\r\n | 1.45%   | 0.36%  | 0.83%  | 1.49%  | 1.46%          | Perl_pp_pushmark |\r\n | 1.36%   | 0.54%  | 0.89%  | 1.52%  | 1.13%          | Perl_fbm_instr |\r\n | 1.24%   | 0.96%  | 1.00%  | 1.52%  | 1.14%          | Perl_re_intuit_start |\r\n | 1.20%   | 0.97%  | 1.07%  | 1.34%  | 0.91%          | Perl_pp_subst |\r\n | 1.16%   | 0.56%  | 0.89%  | 1.01%  | 1.08%          | libc-2.31.so  | _int_malloc |\r\n | 1.03%   | 0.30%  | 0.56%  | 1.12%  | 0.79%          | Perl_pp_multiconcat |\r\n | 1.00%   | 1.39%  | 1.02%  | 0.74%  | 0.35%          | S_regrepeat |\r\n | 0.97%   | 0.91%  | 0.94%  | 0.90%  | 0.80%          | Perl_runops_standard |\r\n | 0.97%   | 0.45%  | 0.96%  | 1.43%  | 1.40%          | Perl_pp_const |\r\n | 0.88%   | 1.61%  | 1.24%  | 0.93%  | 1.36%          | Perl_sv_upgrade |\r\n | 0.88%   | 0.66%  | 0.99%  | 1.17%  | 1.24%          | Perl_pp_match |\r\n | 0.86%   | 0.87%  | 0.81%  | 1.44%  | 0.79%          | Perl_pp_aassign |\r\n | 0.84%   | 1.11%  | 0.88%  | 0.82%  | 1.10%          | libc-2.31.so  | _int_free |\r\n | 0.78%   | 0.30%  | 0.53%  | 0.69%  | 0.42%          | Perl_vivify_ref |\r\n | 0.74%   | 0.57%  | 0.89%  | 1.00%  | 0.56%          | Perl_pp_enter |\r\n | 0.70%   | 0.39%  | 0.51%  | 0.80%  | 0.53%          | Perl_pp_cond_expr |\r\n | 0.66%   | 0.52%  | 0.58%  | 0.54%  | 0.25%          | Perl_do_trans |\r\n | 0.66%   | 0.39%  | 0.56%  | 0.83%  | 0.71%          | Perl_pp_or |\r\n | 0.62%   | 0.24%  | 0.52%  | 0.74%  | 0.73%          | Perl_pp_gvsv |\r\n | 0.61%   | 0.35%  | 0.46%  | 0.34%  | 0.38%          | libc-2.31.so  | cfree@GLIBC_2.2.5 |\r\n | 0.59%   | 0.26%  | 0.39%  | 0.32%  | 0.32%          | libc-2.31.so  | __memchr_avx2 |\r\n | 0.58%   | 0.93%  | 0.82%  | 0.42%  | 0.53%          | libc-2.31.so  | malloc |\r\n | 0.58%   | 0.49%  | 0.69%  | 0.51%  | 0.47%          | Perl_pp_leave |\r\n | 0.58%   | 0.21%  | 0.39%  | 0.45%  | 0.23%          | Perl_pp_padav |\r\n | 0.55%   | 0.77%  | 0.69%  | 1.33%  | 0.74%          | Perl_pp_padrange |\r\n | 0.53%   | 0.35%  | 0.43%  | 0.27%  | 0.49%          | Perl_sv_catpvn_flags |\r\n | 0.53%   | 0.14%  | 0.28%  | 0.50%  | 0.18%          | Perl_pp_splice |\r\n | 0.49%   | 0.52%  | 0.55%  | 0.56%  | 0.36%          | Perl_pp_sassign |\r\n | 0.49%   | 0.19%  | 0.44%  | 0.57%  | 0.84%          | S_share_hek_flags |\r\n | 0.45%   | 0.11%  | 0.21%  | 0.32%  | 0.24%          | S_find_byclass |\r\n | 0.43%   | 0.18%  | 0.26%  | 0.31%  | 0.15%          | libc-2.31.so  | _int_realloc |\r\n | 0.42%   | 0.59%  | 0.54%  | 0.52%  | 0.33%          | Perl_av_fetch |\r\n | 0.42%   | 0.49%  | 0.69%  | 0.54%  | 0.50%          | Perl_pp_leavesub |\r\n | 0.41%   | 0.14%  | 0.25%  | 0.58%  | 0.43%          | Perl_pp_seq |\r\n | 0.39%   | 0.11%  | 0.24%  | 0.31%  | 0.15%          | Perl_pp_return |\r\n | 0.38%   | 1.74%  | 0.96%  | 0.19%  | 0.06%          | S_reginclass |\r\n | 0.38%   | 0.29%  | 0.29%  | 0.30%  | 0.16%          | libc-2.31.so  | __libc_calloc |\r\n | 0.38%   | 0.19%  | 0.24%  | 0.37%  | 0.20%          | Perl_mg_find |\r\n | 0.37%   | 0.16%  | 0.25%  | 0.31%  | 0.21%          | Perl_pp_defined |\r\n | 0.34%   | 0.19%  | 0.26%  | 0.24%  | 0.18%          | Perl_sv_force_normal_flags |\r\n | 0.33%   | 0.26%  | 0.26%  | 0.19%  | 0.22%          | Perl_pp_unstack |\r\n | 0.33%   | 0.23%  | 0.35%  | 0.46%  | 0.57%          | S_sv_uncow |\r\n | 0.33%   | 0.10%  | 0.19%  | 0.12%  | 0.04%          | Perl_pp_leaveloop |\r\n | 0.32%   | 0.36%  | 0.33%  | 0.21%  | 0.28%          | Perl_sv_free2 |\r\n | 0.32%   | 0.25%  | 0.29%  | 0.31%  | 0.35%          | Perl_pp_iter |\r\n | 0.32%   | 0.09%  | 0.25%  | 0.35%  | 0.22%          | libc-2.31.so  | __memcmp_avx2_movbe |\r\n | 0.32%   | 0.08%  | 0.15%  | 0.20%  | 0.10%          | Perl_pp_not |\r\n | 0.30%   | 0.48%  | 0.38%  | 0.56%  | 0.16%          | Perl_mg_get |\r\n | 0.30%   | 0.28%  | 0.33%  | 0.25%  | 0.34%          | Perl_leave_adjust_stacks |\r\n | 0.29%   | 0.08%  | 0.18%  | 0.13%  | 0.16%          | libc-2.31.so  | __memset_avx2_unaligned_erms |\r\n | 0.28%   | 0.17%  | 0.33%  | 0.80%  | 0.34%          | Perl_sv_eq_flags |\r\n | 0.26%   | 0.15%  | 0.21%  | 0.18%  | 0.26%          | Perl_pp_ref |\r\n | 0.26%   | 0.09%  | 0.18%  | 0.28%  | 0.17%          | Perl_pp_gv |\r\n | 0.24%   | 0.07%  | 0.09%  | 0.13%  | 0.08%          | S_find_span_end_mask |\r\n | 0.24%   | 0.05%  | 0.12%  | 0.20%  | 0.09%          | Perl_pp_print |\r\n | 0.22%   | 0.40%  | 0.39%  | 0.26%  | 0.25%          | Perl_free_tmps |\r\n | 0.22%   | 0.29%  | 0.19%  | 0.37%  | 0.27%          | S_pushav |\r\n | 0.22%   | 0.24%  | 0.28%  | 0.33%  | 0.37%          | Perl_save_clearsv |\r\n | 0.22%   | 0.18%  | 0.28%  | 0.36%  | 0.25%          | Perl_hfree_next_entry |\r\n | 0.22%   | 0.11%  | 0.23%  | 0.21%  | 0.11%          | S_reg_set_capture_string.isra.0 |\r\n | 0.21%   | 0.39%  | 0.28%  | 0.17%  | 0.09%          | Perl_sv_grow |\r\n | 0.21%   | 0.10%  | 0.13%  | 0.24%  | 0.02%          | Perl_pp_trans |\r\n | 0.20%   | 0.20%  | 0.16%  | 0.23%  | 0.10%          | Perl_hv_iternext_flags.constprop.0 |\r\n | 0.20%   | 0.18%  | 0.15%  | 0.11%  | 0.13%          | libpthread-2.31.so  | __errno_location |\r\n | 0.20%   | 0.14%  | 0.19%  | 0.27%  | 0.20%          | Perl_pp_enterloop |\r\n | 0.20%   | 0.10%  | 0.10%  | 0.08%  | 0.12%          | Perl_newSVpvn_flags |\r\n | 0.20%   | 0.09%  | 0.13%  | 0.28%  | 0.16%          | S_gv_fetchmeth_internal |\r\n | 0.20%   | 0.04%  | 0.07%  | 0.12%  | 0.00%          | Perl_pp_substr |\r\n | 0.18%   | 0.21%  | 0.16%  | 0.11%  | 0.06%          | Perl_safesysmalloc |\r\n | 0.18%   | 0.14%  | 0.23%  | 0.17%  | 0.15%          | libc-2.31.so  | realloc |\r\n | 0.18%   | 0.10%  | 0.12%  | 0.16%  | 0.07%          | Perl_pp_anonhash |\r\n | 0.18%   | 0.08%  | 0.09%  | 0.09%  | 0.04%          | Perl_sv_2pv_flags |\r\n | 0.18%   | 0.04%  | 0.11%  | 0.25%  | 0.06%          | Perl_pp_gt |\r\n | 0.17%   | 0.21%  | 0.27%  | 0.37%  | 0.14%          | Perl_pp_push |\r\n | 0.17%   | 0.13%  | 0.12%  | 0.25%  | 0.34%          | Perl_pp_substcont |\r\n | 0.17%   | 0.11%  | 0.16%  | 0.14%  | 0.03%          | S_cleanup_regmatch_info_aux |\r\n | 0.17%   | 0.07%  | 0.10%  | 0.15%  | 0.13%          | Perl_pp_split |\r\n | 0.17%   | 0.06%  | 0.10%  | 0.16%  | 0.13%          | Perl_pp_i_eq |\r\n | 0.17%   | 0.04%  | 0.05%  | 0.10%  | 0.13%          | Perl_pp_length |\r\n | 0.16%   | 0.11%  | 0.21%  | 0.23%  | 0.39%          | Perl_pp_aelemfast |\r\n | 0.16%   | 0.10%  | 0.09%  | 0.05%  | 0.07%          | Perl_gp_free |\r\n | 0.16%   | 0.08%  | 0.11%  | 0.20%  | 0.07%          | Perl_pp_concat |\r\n | 0.14%   | 0.17%  | 0.14%  | 0.10%  | 0.11%          | Perl_sv_unref_flags |\r\n | 0.14%   | 0.11%  | 0.18%  | 0.19%  | 0.27%          | Perl_pp_shift |\r\n\r\n## Environment\r\n\r\n### Perl Version\r\n\r\nThe version of Perl I used to profile was 5.33.0, which I built immediately before the profiling. I downloaded the source package from the [CPAN](https://www.cpan.org) using [this link](https://www.cpan.org/src/5.0/perl-5.33.0.tar.gz).\r\n\r\n#### Configuration\r\n\r\nI configured the source package using the following command.\r\n\r\n    ./Configure -des -Dprefix=./test-installation/ -Dusedevel -Doptimize=-O3 -Accflags=-march=native\r\n\r\nAfter building, I made sure to run make test. Some tests were skipped, but every test that was run was successful.\r\n\r\nThe following is the output of running perl -V -I. -Ilib.\r\n\r\n\r\nSummary of my perl5 (revision 5 version 33 subversion 0) configuration:\r\n   \r\n  Platform:\r\n    osname=linux\r\n    osvers=5.7.9-1-manjaro\r\n    archname=x86_64-linux\r\n    uname='linux www1 5.7.9-1-manjaro #1 smp preempt thu jul 16 08:20:05 utc 2020 x86_64 gnulinux '\r\n    config_args='-des -Dprefix=./test-installation/ -Dusedevel -Doptimize=-O3 -Accflags=-march=native'\r\n    hint=recommended\r\n    useposix=true\r\n    d_sigaction=define\r\n    useithreads=undef\r\n    usemultiplicity=undef\r\n    use64bitint=define\r\n    use64bitall=define\r\n    uselongdouble=undef\r\n    usemymalloc=n\r\n    default_inc_excludes_dot=define\r\n    bincompat5005=undef\r\n  Compiler:\r\n    cc='cc'\r\n    ccflags ='-march=native -fwrapv -fno-strict-aliasing -pipe -fstack-protector-strong -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_FORTIFY_SOURCE=2'\r\n    optimize='-O3'\r\n    cppflags='-march=native -fwrapv -fno-strict-aliasing -pipe -fstack-protector-strong -I/usr/local/include'\r\n    ccversion=''\r\n    gccversion='10.1.0'\r\n    gccosandvers=''\r\n    intsize=4\r\n    longsize=8\r\n    ptrsize=8\r\n    doublesize=8\r\n    byteorder=12345678\r\n    doublekind=3\r\n    d_longlong=define\r\n    longlongsize=8\r\n    d_longdbl=define\r\n    longdblsize=16\r\n    longdblkind=3\r\n    ivtype='long'\r\n    ivsize=8\r\n    nvtype='double'\r\n    nvsize=8\r\n    Off_t='off_t'\r\n    lseeksize=8\r\n    alignbytes=8\r\n    prototype=define\r\n  Linker and Libraries:\r\n    ld='cc'\r\n    ldflags =' -fstack-protector-strong -L/usr/local/lib'\r\n    libpth=/usr/local/lib /usr/lib/gcc/x86_64-pc-linux-gnu/10.1.0/include-fixed /usr/lib /lib/../lib /usr/lib/../lib /lib /lib64 /usr/lib64\r\n    libs=-lpthread -lnsl -lgdbm -ldb -ldl -lm -lcrypt -lutil -lc -lgdbm_compat\r\n    perllibs=-lpthread -lnsl -ldl -lm -lcrypt -lutil -lc\r\n    libc=libc-2.31.so\r\n    so=so\r\n    useshrplib=false\r\n    libperl=libperl.a\r\n    gnulibc_version='2.31'\r\n  Dynamic Linking:\r\n    dlsrc=dl_dlopen.xs\r\n    dlext=so\r\n    d_dlsymun=undef\r\n    ccdlflags='-Wl,-E'\r\n    cccdlflags='-fPIC'\r\n    lddlflags='-shared -O3 -L/usr/local/lib -fstack-protector-strong'\r\n\r\n\r\nCharacteristics of this binary (from libperl): \r\n  Compile-time options:\r\n    HAS_TIMES\r\n    PERLIO_LAYERS\r\n    PERL_COPY_ON_WRITE\r\n    PERL_DONT_CREATE_GVSV\r\n    PERL_MALLOC_WRAP\r\n    PERL_OP_PARENT\r\n    PERL_PRESERVE_IVUV\r\n    PERL_USE_DEVEL\r\n    USE_64_BIT_ALL\r\n    USE_64_BIT_INT\r\n    USE_LARGE_FILES\r\n    USE_LOCALE\r\n    USE_LOCALE_COLLATE\r\n    USE_LOCALE_CTYPE\r\n    USE_LOCALE_NUMERIC\r\n    USE_LOCALE_TIME\r\n    USE_PERLIO\r\n    USE_PERL_ATOF\r\n  Built under linux\r\n  Compiled at Aug  8 2020 23:32:13\r\n  @INC:\r\n    .\r\n    lib\r\n    ./test-installation/lib/perl5/site_perl/5.33.0/x86_64-linux\r\n    ./test-installation/lib/perl5/site_perl/5.33.0\r\n    ./test-installation/lib/perl5/5.33.0/x86_64-linux\r\n    ./test-installation/lib/perl5/5.33.0\r\n\r\n\r\n### Operating System\r\n\r\nThe following is the output from uname -a.\r\n\r\n    Linux www1 5.7.9-1-MANJARO #1 SMP PREEMPT Thu Jul 16 08:20:05 UTC 2020 x86_64 GNU/Linux\r\n"}, {"classified_as": "enhancement", "text": "The \"number of items to display\" option at the foot of the pop-up page is (thankfully!) persistent, but so is the page number.  When the pop-up page is closed _(either with the \"Close\" button or by clicking on originating page \"behind\" the pop-up page)_, the page number that was being displayed is also persistent, so that on re-opening the pop-up _(which always displays page 1 of the refreshed list)_, the page number displayed is wrong - should be 1, of course.\r\n\r\n**A very, VERY minor bug in a superb package!**\r\n\r\nMay I be a nuisance and - as it's related to the same part of SyncThing - mention a preference?   It would be good if the page selector could be at the top of the pop-up as well as it would save a lot of scrolling when 50 items are being displayed.\r\n\r\n\r\n### Version Information\r\n\r\nSyncthing Version: v1.3.4 (Linux 64-bit)\r\nOS Version: Windows 7 (for SyncThing monitoring)\r\nBrowser Version: Firefox 74 (64-bit)\r\n\r\n"}, {"classified_as": "enhancement", "text": "@estrada9166 recently brought up that test/parallel/test-repl-save-load.js is not working as it should. It should fail as is it but the errors are swallowed due to calling complete.\r\n\r\nIt seems like the domain does not propagate the error properly and it's silently swallowed. Adding an error listener to the active domain in the complete function that throws the error fixes the problem but it causes some side effects in other cases. We should only add the listener to the domains that do not handle the error properly at the moment.\r\n\r\nPing @Trott since you fixed some of these cases before."}, {"classified_as": "enhancement", "text": "In SwaggerUIBundle,validatorUrl set it to false will disable validation is right.\r\n\r\nversion:3.0.6\r\n\r\n"}, {"classified_as": "enhancement", "text": "Hey,\r\nimage bellow for thousand words. I've listed the files manually and don't see discrepancy. Tried to restart services on both sides, to no avail.\r\n\r\nLet me know what additional information I should provide.\r\n\r\nThank you\r\n \r\n![Screenshot from 2020-04-23 08-10-21](https://user-images.githubusercontent.com/8431097/80065129-ea5fd300-8539-11ea-84ec-21eca056432f.png)\r\n\r\n\r\n"}, {"classified_as": "enhancement", "text": "on master branch 3.1.2 package.json\r\n\r\n\r\n\"dependencies\": {\r\n    \"less\": \"2.7.1\",\r\n  },\r\n  \"devDependencies\": {\r\n    \"less\": \"2.7.2\",\r\n  },\r\n\r\n"}, {"classified_as": "enhancement", "text": "Got a javascript error that refreshNeed doesn't exist - cause is clearly #6452 thus it's RC material (forgot to take a screenshot, but it's trivial really)."}, {"classified_as": "enhancement", "text": "We're trying to document an existing API by creating the JSON definition files by hand.  The resource listing file has baseUrl set to the location of the JSON files.  The API definitions files have baseUrl set to the location of the API.\n\nWith this setup, the definitions are loaded correctly, and the API samples work (if CORS headers are set up right), but nowhere in the displayed documentation tells you the base URL for the API calls - the page footer references the base URL for the JSON, which is not very helpful to the readers. :-)\n\nPS It really wasn't a good idea to have two baseUrl parameters with different meanings depending on which JSON file they appear in.\n"}, {"classified_as": "bug", "text": "### Description \r\nRunning npm install and then npm run bootstrap will fail with an unsupported version of node.\r\n.nvmrc can be used to guarantee everyone is developing with the same version of node.\r\n\r\nbefore running npm install the recommended command to run is nvm use which will set the appropriate version of node.\r\n\r\n\r\n#### Expected behavior\r\n<!---------------------------------------------------------------------\r\n    Example:\r\n    Calling npm run bootstrap should succeed\r\n----------------------------------------------------------------------->\r\n\r\n\r\n#### Actual behavior\r\n<!---------------------------------------------------------------------\r\n    Example:\r\n    Calling npm run bootstrap with an unsupported version of node fails\r\n----------------------------------------------------------------------->\r\n\r\n\r\n#### Steps to reproduce the behavior\r\n<!---------------------------------------------------------------------\r\n    Example:\r\n    1. clone the repo\r\n    2. npm install\r\n    3. npm run bootstrap\r\n----------------------------------------------------------------------->\r\n\r\n\r\n#### Error Logs\r\n"}, {"classified_as": "enhancement", "text": "Hi,\n\nI create an ParseObject in client side, \nthen, try to update the record using below code.\n\n\n    ParseObject     record = ParseObject.CreateWithoutData(\"LockRecord\", objectID);\n    record.Increment(\"lock_count\");\n    Task run_task =   record.SaveAsync();\n\n\n..\n\n\nif(run_task.IsCanceled || run_task.IsFaulted)\n{\n// fail.....\n}\n\n\nthe saveAsync() failed....\n\nwhen I print out the exception msg, it said \"invalid key name: _noBody\"\n\nthis error happen after I host the server myself, it is not happened before~\n\nCan someone give me some hints? Thanks a lot.\n"}, {"classified_as": "enhancement", "text": "File upload is not working in 2.0, it comes back with a javascript error\n"}, {"classified_as": "bug", "text": "\r\n![screen shot 2017-09-21 at 7 37 02 pm](https://user-images.githubusercontent.com/12194969/30693950-6bde622a-9e97-11e7-8b2c-9f3ae0fd6e93.png)\r\n"}, {"classified_as": "enhancement", "text": "If the configured progress update interval is zero seconds the progress emitter starts and gets an interval of 0, meaning it gets scheduled 100% causing pain and suffering whenever there is a transfer in progress.\r\n"}, {"classified_as": "enhancement", "text": "Some things need to happen together or not at all (fileinfo updates, global list updates, and need index updates). This needs to happen in a transaction so that atomicness is guaranteed. Our current batches are close but no cigar."}, {"classified_as": "enhancement", "text": "On master\r\n\r\nCircular reference generate errors.\r\n\r\nLike \"Node\" contains a list of nodes for instance\r\n\r\n\r\nErrors\r\n\r\nResolver error\r\ntoo much recursion\r\nResolver error\r\ntoo much recursion\r\n\r\n\r\nParameters view is also broken\r\n\r\nMaybe relative to\r\nVery slow loading times #1919"}, {"classified_as": "enhancement", "text": "Previously closed issue #5866 has re-appeared again in ver. 1.3.0. The green \"shutdown\" flag flashes for a fraction of a second, and disappears.\r\n\r\nWindows 10 - 64 bit\r\nChrome Browser"}, {"classified_as": "enhancement", "text": "Hi,\n\nI have a very strange behavior when I save an object, and that I apply a beforeSave trigger on it.\n\nWe suppose we have an object with an attribute equal to \"100\". We also have a \"beforeSave\" trigger that modifies this value to \"50\", if some conditions are right.\n\nNow, when I call object.save(), the \"beforeSave\" is triggered, the value into the database is \"50\", but the value returned by the \"save\" operation is still \"100\".\n\nHow is it possible that the \"save\" operation returns an object with attributes different from what they are into the database?\n\nThank you.\n"}, {"classified_as": "enhancement", "text": "When saving a new PFUser on iOS, the SDK(?) throws this error:\n\nCaught \"NSInternalInconsistencyException\" with reason \"User cannot be saved unless they are already signed up. Call signUp first.\"\nWhen saving a new PFUser via Cloud Code, it does not throw that error but simply mimics a \"signUp\", which creates a session token for the server... in Cloud Code! (actually, read #3 as this may be a bug with the pfuser handling)\n\nFor sake of flexibility and consistency (with PFObjects), I think there should be an option to \"save\" a PFUser without having a session token created, or restricting (iOS) apps to always use PFUser.signUp. There are many use-cases for such a feature, and I feel that it is a meaningless restriction.\n\nPersonal use-case: I have some special logic to replace the standard \"signUp\" flow, which has me creating a PFUser via Cloud Code + MasterKey. But with how the \"save\" function is behaving, it's creating a session token for the server!\n\nRef #1490 \n"}, {"classified_as": "enhancement", "text": "the allowable values drop down is correctly showing possible values, but the defaultValue is not selected.  It should be\n"}, {"classified_as": "enhancement", "text": "DatabaseController.canAddField does not check whether a request is issued with a master key before verifying CLPs. This is not consistent with all other DB ops(create/update/read/delete). Is it this way by design? \n"}, {"classified_as": "enhancement", "text": "Hello,\n\nRefr @webron @ponelat \n\nWe identified a possible regression bug related to the \"no content\" bug\n\nBasically if the json returned is invalid, in previous versions you got the response back \nanyway but it told me that it was not able to parse it, now i yust get \"no content\"\n\nFor security reasons we prefix our json responses with \n)]}',\n{\"header\":{\"code\":200,\"text\":\"OK\",\"version\":\"1.0\"},\"data\":\"some data\"}\n"}, {"classified_as": "enhancement", "text": "Colons should not be encoded in URL path segments, according to https://tools.ietf.org/html/rfc3986#section-3.3"}, {"classified_as": "enhancement", "text": "Let's say you have a class called Foo and you have a business rule that says that no client is allowed to write data to a property called \"secret\".  So, you create a \n\n\nParse.Cloud.beforeSave\n\n\nmethod and inspect\n\n\nrequest.object.attributes\n\n\nand then call response.error if \"secret\" is found.  In this case, since the request has been rejected, you would not expect any schema updates to be made.  However, in this scenario, the schema gets updated and \"secret\" is added to the schema (if it's not already there) with whatever data type the bad request had for it.\n\nMy understanding of the code is that the reason for this is because, in RestWrite.prototype.execute, \n\n\n_this.validateSchema();\n\n\nis called before \n\n\n_this.runBeforeTrigger()\n\n\nI don't really know if this is considered a bug or not to most people, but at least I consider it a bug.  I'm just wondering if fixing it seems easy or possible.\n"}, {"classified_as": "enhancement", "text": "When trying to reset password on User who has empty email field, i.e. only has the email in username field, it throws error No user found with email\n### Steps to reproduce\n1. Register new user using an email and password. E.g. set user.Username = \"a@b.c\" - do not set email field.\n2. When registered, request password reset\n#### Expected Results\n\n\"This will attempt to match the given email with the user\u2019s email or username field, and will send them a password reset email.\" as stated in [docs](http://parseplatform.github.io/docs/dotnet/guide/).\n#### Actual Outcome\n\nReturns error: No user found with email a@b.c\n"}]