version: "3.8"
services:
  main:
    build:
      context: .
      args:
        DEBUG_MODE: "FALSE"
    image: &img issue_classifier:prod
    env_file: &env ./envs/.prod.env
    entrypoint: /microservice/entrypoints/main.sh
    depends_on: &dep
      - rabbitmq
      - redis
    restart: always
    volumes:
      - ./microservice:/microservice/microservice

  celery_bug_enhancement:
    build: .
    image: *img
    entrypoint: /microservice/entrypoints/celery_bug_enhancement.sh
    env_file: *env
    depends_on: *dep
    links:
      - rabbitmq
      - redis
    restart: always
    ports:
      - 3000:3000

  celery_api_enhancement:
    build: .
    image: *img
    entrypoint: /microservice/entrypoints/celery_api_enhancement.sh
    env_file: *env
    depends_on: *dep
    links:
      - rabbitmq
      - redis
    restart: always

  celery_api_bug:
    build: .
    image: *img
    entrypoint: /microservice/entrypoints/celery_api_bug.sh
    env_file: *env
    depends_on: *dep
    links:
      - rabbitmq
      - redis
    restart: always

  celery_doku_enhancement:
    build: .
    image: *img
    entrypoint: /microservice/entrypoints/celery_doku_enhancement.sh
    env_file: *env
    depends_on: *dep
    links:
      - rabbitmq
      - redis
    restart: always

  celery_doku_api_enhancement:
    build: .
    image: *img
    entrypoint: /microservice/entrypoints/celery_doku_api_enhancement.sh
    env_file: *env
    depends_on: *dep
    links:
      - rabbitmq
      - redis
    restart: always

  celery_doku_bug:
    build: .
    image: *img
    entrypoint: /microservice/entrypoints/celery_doku_bug.sh
    env_file: *env
    depends_on: *dep
    links:
      - rabbitmq
      - redis
    restart: always

  celery_doku_api_bug:
    build: .
    image: *img
    entrypoint: /microservice/entrypoints/celery_doku_api_bug.sh
    env_file: *env
    depends_on: *dep
    links:
      - rabbitmq
      - redis
    restart: always

  vectoriser:
    build: .
    image: *img
    entrypoint: /microservice/entrypoints/celery_vectoriser.sh
    env_file: *env
    depends_on: *dep
    links:
      - rabbitmq
      - redis
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672

  redis:
    image: redis:latest

  flower:
    image: mher/flower:0.9.4
    command: ["--broker=amqp://guest:guest@rabbitmq:5672//"]
    ports:
      - 5555:5555
    restart: unless-stopped
    depends_on:
      - rabbitmq
